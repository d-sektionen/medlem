{"version":3,"file":"component---src-components-attendance-page-js-237ffb86f30400d88620.js","mappings":"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","sources":["webpack://medlem/./src/components/attendance/attendantPanel.js","webpack://medlem/./src/components/attendance/addOccurrence.js","webpack://medlem/./src/components/attendance/page.js","webpack://medlem/./src/components/checkin/doorkeeperPanel.js","webpack://medlem/./src/scss/form.module.scss","webpack://medlem/./src/components/form/input.js","webpack://medlem/./src/components/form/form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst AttendantPanel = ({ currentOccurrence }) => {\n  if (!currentOccurrence) return <></>\n\n  const {\n    attendants,\n    attendant_limit: attendantLimit,\n    members_only: membersOnly,\n  } = currentOccurrence\n\n  return (\n    <div>\n      <h2>Deltagare</h2>\n      <p>Antal deltagare: {attendants.length}</p>\n      {attendantLimit !== 0 && <p>Deltagargräns: {attendantLimit}</p>}\n      <p>{membersOnly ? 'Endast för medlemmar' : 'Öppet för alla användare'}</p>\n      <ul>\n        {attendants.map(attendant => (\n          <li key={attendant.id}>{attendant.username}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default AttendantPanel\n","import React from 'react'\nimport AutoForm from '../form/form'\n\nconst AddOccurrence = ({ create }) => (\n  <AutoForm endpoint=\"/attendance/occurrences/\" customFetcher={create} />\n)\n\nexport default AddOccurrence\n","import React, { useState, useEffect } from 'react'\nimport useSWR from 'swr'\n\nimport AttendantPanel from './attendantPanel'\nimport DoorkeeperPanel from '../checkin/doorkeeperPanel'\nimport { GridContainer, GridItem } from '../ui/grid'\nimport BigPixels from '../layout/bigPixels'\nimport TitleChooser from '../ui/titleChooser'\nimport AddOccurrence from './addOccurrence'\nimport useModal, { useCloseModal } from '../modal/useModal'\nimport { post } from '../request'\n\nconst AttendancePage = ({ pageContext: { title } }) => {\n  const [currentOccurrence, setCurrentOccurrence] = useState(null)\n  const { data: unorderedOccurrences, mutate } = useSWR(\n    '/attendance/occurrences/'\n  )\n  const [openCreateModal] = useModal(AddOccurrence)\n  const closeModal = useCloseModal()\n\n  const create = async data => {\n    const { data: newOccurrence } = await post('/attendance/occurrences/', data)\n    mutate([...unorderedOccurrences, newOccurrence])\n  }\n\n  const occurrences = unorderedOccurrences\n    ? [...unorderedOccurrences].reverse()\n    : null\n\n  // sync currentOccurrence with updated occurrences\n  useEffect(\n    () => {\n      if (currentOccurrence)\n        setCurrentOccurrence(\n          unorderedOccurrences.find(m => m.id === currentOccurrence.id)\n        )\n    },\n    [unorderedOccurrences]\n  )\n\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem fullWidth>\n          <TitleChooser\n            title={title}\n            choice={currentOccurrence}\n            setChoice={setCurrentOccurrence}\n            choices={occurrences}\n            label=\"name\"\n            action={() => {\n              openCreateModal('Ny händelse', {\n                create: async data => {\n                  await create(data)\n                  closeModal()\n                },\n              })\n            }}\n            actionLabel=\"Ny händelse\"\n            noChoicesLabel=\"Det finns inga händelser just nu.\"\n          />\n        </GridItem>\n        {currentOccurrence && (\n          <>\n            <GridItem>\n              <AttendantPanel currentOccurrence={currentOccurrence} />\n            </GridItem>\n            <GridItem>\n              <DoorkeeperPanel event={currentOccurrence} />\n            </GridItem>\n          </>\n        )}\n      </GridContainer>\n    </BigPixels>\n  )\n}\n\nexport default AttendancePage\n","import React, { useState, useEffect } from 'react'\n\nimport { FiTrash2 } from 'react-icons/fi'\nimport { List, ListItem, ListButton } from '../ui/list'\nimport useSWR from 'swr'\nimport { post, del } from '../request'\n\nconst DoorkeeperPanel = ({ event }) => {\n  const [input, setInput] = useState('')\n\n  const { data: doorkeepers, mutate } = useSWR(\n    `/checkin/doorkeepers/?event_id=${event.id}`\n  )\n\n  const create = async data => {\n    const { data: newDoorkeeper } = await post('/checkin/doorkeepers/', data)\n    mutate([...doorkeepers, newDoorkeeper])\n    return newDoorkeeper\n  }\n\n  const destroy = async id => {\n    await del(`/checkin/doorkeepers/${id}/`)\n    mutate(doorkeepers.filter(d => d.id !== id))\n  }\n\n  return (\n    <div>\n      <h2>Dörrvakter</h2>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          setInput('')\n\n          create({\n            user_username: input,\n            event_id: event.id,\n          })\n        }}\n      >\n        <input\n          value={input}\n          placeholder=\"LiU-ID\"\n          onChange={e => setInput(e.target.value)}\n        />\n      </form>\n      <List>\n        {doorkeepers &&\n          doorkeepers.map(doorkeeper => (\n            <ListItem\n              title={doorkeeper.user.pretty_name}\n              key={doorkeeper.id}\n              buttons={[\n                <ListButton\n                  onClick={() => destroy(doorkeeper.id)}\n                  iconComponent={FiTrash2}\n                  text=\"Ta bort dörrvakt\"\n                  key=\"remove\"\n                />,\n              ]}\n            />\n          ))}\n      </List>\n    </div>\n  )\n}\n\nexport default DoorkeeperPanel\n","// extracted by mini-css-extract-plugin\nexport var Label = \"form-module--Label--ab587\";\nexport var inputWrapper = \"form-module--inputWrapper--1111e\";\nexport var required = \"form-module--required--7063a\";","import React, { useState, useEffect, useDeferredValue } from 'react'\nimport DateTimePicker from './dateTimePicker'\n\nimport { Label, Required, inputWrapper } from '../../scss/form.module.scss'\n\nconst AutoInput = ({\n  value,\n  onChange,\n  type,\n  label,\n  required,\n  min_value,\n  max_value,\n  min_length,\n  max_length,\n}) => {\n\n  const [initialOptions, setInitialOptions] = useState([])\n\n  // Set the initial options based on the first value received\n  useEffect(() => {\n    if (value) {\n      setInitialOptions(value)\n    }\n  }, []) // Run only once, when the component mounts\n\n  const change = e => {\n    onChange(e.target.value)\n  }\n  \n  const optionElementsCollection = initialOptions?.map((item) => (\n    <option key={item.id} value={item.id}>\n      {item.name}\n    </option>\n  ))\n\n  const map = {\n    datetime: <DateTimePicker required={required} value={value} onChange={onChange} />,\n    date: <input type=\"date\" required={required} value={value} onChange={change} />,\n    boolean: (\n      <input\n        type=\"checkbox\"\n        required={required}\n        checked={value}\n        onChange={e => {\n          onChange(e.target.checked)\n        }}\n      />\n    ),\n    integer: (\n      <input\n        type=\"number\"\n        required={required}\n        value={value}\n        onChange={change}\n        max={max_value}\n        min={min_value}\n      />\n    ),\n    field: (\n      <select\n        multiple\n        required={required}\n        value={value}\n        onChange={e =>\n          onChange(Array.from(e.target.selectedOptions, option => option.value))\n        }\n      >\n        {optionElementsCollection}\n      </select>\n    )\n  }\n\n  const component = Object.prototype.hasOwnProperty.call(map, type) ? (\n    map[type]\n  ) : (\n    <input\n      value={value}\n      onChange={change}\n      maxLength={max_length}\n      minLength={min_length}\n    />\n  )\n\n  return (\n    <label className={Label}>\n      {`${label}`}\n      {required && <span className={Required}>*</span>}\n      <div className={inputWrapper}>{component}</div>\n    </label>\n  )\n}\nexport default AutoInput\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport request, { options } from '../request'\nimport AutoInput from './input'\nimport { Button } from '../ui/buttons'\n\nconst AutoForm = ({ endpoint, method, customFetcher, onSubmit, defaults }) => {\n  const [fields, setFields] = useState()\n  const [values, setValues] = useState(defaults)\n  const [errors, setErrors] = useState({})\n\n  const setValue = (field, value) => {\n    setValues(old => ({ ...old, [field]: value }))\n  }\n\n  const setError = (field, error) => {\n    setErrors(old => ({ ...old, [field]: error }))\n  }\n\n  useEffect(() => {\n    // request endpoint info from server\n    options(endpoint)\n      .then(res => {\n        const raw = res.data.actions.POST\n\n        // object to array\n        const arrayified = Object.keys(raw).map(key => ({\n          key,\n          ...raw[key],\n        }))\n        const editable = arrayified.filter(f => !f.read_only)\n\n        setFields(editable)\n      })\n      .catch(err => {})\n  }, endpoint)\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault()\n        onSubmit()\n        if (customFetcher) {\n          customFetcher(values).catch(err => {\n            if (err.response) {\n              setErrors(err.response.data)\n            }\n          })\n        } else {\n          request({ endpoint, method, data: values })\n        }\n      }}\n    >\n      {fields &&\n        fields.map(field => (\n          <React.Fragment key={field.key}>\n            <AutoInput\n              {...field}\n              onChange={newValue => {\n                setValue(field.key, newValue)\n              }}\n              value={values[field.key]}\n            />\n            {Object.prototype.hasOwnProperty.call(errors, field.key) && (\n              <div>{errors[field.key].join(', ')}</div>\n            )}\n          </React.Fragment>\n        ))}\n      <Button type=\"submit\" onClick={() => {}}>\n        Submit\n      </Button>\n    </form>\n  )\n}\n\nAutoForm.defaultProps = {\n  method: 'POST',\n  customFetcher: null,\n  onSubmit: () => {},\n  defaults: {},\n}\n\nAutoForm.propTypes = {\n  method: PropTypes.string,\n  endpoint: PropTypes.string.isRequired,\n  customFetcher: PropTypes.func,\n  onSubmit: PropTypes.func,\n  defaults: PropTypes.object,\n}\n\nexport default AutoForm\n"],"names":["_ref","currentOccurrence","React","attendants","attendant_limit","attendantLimit","members_only","membersOnly","length","map","attendant","key","id","username","create","AutoForm","endpoint","customFetcher","pageContext","title","setCurrentOccurrence","useState","data","unorderedOccurrences","mutate","useSWR","openCreateModal","useModal","AddOccurrence","closeModal","useCloseModal","occurrences","_toConsumableArray","reverse","useEffect","find","m","BigPixels","GridContainer","GridItem","fullWidth","TitleChooser","choice","setChoice","choices","label","action","async","newOccurrence","post","concat","actionLabel","noChoicesLabel","AttendantPanel","DoorkeeperPanel","event","input","setInput","doorkeepers","onSubmit","e","preventDefault","newDoorkeeper","user_username","event_id","value","placeholder","onChange","target","List","doorkeeper","ListItem","user","pretty_name","buttons","ListButton","onClick","del","filter","d","destroy","iconComponent","FiTrash2","text","Label","inputWrapper","type","required","min_value","max_value","min_length","max_length","initialOptions","setInitialOptions","change","optionElementsCollection","item","name","datetime","DateTimePicker","date","boolean","checked","integer","max","min","field","multiple","Array","from","selectedOptions","option","component","Object","prototype","hasOwnProperty","call","maxLength","minLength","className","Required","method","defaults","fields","setFields","values","setValues","errors","setErrors","options","then","res","raw","actions","POST","editable","keys","f","read_only","catch","err","response","request","AutoInput","assign","newValue","setValue","old","join","Button","defaultProps"],"sourceRoot":""}