{"version":3,"file":"component---src-components-preferences-page-js-e104401e8059b334da19.js","mappings":"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","sources":["webpack://medlem/./src/scss/form.module.scss","webpack://medlem/./src/components/form/input.js","webpack://medlem/./src/components/form/form.js","webpack://medlem/./src/components/modal/useConfirmModal.js","webpack://medlem/./src/scss/preferences.module.scss","webpack://medlem/./src/components/preferences/preferences.js","webpack://medlem/./src/components/preferences/addCalendarSubscription.js","webpack://medlem/./src/components/preferences/calendarLink.js","webpack://medlem/./src/components/preferences/calendarSubscriptions.js","webpack://medlem/./src/components/preferences/page.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var Label = \"form-module--Label--ab587\";\nexport var inputWrapper = \"form-module--inputWrapper--1111e\";\nexport var required = \"form-module--required--7063a\";","import React, { useState, useEffect, useDeferredValue } from 'react'\r\nimport DateTimePicker from './dateTimePicker'\r\n\r\nimport { Label, Required, inputWrapper } from '../../scss/form.module.scss'\r\n\r\nconst AutoInput = ({\r\n  value,\r\n  onChange,\r\n  type,\r\n  label,\r\n  required,\r\n  min_value,\r\n  max_value,\r\n  min_length,\r\n  max_length,\r\n}) => {\r\n\r\n  const [initialOptions, setInitialOptions] = useState([])\r\n\r\n  // Set the initial options based on the first value received\r\n  useEffect(() => {\r\n    if (value) {\r\n      setInitialOptions(value)\r\n    }\r\n  }, []) // Run only once, when the component mounts\r\n\r\n  const change = e => {\r\n    onChange(e.target.value)\r\n  }\r\n  \r\n  const optionElementsCollection = initialOptions?.map((item) => (\r\n    <option key={item.id} value={item.id}>\r\n      {item.name}\r\n    </option>\r\n  ))\r\n\r\n  const map = {\r\n    datetime: <DateTimePicker required={required} value={value} onChange={onChange} />,\r\n    date: <input type=\"date\" required={required} value={value} onChange={change} />,\r\n    boolean: (\r\n      <input\r\n        type=\"checkbox\"\r\n        required={required}\r\n        checked={value}\r\n        onChange={e => {\r\n          onChange(e.target.checked)\r\n        }}\r\n      />\r\n    ),\r\n    integer: (\r\n      <input\r\n        type=\"number\"\r\n        required={required}\r\n        value={value}\r\n        onChange={change}\r\n        max={max_value}\r\n        min={min_value}\r\n      />\r\n    ),\r\n    field: (\r\n      <select\r\n        multiple\r\n        required={required}\r\n        value={value}\r\n        onChange={e =>\r\n          onChange(Array.from(e.target.selectedOptions, option => option.value))\r\n        }\r\n      >\r\n        {optionElementsCollection}\r\n      </select>\r\n    )\r\n  }\r\n\r\n  const component = Object.prototype.hasOwnProperty.call(map, type) ? (\r\n    map[type]\r\n  ) : (\r\n    <input\r\n      value={value}\r\n      onChange={change}\r\n      maxLength={max_length}\r\n      minLength={min_length}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <label className={Label}>\r\n      {`${label}`}\r\n      {required && <span className={Required}>*</span>}\r\n      <div className={inputWrapper}>{component}</div>\r\n    </label>\r\n  )\r\n}\r\nexport default AutoInput\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport request, { options } from '../request'\r\nimport AutoInput from './input'\r\nimport { Button } from '../ui/buttons'\r\n\r\nconst AutoForm = ({ endpoint, method, customFetcher, onSubmit, defaults }) => {\r\n  const [fields, setFields] = useState()\r\n  const [values, setValues] = useState(defaults)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const setValue = (field, value) => {\r\n    setValues(old => ({ ...old, [field]: value }))\r\n  }\r\n\r\n  const setError = (field, error) => {\r\n    setErrors(old => ({ ...old, [field]: error }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // request endpoint info from server\r\n    options(endpoint)\r\n      .then(res => {\r\n        const raw = res.data.actions.POST\r\n\r\n        // object to array\r\n        const arrayified = Object.keys(raw).map(key => ({\r\n          key,\r\n          ...raw[key],\r\n        }))\r\n        const editable = arrayified.filter(f => !f.read_only)\r\n\r\n        setFields(editable)\r\n      })\r\n      .catch(err => {})\r\n  }, endpoint)\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault()\r\n        onSubmit()\r\n        if (customFetcher) {\r\n          customFetcher(values).catch(err => {\r\n            if (err.response) {\r\n              setErrors(err.response.data)\r\n            }\r\n          })\r\n        } else {\r\n          request({ endpoint, method, data: values })\r\n        }\r\n      }}\r\n    >\r\n      {fields &&\r\n        fields.map(field => (\r\n          <React.Fragment key={field.key}>\r\n            <AutoInput\r\n              {...field}\r\n              onChange={newValue => {\r\n                setValue(field.key, newValue)\r\n              }}\r\n              value={values[field.key]}\r\n            />\r\n            {Object.prototype.hasOwnProperty.call(errors, field.key) && (\r\n              <div>{errors[field.key].join(', ')}</div>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      <Button type=\"submit\" onClick={() => {}}>\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAutoForm.defaultProps = {\r\n  method: 'POST',\r\n  customFetcher: null,\r\n  onSubmit: () => {},\r\n  defaults: {},\r\n}\r\n\r\nAutoForm.propTypes = {\r\n  method: PropTypes.string,\r\n  endpoint: PropTypes.string.isRequired,\r\n  customFetcher: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  defaults: PropTypes.object,\r\n}\r\n\r\nexport default AutoForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport useModal, { useCloseModal } from './useModal'\r\nimport { Button } from '../ui/buttons'\r\n\r\nimport { confirmation } from '../../scss/modal.module.scss'\r\n\r\nconst Confirmation = ({ text, onAccept, onDecline }) => {\r\n  const close = useCloseModal()\r\n  return (\r\n    <div className={confirmation}>\r\n      <p>{text}</p>\r\n      <Button\r\n        onClick={() => {\r\n          onDecline()\r\n          close()\r\n        }}\r\n      >\r\n        Nej\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          onAccept()\r\n          close()\r\n        }}\r\n      >\r\n        Ja\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nConfirmation.propTypes = {\r\n  text: PropTypes.string,\r\n  onAccept: PropTypes.func,\r\n  onDecline: PropTypes.func,\r\n}\r\n\r\nConfirmation.defaultProps = {\r\n  text: 'Är du säker?',\r\n  onAccept: () => {},\r\n  onDecline: () => {},\r\n}\r\n\r\nexport default function useConfirmModal() {\r\n  const [openModal, isOpen] = useModal(Confirmation)\r\n\r\n  const open = (text, onAccept, onDecline) => {\r\n    openModal('', { text, onAccept, onDecline })\r\n  }\r\n\r\n  return [open, isOpen]\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var Error = \"preferences-module--Error--64b4f\";\nexport var Success = \"preferences-module--Success--2a5c9\";\nexport var calendarSubNotice = \"preferences-module--calendarSubNotice--f06ca\";\nexport var inputLabel = \"preferences-module--inputLabel--8938d\";","import React, { Component } from 'react'\r\n\r\nimport { put, patch } from '../request'\r\n\r\nimport { inputLabel, Error, Success } from '../../scss/preferences.module.scss'\r\nimport { Button } from '../ui/buttons'\r\n\r\nclass Preferences extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    if (!props.user.profile) props.user.profile = {}\r\n\r\n    this.state = {\r\n      infomailSubscriber: props.user.profile.infomail_subscriber,\r\n      liuCardId: props.user.profile.liu_card_id,\r\n      firstName: props.user.first_name,\r\n      lastName: props.user.last_name,\r\n      errors: {},\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleChange(field, event, checkbox = false) {\r\n    if (checkbox) this.setState({ [field]: event.target.checked })\r\n    else this.setState({ [field]: event.target.value })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const { setLoading, setUser } = this.props\r\n\r\n    // reset errors\r\n    this.setState({ error: undefined, success: undefined, errors: {} })\r\n\r\n    setLoading(true)\r\n    put('/account/profile/me/', {\r\n      first_name: this.state.firstName,\r\n      last_name: this.state.lastName,\r\n      liu_card_id: this.state.liuCardId,\r\n      infomail_subscriber: this.state.infomailSubscriber,\r\n    })\r\n      .then(res => {\r\n        setLoading(false)\r\n        if (res.status < 300) {\r\n          this.setState({ success: 'Ändringarna har sparats.' })\r\n\r\n          setUser(prev => ({\r\n            ...prev,\r\n            first_name: res.data.firstName,\r\n            last_name: res.data.lastName,\r\n            profile: {\r\n              ...prev.profile,\r\n              liu_card_id: res.data.liu_card_id,\r\n              infomail_subscriber: res.data.infomail_subscriber,\r\n            },\r\n          }))\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setLoading(false)\r\n        if (!err.response) this.setState({ error: 'Nätverksfel.' })\r\n        else if (err.response.status === 400) {\r\n          this.getFormErrorText(err.response)\r\n        }\r\n      })\r\n    event.preventDefault()\r\n  }\r\n\r\n  /**\r\n   * Get error text to pass to setState.\r\n   * @param response - The response from the request.\r\n   * @returns Object - containing the error text.\r\n   */\r\n  getFormErrorText(response) {\r\n    if (response.data?.liu_card_id) {\r\n      return {\r\n        errors: {\r\n          profile: { liu_card_id: 'Det angivna LiU IDt är för långt.' },\r\n        },\r\n      }\r\n    }\r\n\r\n    return { error: 'Något gick fel.' }\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      liuCardId,\r\n      infomailSubscriber,\r\n      errors,\r\n      error,\r\n      success,\r\n    } = this.state\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h2>Profil</h2>\r\n        <p>\r\n          <strong>\r\n            {user.membership\r\n              ? `Du är sektionsmedlem.`\r\n              : 'Du saknar sektionsmedlemsskap.'}\r\n          </strong>\r\n        </p>\r\n        <div>\r\n          <label className={inputLabel}>\r\n            Förnamn:\r\n            <input\r\n              value={firstName}\r\n              onChange={e => this.handleChange('firstName', e)}\r\n            />\r\n          </label>\r\n          {errors.first_name && (\r\n            <div className={Error}>{errors.first_name}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className={inputLabel}>\r\n            Efternamn:\r\n            <input\r\n              value={lastName}\r\n              onChange={e => this.handleChange('lastName', e)}\r\n            />\r\n          </label>\r\n          {errors.last_name && <div className={Error}>{errors.last_name}</div>}\r\n        </div>\r\n        <div>\r\n          <label className={inputLabel}>\r\n            LiU-kortnummer:\r\n            <input\r\n              value={liuCardId}\r\n              onChange={e => this.handleChange('liuCardId', e)}\r\n            />\r\n          </label>\r\n          {errors.profile && errors.profile.liu_card_id && (\r\n            <div className={Error}>{errors.profile.liu_card_id}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className={inputLabel}>\r\n            Prenumerera på veckomailet:\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={infomailSubscriber}\r\n              onChange={e => this.handleChange('infomailSubscriber', e, true)}\r\n            />\r\n          </label>\r\n          {errors.profile && errors.profile.infomail_subscriber && (\r\n            <div className={Error}>{errors.profile.infomail_subscriber}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Button type=\"submit\">Spara</Button>\r\n        </div>\r\n        <div>\r\n          {error && <div className={Error}>{error}</div>}\r\n          {success && <div className={Success}>{success}</div>}\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Preferences\r\n","import React from 'react'\r\nimport AutoForm from '../form/form'\r\nimport useSWR from 'swr'\r\n\r\nconst AddCalendarSubscription = ({ create }) => {\r\n  const { data, mutate } = useSWR('/booking/items/')\r\n\r\n  const defaults = {\r\n    include_bookings: false,\r\n    include_events_attending: false,\r\n    include_events_not_attending: false,\r\n    include_bookable_items: data\r\n  }\r\n  return (\r\n    <AutoForm\r\n      endpoint=\"/account/calendar-subscriptions/\"\r\n      customFetcher={create}\r\n      defaults={defaults}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AddCalendarSubscription\r\n","import React from 'react'\r\nimport { Button } from '../ui/buttons'\r\n\r\nimport { calendarSubNotice } from '../../scss/preferences.module.scss'\r\n\r\nconst CalendarLink = ({ url }) => (\r\n  <>\r\n    <p>\r\n      Denna webbadress kan importeras i ditt kalenderprogram. Länken kommer\r\n      automatiskt hållas uppdaterad med nya händelser.\r\n    </p>\r\n    <div className={calendarSubNotice}>\r\n      <input value={url} readOnly />\r\n      <Button\r\n        onClick={() => {\r\n          // TODO: Error handling???\r\n          navigator.clipboard.writeText(url)\r\n        }}\r\n      >\r\n        Kopiera\r\n      </Button>\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default CalendarLink\r\n","import React, { useState } from 'react'\r\nimport useSWR from 'swr'\r\nimport { FiLink, FiTrash2 } from 'react-icons/fi'\r\nimport { List, ListItem, ListButton } from '../ui/list'\r\nimport useConfirmModal from '../modal/useConfirmModal'\r\nimport { del, post } from '../request'\r\nimport AddCalendarSubscription from './addCalendarSubscription'\r\nimport useModal, { useCloseModal } from '../modal/useModal'\r\nimport { Button } from '../ui/buttons'\r\nimport CalendarLink from './calendarLink'\r\n\r\n\r\n\r\nconst CalendarSubscriptions = () => {\r\n  const [openCreateModal] = useModal(AddCalendarSubscription)\r\n  const [openLinkModal] = useModal(CalendarLink)\r\n  const [openConfirmation] = useConfirmModal()\r\n  const closeModal = useCloseModal()\r\n  const { data: subs, mutate } = useSWR('/account/calendar-subscriptions/')\r\n  const bookableItems = useSWR('/booking/items/')\r\n  const getTitle = sub => {\r\n    const parts = []\r\n    if (sub.include_bookings_by_user) parts.push('bokningar av användare')\r\n    if (sub.include_bookable_items) {\r\n      sub.include_bookable_items.forEach(element => {\r\n        if(!bookableItems.isLoading){\r\n          parts.push(bookableItems.data.find(item => item.id === element).name)\r\n        }\r\n      });\r\n    }\r\n    const combined = parts.join(', ')\r\n    return combined.charAt(0).toUpperCase() + combined.substring(1)\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Kalenderprenumerationer</h2>\r\n      <List>\r\n        {subs &&\r\n          subs.map(sub => (\r\n            <ListItem\r\n              title={getTitle(sub)}\r\n              key={sub.id}\r\n              buttons={[\r\n                <ListButton\r\n                  iconComponent={FiLink}\r\n                  text=\"Visa länk\"\r\n                  onClick={() => {\r\n                    openLinkModal('Prenumerationslänk', {\r\n                      url: sub.url,\r\n                    })\r\n                  }}\r\n                  key=\"view\"\r\n                />,\r\n                <ListButton\r\n                  iconComponent={FiTrash2}\r\n                  text=\"Ta bort prenumeration\"\r\n                  onClick={() => {\r\n                    openConfirmation(\r\n                      'Är du säker på att du vill ta bort prenumerationen?',\r\n                      async () => {\r\n                        await del(`/account/calendar-subscriptions/${sub.id}/`)\r\n                        mutate(subs.filter(s => s.id !== sub.id))\r\n                      }\r\n                    )\r\n                  }}\r\n                  key=\"delete\"\r\n                />,\r\n              ]}\r\n            />\r\n          ))}\r\n      </List>\r\n      <Button\r\n        onClick={() => {\r\n          openCreateModal('Ny prenumeration', {\r\n            create: async data => {\r\n              const { data: newSub } = await post(\r\n                '/account/calendar-subscriptions/',\r\n                data\r\n              )\r\n              mutate([...subs, newSub])\r\n              closeModal()\r\n            },\r\n          })\r\n        }}\r\n      >\r\n        Ny prenumeration\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarSubscriptions\r\n","import React, { useContext } from 'react'\r\nimport { UserContext, LoadingContext } from '../layout/layout'\r\nimport Preferences from './preferences'\r\nimport BigPixels from '../layout/bigPixels'\r\nimport { GridContainer, GridItem } from '../ui/grid'\r\nimport CalendarSubscriptions from './calendarSubscriptions'\r\nimport TitleChooser from '../ui/titleChooser'\r\n\r\nconst PreferencesPage = ({ pageContext: { title } }) => {\r\n  const setLoading = useContext(LoadingContext)[1]\r\n  const [user, setUser] = useContext(UserContext)\r\n  return (\r\n    <BigPixels>\r\n      <GridContainer>\r\n        <GridItem fullWidth>\r\n          <TitleChooser title={title} />\r\n        </GridItem>\r\n        <GridItem>\r\n          <Preferences user={user} setUser={setUser} setLoading={setLoading} />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CalendarSubscriptions />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </BigPixels>\r\n  )\r\n}\r\n\r\nexport default PreferencesPage\r\n"],"names":["Label","inputWrapper","_ref","value","onChange","type","label","required","min_value","max_value","min_length","max_length","initialOptions","setInitialOptions","useState","useEffect","change","e","target","optionElementsCollection","map","item","React","key","id","name","datetime","DateTimePicker","date","boolean","checked","integer","max","min","field","multiple","Array","from","selectedOptions","option","component","Object","prototype","hasOwnProperty","call","maxLength","minLength","className","Required","AutoForm","endpoint","method","customFetcher","onSubmit","defaults","fields","setFields","values","setValues","errors","setErrors","options","then","res","raw","data","actions","POST","editable","keys","filter","f","read_only","catch","err","preventDefault","response","request","AutoInput","assign","newValue","setValue","old","join","Button","onClick","defaultProps","Confirmation","text","onAccept","onDecline","close","useCloseModal","confirmation","useConfirmModal","openModal","isOpen","useModal","open","Error","inputLabel","_Component","Preferences","props","_this","user","profile","state","infomailSubscriber","infomail_subscriber","liuCardId","liu_card_id","firstName","first_name","lastName","last_name","handleChange","bind","_assertThisInitialized","handleSubmit","_inheritsLoose","_proto","event","checkbox","this","setState","setLoading","setUser","error","undefined","success","put","status","prev","console","log","getFormErrorText","_response$data","render","membership","Component","create","mutate","useSWR","include_bookings","include_events_attending","include_events_not_attending","include_bookable_items","url","readOnly","navigator","clipboard","writeText","CalendarSubscriptions","openCreateModal","AddCalendarSubscription","openLinkModal","CalendarLink","openConfirmation","closeModal","subs","bookableItems","getTitle","sub","parts","include_bookings_by_user","push","forEach","element","isLoading","find","combined","charAt","toUpperCase","substring","List","ListItem","title","buttons","ListButton","iconComponent","FiLink","FiTrash2","async","del","s","newSub","post","concat","_toConsumableArray","pageContext","useContext","LoadingContext","UserContext","BigPixels","GridContainer","GridItem","fullWidth","TitleChooser"],"sourceRoot":""}