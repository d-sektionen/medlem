{"version":3,"sources":["webpack:///./src/components/attendance/occurrencePanel.js","webpack:///./src/components/attendance/attendantPanel.js","webpack:///./src/components/attendance/index.js","webpack:///./src/components/attendance/page.js","webpack:///./src/components/request/useRestEndpoint.js","webpack:///./src/components/ui/list.js","webpack:///./src/components/checkin/doorkeeperPanel.js"],"names":["OccurrencePanel","setCurrentOccurrence","currentOccurrence","newOccurrenceName","setNewOccurrenceName","useState","list","create","unorderedOccurrences","useRestEndpoint","endpoint","occurrences","reverse","useEffect","length","value","id","undefined","onChange","e","find","occurrence","target","map","key","name","onSubmit","preventDefault","then","res","data","AttendantPanel","attendants","attendant_limit","attendantLimit","attendant","username","Attendance","event","AttendancePage","objHasProperty","args","Object","prototype","hasOwnProperty","call","appendPK","config","pk","rv","forEach","setLoading","useContext","LoadingContext","setData","error","setError","params","request","method","Promise","resolve","catch","err","reject","retrieve","prevData","filter","obj","update","body","destroy","List","children","className","style","ListItem","title","subtitle","buttons","listText","listButtons","ListButton","onClick","iconComponent","Icon","text","shown","type","defaultProps","DoorkeeperPanel","input","setInput","doorkeepers","event_id","user_username","doorkeeper","user","pretty_name","FiTrash2"],"mappings":"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","file":"component---src-components-attendance-page-js-b17cdc5338cc107f499a.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport style from '../../scss/checkin.module.scss'\nimport { useEndpoint, del, get } from '../request'\nimport { FiTrash2 } from 'react-icons/fi'\nimport useRestEndpoint from '../request/useRestEndpoint'\n\nconst OccurrencePanel = ({ setCurrentOccurrence, currentOccurrence }) => {\n  const [newOccurrenceName, setNewOccurrenceName] = useState('')\n\n  const [{ list, create }, unorderedOccurrences] = useRestEndpoint({\n    endpoint: '/attendance/occurrences/',\n  })\n\n  const occurrences = unorderedOccurrences\n    ? [...unorderedOccurrences].reverse()\n    : null\n\n  useEffect(() => {\n    list()\n    // TODO: handle errors\n  }, [])\n\n  useEffect(\n    () => {\n      if (!occurrences || !occurrences.length) setCurrentOccurrence(null)\n      else if (currentOccurrence === null)\n        setCurrentOccurrence({ ...occurrences[0] })\n    },\n    [occurrences]\n  )\n\n  if (occurrences === null) return <></>\n\n  return (\n    <div>\n      <h2>Händelser</h2>\n      {occurrences && occurrences.length && (\n        <select\n          value={currentOccurrence ? currentOccurrence.id : undefined}\n          onChange={e =>\n            setCurrentOccurrence(\n              occurrences.find(\n                occurrence => `${occurrence.id}` === e.target.value\n              )\n            )\n          }\n        >\n          {occurrences.map(occurrence => (\n            <option value={occurrence.id} key={occurrence.id}>\n              {occurrence.name}\n            </option>\n          ))}\n        </select>\n      )}\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          setNewOccurrenceName('')\n          // setCurrentOccurrence(null)\n\n          create({\n            name: newOccurrenceName,\n          }).then(res => {\n            setCurrentOccurrence(res.data)\n          })\n        }}\n      >\n        <input\n          value={newOccurrenceName}\n          onChange={e => {\n            setNewOccurrenceName(e.target.value)\n          }}\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default OccurrencePanel\n","import React, { useState, useEffect } from 'react'\n\nimport { FiTrash2 } from 'react-icons/fi'\nimport useRestEndpoint from '../request/useRestEndpoint'\n\nconst AttendantPanel = ({ currentOccurrence }) => {\n  if (!currentOccurrence) return <></>\n\n  const { attendants, attendant_limit: attendantLimit } = currentOccurrence\n\n  return (\n    <div>\n      <h2>Deltagare</h2>\n      <p>Antal deltagare: {attendants.length}</p>\n      {attendantLimit !== 0 && <p>Deltagargräns: {attendantLimit}</p>}\n      <ul>\n        {attendants.map(attendant => (\n          <li key={attendant.id}>{attendant.username}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default AttendantPanel\n","import React, { useState } from 'react'\nimport OccurrencePanel from './occurrencePanel'\nimport AttendantPanel from './attendantPanel'\n\nimport DoorkeeperPanel from '../checkin/doorkeeperPanel'\nimport { GridContainer, GridItem } from '../ui/grid'\nimport BigPixels from '../layout/bigPixels'\n\nconst Attendance = () => {\n  const [currentOccurrence, setCurrentOccurrence] = useState(null)\n\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem>\n          <OccurrencePanel\n            currentOccurrence={currentOccurrence}\n            setCurrentOccurrence={setCurrentOccurrence}\n          />\n        </GridItem>\n        <GridItem>\n          <AttendantPanel currentOccurrence={currentOccurrence} />\n        </GridItem>\n        <GridItem>\n          <DoorkeeperPanel event={currentOccurrence} />\n        </GridItem>\n      </GridContainer>\n    </BigPixels>\n  )\n}\n\nexport default Attendance\n","import React from 'react'\nimport Attendance from '.'\n\nconst AttendancePage = () => <Attendance />\n\nexport default AttendancePage\n","import { useContext, useState, useEffect } from 'react'\n\nimport { LoadingContext } from '../layout/layout'\nimport request from '.'\n\nconst objHasProperty = (...args) =>\n  Object.prototype.hasOwnProperty.call(...args)\n\nconst appendPK = (config, pk) => {\n  let rv = { ...config }\n\n  ;['endpoint', 'url'].forEach(key => {\n    if (objHasProperty(rv, key)) rv = { ...rv, [key]: `${rv[key]}${pk}/` }\n  })\n\n  return rv\n}\n\nexport default config => {\n  const setLoading = useContext(LoadingContext)[1]\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n\n  const list = (params = {}) => {\n    setLoading(true)\n    return request({\n      ...config,\n      params: {\n        ...(objHasProperty(config, 'params') ? config.params : {}),\n        ...params,\n      },\n      method: 'get',\n    })\n      .then(res => {\n        setError(null)\n        setData(res.data)\n        setLoading(false)\n        return Promise.resolve(res)\n      })\n      .catch(err => {\n        setError(err)\n        setLoading(false)\n        return Promise.reject(err)\n      })\n  }\n\n  const create = (body = {}) => {\n    setLoading(true)\n    return request({ ...config, data: body, method: 'post' })\n      .then(res => {\n        setError(null)\n        setData(prevData => [...prevData, res.data])\n        setLoading(false)\n        return Promise.resolve(res)\n      })\n      .catch(err => {\n        setError(err)\n        setLoading(false)\n        return Promise.reject(err)\n      })\n  }\n\n  const update = (pk, body = {}) => {\n    setLoading(true)\n    return request({ ...appendPK(config, pk), data: body, method: 'put' })\n      .then(res => {\n        setError(null)\n        setData(prevData => [\n          ...prevData.filter(obj => obj.id !== pk),\n          res.data,\n        ])\n        setLoading(false)\n        return Promise.resolve(res)\n      })\n      .catch(err => {\n        setError(err)\n        setLoading(false)\n        return Promise.reject(err)\n      })\n  }\n\n  const retrieve = (pk, params = {}) => {\n    setLoading(true)\n    return request({\n      ...appendPK(config, pk),\n      params: {\n        ...(objHasProperty(config, 'params') ? config.params : {}),\n        ...params,\n      },\n      method: 'get',\n    })\n      .then(res => {\n        setError(null)\n        setData(prevData => [\n          ...prevData.filter(obj => obj.id !== pk),\n          res.data,\n        ])\n        setLoading(false)\n        return Promise.resolve(res)\n      })\n      .catch(err => {\n        setError(err)\n        setLoading(false)\n        return Promise.reject(err)\n      })\n  }\n\n  const destroy = (pk, body = {}) => {\n    setLoading(true)\n\n    return request({ ...appendPK(config, pk), data: body, method: 'delete' })\n      .then(res => {\n        setError(null)\n        setData(prevData => prevData.filter(obj => obj.id !== pk))\n        setLoading(false)\n        return Promise.resolve(res)\n      })\n      .catch(err => {\n        setError(err)\n        setLoading(false)\n        return Promise.reject(err)\n      })\n  }\n\n  return [{ list, retrieve, update, create, destroy }, data, error]\n}\n","import React from 'react'\n\nimport style from '../../scss/ui.module.scss'\n\nconst List = ({ children }) => <ul className={style.list}>{children}</ul>\n\nconst ListItem = ({ title, subtitle, buttons }) => (\n  <li>\n    <div className={style.listText}>\n      <h3>{title}</h3>\n      <p>{subtitle}</p>\n    </div>\n    <div className={style.listButtons}>{buttons}</div>\n  </li>\n)\n\nconst ListButton = ({ onClick, iconComponent: Icon, text, shown }) =>\n  shown ? (\n    <button type=\"button\" onClick={onClick} title={text}>\n      <Icon />\n    </button>\n  ) : (\n    <></>\n  )\n\nListButton.defaultProps = {\n  shown: true,\n}\n\nexport { List, ListItem, ListButton }\n","import React, { useState, useEffect } from 'react'\n\nimport { FiTrash2 } from 'react-icons/fi'\nimport useRestEndpoint from '../request/useRestEndpoint'\nimport { List, ListItem, ListButton } from '../ui/list'\n\nconst DoorkeeperPanel = ({ event }) => {\n  const [input, setInput] = useState('')\n\n  const [{ list, destroy, create }, doorkeepers] = useRestEndpoint({\n    endpoint: '/checkin/doorkeepers/',\n  })\n\n  useEffect(\n    () => {\n      if (event) list({ event_id: event.id })\n      // TODO: handle errors\n    },\n    [event]\n  )\n\n  if (doorkeepers === null) return <></>\n\n  return (\n    <div>\n      <h2>Dörrvakter</h2>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          setInput('')\n\n          create({\n            user_username: input,\n            event_id: event.id,\n          })\n        }}\n      >\n        <input value={input} onChange={e => setInput(e.target.value)} />\n      </form>\n      <List>\n        {doorkeepers.map(doorkeeper => (\n          <ListItem\n            title={doorkeeper.user.pretty_name}\n            key={doorkeeper.id}\n            buttons={[\n              <ListButton\n                onClick={() => destroy(doorkeeper.id)}\n                iconComponent={FiTrash2}\n                text=\"Ta bort dörrvakt\"\n                key=\"remove\"\n              />,\n            ]}\n          />\n        ))}\n      </List>\n    </div>\n  )\n}\n\nexport default DoorkeeperPanel\n"],"sourceRoot":""}