{"version":3,"sources":["webpack:///./src/components/checkin/doorkeeperPanel.js","webpack:///./src/components/attendance/attendantPanel.js","webpack:///./src/components/attendance/addOccurrence.js","webpack:///./src/components/attendance/page.js","webpack:///./src/scss/form.module.scss","webpack:///./src/components/form/input.js","webpack:///./src/components/form/form.js"],"names":["DoorkeeperPanel","event","input","setInput","useState","data","doorkeepers","mutate","useSWR","id","onSubmit","e","preventDefault","async","newDoorkeeper","post","create","user_username","event_id","value","onChange","target","map","doorkeeper","title","user","pretty_name","key","buttons","onClick","del","filter","d","destroy","iconComponent","FiTrash2","text","AttendantPanel","currentOccurrence","attendants","attendant_limit","attendantLimit","members_only","membersOnly","length","attendant","username","AddOccurrence","endpoint","customFetcher","AttendancePage","pageContext","setCurrentOccurrence","unorderedOccurrences","openCreateModal","useModal","closeModal","useCloseModal","occurrences","reverse","useEffect","find","m","fullWidth","choice","setChoice","choices","label","action","newOccurrence","actionLabel","module","exports","AutoInput","type","required","min_value","max_value","min_length","max_length","change","datetime","date","boolean","checked","integer","max","min","component","Object","prototype","hasOwnProperty","call","maxLength","minLength","className","style","inputWrapper","AutoForm","method","fields","setFields","values","setValues","errors","setErrors","options","then","res","raw","actions","POST","editable","keys","f","read_only","catch","err","response","request","field","Fragment","newValue","old","setValue","join","defaultProps"],"mappings":"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","file":"component---src-components-attendance-page-js-6e6f0b8aa5ddc44cbe2b.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { FiTrash2 } from 'react-icons/fi'\nimport { List, ListItem, ListButton } from '../ui/list'\nimport useSWR from 'swr'\nimport { post, del } from '../request'\n\nconst DoorkeeperPanel = ({ event }) => {\n  const [input, setInput] = useState('')\n\n  const { data: doorkeepers, mutate } = useSWR(\n    `/checkin/doorkeepers/?event_id=${event.id}`\n  )\n\n  const create = async data => {\n    const { data: newDoorkeeper } = await post('/checkin/doorkeepers/', data)\n    mutate([...doorkeepers, newDoorkeeper])\n    return newDoorkeeper\n  }\n\n  const destroy = async id => {\n    await del(`/checkin/doorkeepers/${id}/`)\n    mutate(doorkeepers.filter(d => d.id !== id))\n  }\n\n  return (\n    <div>\n      <h2>Dörrvakter</h2>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          setInput('')\n\n          create({\n            user_username: input,\n            event_id: event.id,\n          })\n        }}\n      >\n        <input value={input} onChange={e => setInput(e.target.value)} />\n      </form>\n      <List>\n        {doorkeepers &&\n          doorkeepers.map(doorkeeper => (\n            <ListItem\n              title={doorkeeper.user.pretty_name}\n              key={doorkeeper.id}\n              buttons={[\n                <ListButton\n                  onClick={() => destroy(doorkeeper.id)}\n                  iconComponent={FiTrash2}\n                  text=\"Ta bort dörrvakt\"\n                  key=\"remove\"\n                />,\n              ]}\n            />\n          ))}\n      </List>\n    </div>\n  )\n}\n\nexport default DoorkeeperPanel\n","import React, { useState, useEffect } from 'react'\n\nconst AttendantPanel = ({ currentOccurrence }) => {\n  if (!currentOccurrence) return <></>\n\n  const {\n    attendants,\n    attendant_limit: attendantLimit,\n    members_only: membersOnly,\n  } = currentOccurrence\n\n  return (\n    <div>\n      <h2>Deltagare</h2>\n      <p>Antal deltagare: {attendants.length}</p>\n      {attendantLimit !== 0 && <p>Deltagargräns: {attendantLimit}</p>}\n      <p>{membersOnly ? 'Endast för medlemmar' : 'Öppet för alla användare'}</p>\n      <ul>\n        {attendants.map(attendant => (\n          <li key={attendant.id}>{attendant.username}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default AttendantPanel\n","import React from 'react'\nimport AutoForm from '../form/form'\n\nconst AddOccurrence = ({ create }) => (\n  <AutoForm endpoint=\"/attendance/occurrences/\" customFetcher={create} />\n)\n\nexport default AddOccurrence\n","import React, { useState, useEffect } from 'react'\nimport useSWR from 'swr'\n\nimport AttendantPanel from './attendantPanel'\nimport DoorkeeperPanel from '../checkin/doorkeeperPanel'\nimport { GridContainer, GridItem } from '../ui/grid'\nimport BigPixels from '../layout/bigPixels'\nimport TitleChooser from '../ui/titleChooser'\nimport AddOccurrence from './addOccurrence'\nimport useModal, { useCloseModal } from '../modal/useModal'\nimport { post } from '../request'\n\nconst AttendancePage = ({ pageContext: { title } }) => {\n  const [currentOccurrence, setCurrentOccurrence] = useState(null)\n  const { data: unorderedOccurrences, mutate } = useSWR(\n    '/attendance/occurrences/'\n  )\n  const [openCreateModal] = useModal(AddOccurrence)\n  const closeModal = useCloseModal()\n\n  const create = async data => {\n    const { data: newOccurrence } = await post('/attendance/occurrences/', data)\n    mutate([...unorderedOccurrences, newOccurrence])\n  }\n\n  const occurrences = unorderedOccurrences\n    ? [...unorderedOccurrences].reverse()\n    : null\n\n  // sync currentOccurrence with updated occurrences\n  useEffect(\n    () => {\n      if (currentOccurrence)\n        setCurrentOccurrence(\n          unorderedOccurrences.find(m => m.id === currentOccurrence.id)\n        )\n    },\n    [unorderedOccurrences]\n  )\n\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem fullWidth>\n          <TitleChooser\n            title={title}\n            choice={currentOccurrence}\n            setChoice={setCurrentOccurrence}\n            choices={occurrences}\n            label=\"name\"\n            action={() => {\n              openCreateModal('Ny händelse', {\n                create: async data => {\n                  await create(data)\n                  closeModal()\n                },\n              })\n            }}\n            actionLabel=\"Ny händelse\"\n          />\n        </GridItem>\n        {currentOccurrence && (\n          <>\n            <GridItem>\n              <AttendantPanel currentOccurrence={currentOccurrence} />\n            </GridItem>\n            <GridItem>\n              <DoorkeeperPanel event={currentOccurrence} />\n            </GridItem>\n          </>\n        )}\n      </GridContainer>\n    </BigPixels>\n  )\n}\n\nexport default AttendancePage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form-module--label--1j4rO\",\"inputWrapper\":\"form-module--inputWrapper--tEZjQ\",\"required\":\"form-module--required--1ei65\"};","import React, { useState, useEffect } from 'react'\nimport DateTimePicker from './dateTimePicker'\n\nimport style from '../../scss/form.module.scss'\n\nconst AutoInput = ({\n  value,\n  onChange,\n  type,\n  label,\n  required,\n  min_value,\n  max_value,\n  min_length,\n  max_length,\n}) => {\n  const change = e => {\n    onChange(e.target.value)\n  }\n\n  const map = {\n    datetime: <DateTimePicker value={value} onChange={onChange} />,\n    date: <input type=\"date\" value={value} onChange={change} />,\n    boolean: (\n      <input\n        type=\"checkbox\"\n        value={value}\n        onChange={e => {\n          onChange(e.target.checked)\n        }}\n      />\n    ),\n    integer: (\n      <input\n        type=\"number\"\n        value={value}\n        onChange={change}\n        max={max_value}\n        min={min_value}\n      />\n    ),\n  }\n\n  const component = Object.prototype.hasOwnProperty.call(map, type) ? (\n    map[type]\n  ) : (\n    <input\n      value={value}\n      onChange={change}\n      maxLength={max_length}\n      minLength={min_length}\n    />\n  )\n\n  return (\n    <label className={style.label}>\n      {`${label}`}\n      {required && <span className={style.required}>*</span>}\n      <div className={style.inputWrapper}>{component}</div>\n    </label>\n  )\n}\nexport default AutoInput\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport request, { options } from '../request'\nimport AutoInput from './input'\nimport { Button } from '../ui/buttons'\n\nconst AutoForm = ({ endpoint, method, customFetcher, onSubmit }) => {\n  const [fields, setFields] = useState()\n  const [values, setValues] = useState({})\n  const [errors, setErrors] = useState({})\n\n  const setValue = (field, value) => {\n    setValues(old => ({ ...old, [field]: value }))\n  }\n\n  const setError = (field, error) => {\n    setErrors(old => ({ ...old, [field]: error }))\n  }\n\n  useEffect(() => {\n    // request endpoint info from server\n    options(endpoint)\n      .then(res => {\n        const raw = res.data.actions.POST\n\n        // object to array\n        const arrayified = Object.keys(raw).map(key => ({\n          key,\n          ...raw[key],\n        }))\n        const editable = arrayified.filter(f => !f.read_only)\n\n        setFields(editable)\n      })\n      .catch(err => {})\n  }, endpoint)\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault()\n        onSubmit()\n        if (customFetcher) {\n          customFetcher(values).catch(err => {\n            if (err.response) {\n              setErrors(err.response.data)\n            }\n          })\n        } else {\n          request({ endpoint, method, data: values })\n        }\n      }}\n    >\n      {fields &&\n        fields.map(field => (\n          <React.Fragment key={field.key}>\n            <AutoInput\n              {...field}\n              onChange={newValue => {\n                setValue(field.key, newValue)\n              }}\n              value={values[field.key]}\n            />\n            {Object.prototype.hasOwnProperty.call(errors, field.key) && (\n              <div>{errors[field.key].join(', ')}</div>\n            )}\n          </React.Fragment>\n        ))}\n      <Button type=\"submit\" onClick={() => {}}>\n        Submit\n      </Button>\n    </form>\n  )\n}\n\nAutoForm.defaultProps = {\n  method: 'POST',\n  customFetcher: null,\n  onSubmit: () => {},\n}\n\nAutoForm.propTypes = {\n  method: PropTypes.string,\n  endpoint: PropTypes.string.isRequired,\n  customFetcher: PropTypes.func,\n  onSubmit: PropTypes.func,\n}\n\nexport default AutoForm\n"],"sourceRoot":""}