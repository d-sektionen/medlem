{"version":3,"sources":["webpack:///./src/components/ui/titleChooser.js","webpack:///./src/components/ui/list.js","webpack:///./src/components/votingAdmin/voteStats.js","webpack:///./src/components/votingCounter/meetingPanel.js","webpack:///./src/components/votingCounter/votePanel.js","webpack:///./src/components/votingCounter/attendantPanel.js","webpack:///./src/components/votingCounter/page.js"],"names":["TitleChooser","title","choices","categorizedChoices","choice","setChoice","label","action","actionLabel","noChoicesLabel","allChoices","Object","keys","reduce","accumulator","category","className","style","titleChooser","actions","length","selectContainer","onChange","e","selectedValue","target","value","c","filter","i","id","hidden","sort","map","key","hint","onClick","defaultProps","List","children","list","ListItem","subtitle","buttons","color","listItemColor","borderColor","listText","listButtons","ListButton","href","iconComponent","Icon","text","shown","listButton","type","VoteStats","currentMeeting","voteId","data","useSWR","voteSum","alternatives","alt","num_votes","a","b","attendantsVoted","attendants_voted","allVotes","thisVote","vote","maxSelectable","max_number_of_selectable_alternatives","minSelectable","min_number_of_selectable_alternatives","Math","round","MeetingPanel","updatePatch","name","description","whiteSpace","enable_speaker_requests","open_attendance","clear_data","VotePanel","votes","openChartModal","useModal","closeModal","useCloseModal","useEffect","meeting","question","open","undefined","FiBarChart2","AttendantPanel","attendants","refreshInterval","attendant","has_voting_rights","getMemberAttendants","VotingGuestPage","pageContext","setCurrentMeeting","useState","unorderedMeetings","mutate","meetings","reverse","find","m","fullWidth","async","updatedMeeting","patch"],"mappings":"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","file":"component---src-components-voting-counter-page-js-0fd550fc918492a6af50.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport style from '../../scss/ui.module.scss'\nimport { Button } from './buttons'\n\nconst TitleChooser = ({\n  title,\n  choices,\n  categorizedChoices,\n  choice,\n  setChoice,\n  label,\n  action,\n  actionLabel,\n  noChoicesLabel,\n}) => {\n  const allChoices = [\n    ...(choices || []),\n    // merge all categorized choices to single array.\n    ...Object.keys(categorizedChoices).reduce(\n      (accumulator, category) => [\n        ...accumulator,\n        ...categorizedChoices[category],\n      ],\n      []\n    ),\n  ]\n  return (\n    <div className={style.titleChooser}>\n      <h1>{title}</h1>\n      <div className={style.actions}>\n        {allChoices.length ? (\n          <div className={style.selectContainer}>\n            <select\n              onChange={e => {\n                const selectedValue = e.target.value\n                const c =\n                  selectedValue === ''\n                    ? null\n                    : allChoices.filter(i => `${i.id}` === selectedValue)[0]\n                setChoice(c)\n              }}\n              value={choice ? choice.id : ''}\n            >\n              <option hidden value=\"\" />\n              {choices.sort().map(c => (\n                <option value={c.id} key={c.id}>\n                  {c[label]}\n                </option>\n              ))}\n              {Object.keys(categorizedChoices)\n                .sort()\n                .map(key => (\n                  <optgroup label={key} key={key}>\n                    {categorizedChoices[key].sort().map(c => (\n                      <option value={c.id} key={c.id}>\n                        {c[label]}\n                      </option>\n                    ))}\n                  </optgroup>\n                ))}\n            </select>\n            {choice === null && (\n              <div className={style.hint}>VÃ¤lj ett objekt</div>\n            )}\n          </div>\n        ) : (\n          <span>{noChoicesLabel}</span>\n        )}\n\n        {action && <Button onClick={action}>{actionLabel}</Button>}\n      </div>\n    </div>\n  )\n}\nTitleChooser.defaultProps = {\n  categorizedChoices: {},\n  choices: [],\n  action: null,\n  actionLabel: '',\n  choice: null,\n  noChoicesLabel: '',\n  setChoice: () => {},\n  label: '',\n}\n\nTitleChooser.propTypes = {\n  title: PropTypes.string.isRequired,\n  choices: PropTypes.array,\n  categorizedChoices: PropTypes.object,\n  choice: PropTypes.object,\n  setChoice: PropTypes.func,\n  label: PropTypes.string,\n  action: PropTypes.func,\n  actionLabel: PropTypes.string,\n  noChoicesLabel: PropTypes.string,\n}\n\nexport default TitleChooser\n","import React from 'react'\n\nimport style from '../../scss/ui.module.scss'\n\nconst List = ({ children }) => <ul className={style.list}>{children}</ul>\n\nconst ListItem = ({ title, subtitle, buttons, color }) => (\n  <li\n    className={color ? style.listItemColor : ''}\n    style={{ borderColor: color }}\n  >\n    <div className={style.listText}>\n      <h3>{title}</h3>\n      <p>{subtitle}</p>\n    </div>\n    <div className={style.listButtons}>{buttons}</div>\n  </li>\n)\n\nListItem.defaultProps = {\n  color: null,\n}\n\nconst ListButton = ({ href, onClick, iconComponent: Icon, text, shown }) =>\n  shown ? (\n    <>\n      {href ? (\n        <a\n          className={style.listButton}\n          href={href}\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </a>\n      ) : (\n        <button\n          className={style.listButton}\n          type=\"button\"\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </button>\n      )}\n    </>\n  ) : (\n    <></>\n  )\n\nListButton.defaultProps = {\n  shown: true,\n}\n\nexport { List, ListItem, ListButton }\n","import React, { useRef, useEffect } from 'react'\nimport useSWR from 'swr'\n\nconst VoteStats = ({ currentMeeting, voteId }) => {\n  const { data } = useSWR(() => voteId && `/voting/admin-votes/${voteId}/`)\n\n  const voteSum = (data\n    ? data.alternatives.map(alt => alt.num_votes)\n    : []\n  ).reduce((a, b) => a + b, 0)\n\n  const attendantsVoted = data ? data.attendants_voted : ''\n\n  const { data: allVotes } = useSWR(\n    `/voting/admin-votes/?event_id=${currentMeeting.id}`\n  )\n\n  const thisVote = allVotes.filter(vote => vote.id === voteId)[0]\n  const maxSelectable = thisVote.max_number_of_selectable_alternatives\n  const minSelectable = thisVote.min_number_of_selectable_alternatives\n\n  return (\n    <div>\n      {minSelectable < maxSelectable && (\n        <p>\n          {minSelectable}-{maxSelectable}\n          &nbsp;alternativ vÃ¤ljs av deltagarna\n        </p>\n      )}\n\n      {minSelectable === maxSelectable && (\n        <p>\n          {maxSelectable}\n          &nbsp;alternativ vÃ¤ljs av deltagarna\n        </p>\n      )}\n\n      <ul>\n        {data &&\n          data.alternatives.map(alt => (\n            <li key={alt.text}>\n              {`${alt.text}: ${alt.num_votes}`}\n              {voteSum\n                ? ` (${\n                    alt.num_votes\n                      ? Math.round((1000 * alt.num_votes) / voteSum) / 10\n                      : 0\n                  }%)`\n                : ''}\n            </li>\n          ))}\n      </ul>\n      <p>\n        {'Summa av alla rÃ¶ster: '}\n        {voteSum}\n      </p>\n      <p>\n        {'Antal personer som rÃ¶stat: '}\n        {attendantsVoted}\n      </p>\n    </div>\n  )\n}\n\nexport default VoteStats\n","import React from 'react'\nimport { ButtonGroup, Button } from '../ui/buttons'\nimport { patch } from '../request'\n\nconst MeetingPanel = ({ currentMeeting, updatePatch }) => (\n  <div>\n    <h2>MÃ¶tesinfo</h2>\n    <h3>{currentMeeting.name}</h3>\n    {currentMeeting.description && (\n      <p style={{ whiteSpace: 'pre-line' }}>{currentMeeting.description}</p>\n    )}\n    <h3>Detaljer</h3>\n    <ul>\n      <li>\n        {currentMeeting.enable_speaker_requests\n          ? 'Talarlista aktiverad'\n          : 'Talarlista inaktiverad'}\n      </li>\n      <li>\n        {currentMeeting.open_attendance\n          ? 'Ãppen incheckning'\n          : 'StÃ¤ngd incheckning'}\n      </li>\n      <li>{`MÃ¶tesdata rensas: ${currentMeeting.clear_data}`}</li>\n    </ul>\n  </div>\n)\n\nexport default MeetingPanel\n","import React, { useEffect } from 'react'\nimport useSWR from 'swr'\nimport { FiBarChart2, FiEdit2 } from 'react-icons/fi'\n\nimport useModal, { useCloseModal } from '../modal/useModal'\nimport VoteStats from '../votingAdmin/voteStats'\nimport { List, ListItem, ListButton } from '../ui/list'\n\nconst VotePanel = ({ currentMeeting }) => {\n  const { data: votes } = useSWR(\n    `/voting/admin-votes/?event_id=${currentMeeting.id}`\n  )\n\n  const [openChartModal] = useModal(VoteStats)\n  const closeModal = useCloseModal()\n\n  // Close modal when a vote is created\n  useEffect(closeModal, [votes])\n\n  // if (votes === null) return <></>\n\n  return (\n    <div>\n      <h2>OmrÃ¶stningar</h2>\n      <List>\n        {votes &&\n          votes\n            .filter(vote => vote.meeting === currentMeeting.id)\n            .map(vote => (\n              <ListItem\n                title={vote.question}\n                subtitle={vote.open ? 'Active' : undefined}\n                key={vote.id}\n                buttons={[\n                  <ListButton\n                    onClick={() =>\n                      openChartModal(`Resultat av \"${vote.question}\"`, {\n                        currentMeeting,\n                        voteId: vote.id,\n                      })\n                    }\n                    iconComponent={FiBarChart2}\n                    text=\"Resultat\"\n                    key=\"results\"\n                  />,\n                ]}\n              />\n            ))}\n      </List>\n    </div>\n  )\n}\n\nexport default VotePanel\n","import React from 'react'\n\nimport useSWR from 'swr'\n\nconst getMemberAttendants = attendants => {\n  const memberAttendants = attendants.filter(\n    attendant => attendant.has_voting_rights\n  )\n  return memberAttendants\n}\n\nconst AttendantPanel = ({ currentMeeting }) => {\n  const { data: attendants } = useSWR(\n    () => `/voting/attendants/?meeting_id=${currentMeeting.id}`,\n    { refreshInterval: 4000 }\n  )\n\n  if (attendants === null) return <></>\n\n  return (\n    <div>\n      <h2>Deltagare</h2>\n\n      <div>\n        <p>{`RÃ¶stlÃ¤ngd: ${\n          attendants ? getMemberAttendants(attendants).length : 0\n        }`}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default AttendantPanel\n","import React, { useState, useEffect } from 'react'\nimport useSWR from 'swr'\n\nimport MeetingPanel from './meetingPanel'\nimport VotePanel from './votePanel'\nimport AttendantPanel from './attendantPanel'\nimport { GridContainer, GridItem } from '../ui/grid'\nimport TitleChooser from '../ui/titleChooser'\nimport { patch } from '../request'\nimport BigPixels from '../layout/bigPixels'\n\nconst VotingGuestPage = ({ pageContext: { title } }) => {\n  const [currentMeeting, setCurrentMeeting] = useState(null)\n  const { data: unorderedMeetings, mutate } = useSWR('/voting/admin-meetings/')\n\n  const updatePatch = async data => {\n    const { data: updatedMeeting } = await patch(\n      `/voting/admin-meetings/${currentMeeting.id}/`,\n      data\n    )\n    mutate([\n      ...unorderedMeetings.filter(meeting => meeting.id !== currentMeeting.id),\n      updatedMeeting,\n    ])\n  }\n\n  const meetings = unorderedMeetings ? [...unorderedMeetings].reverse() : null\n\n  // sync currentMeeting with updated meetings\n  useEffect(\n    () => {\n      if (currentMeeting)\n        setCurrentMeeting(meetings.find(m => m.id === currentMeeting.id))\n    },\n    [meetings]\n  )\n\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem fullWidth>\n          <TitleChooser\n            title={title}\n            choice={currentMeeting}\n            setChoice={setCurrentMeeting}\n            choices={meetings}\n            label=\"name\"\n            noChoicesLabel=\"Det finns inga mÃ¶ten just nu.\"\n          />\n        </GridItem>\n        {currentMeeting && (\n          <>\n            <GridItem>\n              <MeetingPanel\n                currentMeeting={currentMeeting}\n                updatePatch={updatePatch}\n              />\n            </GridItem>\n            <GridItem>\n              <VotePanel currentMeeting={currentMeeting} />\n            </GridItem>\n            <GridItem>\n              <AttendantPanel currentMeeting={currentMeeting} />\n            </GridItem>\n          </>\n        )}\n      </GridContainer>\n    </BigPixels>\n  )\n}\n\nexport default VotingGuestPage\n"],"sourceRoot":""}