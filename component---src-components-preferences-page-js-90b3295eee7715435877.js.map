{"version":3,"sources":["webpack:///./src/components/modal/useConfirmModal.js","webpack:///./src/scss/form.module.scss","webpack:///./src/components/form/input.js","webpack:///./src/components/form/form.js","webpack:///./src/scss/preferences.module.scss","webpack:///./src/components/preferences/preferences.js","webpack:///./src/components/preferences/addCalendarSubscription.js","webpack:///./src/components/preferences/calendarLink.js","webpack:///./src/components/preferences/calendarSubscriptions.js","webpack:///./src/components/preferences/page.js"],"names":["Confirmation","text","onAccept","onDecline","close","useCloseModal","className","style","confirmation","onClick","useConfirmModal","openModal","isOpen","useModal","defaultProps","module","exports","AutoInput","value","onChange","type","label","required","min_value","max_value","min_length","max_length","change","e","target","map","datetime","date","boolean","checked","integer","max","min","component","Object","prototype","hasOwnProperty","call","maxLength","minLength","inputWrapper","AutoForm","endpoint","method","customFetcher","onSubmit","defaults","fields","setFields","useState","values","setValues","errors","setErrors","useEffect","options","then","res","raw","data","actions","POST","editable","keys","key","filter","f","read_only","catch","err","preventDefault","response","request","field","Fragment","newValue","old","setValue","join","Preferences","props","user","profile","state","infomailSubscriber","infomail_subscriber","liuCardId","liu_card_id","firstName","first_name","lastName","last_name","handleChange","bind","handleSubmit","event","checkbox","this","setState","setLoading","setUser","error","undefined","success","put","status","prev","console","log","getFormErrorText","render","membership","inputLabel","Component","AddCalendarSubscription","create","include_bookings","include_events_attending","include_events_not_attending","CalendarLink","url","calendarSubNotice","readOnly","navigator","clipboard","writeText","getTitle","sub","parts","push","combined","charAt","toUpperCase","substring","CalendarSubscriptions","openCreateModal","openLinkModal","openConfirmation","closeModal","subs","mutate","useSWR","title","id","buttons","iconComponent","FiLink","FiTrash2","async","del","s","newSub","post","PreferencesPage","pageContext","useContext","LoadingContext","UserContext","fullWidth"],"mappings":"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","file":"component---src-components-preferences-page-js-90b3295eee7715435877.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport useModal, { useCloseModal } from './useModal'\r\nimport { Button } from '../ui/buttons'\r\n\r\nimport style from '../../scss/modal.module.scss'\r\n\r\nconst Confirmation = ({ text, onAccept, onDecline }) => {\r\n  const close = useCloseModal()\r\n  return (\r\n    <div className={style.confirmation}>\r\n      <p>{text}</p>\r\n      <Button\r\n        onClick={() => {\r\n          onDecline()\r\n          close()\r\n        }}\r\n      >\r\n        Nej\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          onAccept()\r\n          close()\r\n        }}\r\n      >\r\n        Ja\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nConfirmation.propTypes = {\r\n  text: PropTypes.string,\r\n  onAccept: PropTypes.func,\r\n  onDecline: PropTypes.func,\r\n}\r\n\r\nConfirmation.defaultProps = {\r\n  text: 'Är du säker?',\r\n  onAccept: () => {},\r\n  onDecline: () => {},\r\n}\r\n\r\nexport default function useConfirmModal() {\r\n  const [openModal, isOpen] = useModal(Confirmation)\r\n\r\n  const open = (text, onAccept, onDecline) => {\r\n    openModal('', { text, onAccept, onDecline })\r\n  }\r\n\r\n  return [open, isOpen]\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form-module--label--1D42h\",\"inputWrapper\":\"form-module--inputWrapper--1aGr5\",\"required\":\"form-module--required--1fgVY\"};","import React, { useState, useEffect } from 'react'\r\nimport DateTimePicker from './dateTimePicker'\r\n\r\nimport style from '../../scss/form.module.scss'\r\n\r\nconst AutoInput = ({\r\n  value,\r\n  onChange,\r\n  type,\r\n  label,\r\n  required,\r\n  min_value,\r\n  max_value,\r\n  min_length,\r\n  max_length,\r\n}) => {\r\n  const change = e => {\r\n    onChange(e.target.value)\r\n  }\r\n\r\n  const map = {\r\n    datetime: <DateTimePicker value={value} onChange={onChange} />,\r\n    date: <input type=\"date\" value={value} onChange={change} />,\r\n    boolean: (\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={value}\r\n        onChange={e => {\r\n          onChange(e.target.checked)\r\n        }}\r\n      />\r\n    ),\r\n    integer: (\r\n      <input\r\n        type=\"number\"\r\n        value={value}\r\n        onChange={change}\r\n        max={max_value}\r\n        min={min_value}\r\n      />\r\n    ),\r\n  }\r\n\r\n  const component = Object.prototype.hasOwnProperty.call(map, type) ? (\r\n    map[type]\r\n  ) : (\r\n    <input\r\n      value={value}\r\n      onChange={change}\r\n      maxLength={max_length}\r\n      minLength={min_length}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <label className={style.label}>\r\n      {`${label}`}\r\n      {required && <span className={style.required}>*</span>}\r\n      <div className={style.inputWrapper}>{component}</div>\r\n    </label>\r\n  )\r\n}\r\nexport default AutoInput\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport request, { options } from '../request'\r\nimport AutoInput from './input'\r\nimport { Button } from '../ui/buttons'\r\n\r\nconst AutoForm = ({ endpoint, method, customFetcher, onSubmit, defaults }) => {\r\n  const [fields, setFields] = useState()\r\n  const [values, setValues] = useState(defaults)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const setValue = (field, value) => {\r\n    setValues(old => ({ ...old, [field]: value }))\r\n  }\r\n\r\n  const setError = (field, error) => {\r\n    setErrors(old => ({ ...old, [field]: error }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // request endpoint info from server\r\n    options(endpoint)\r\n      .then(res => {\r\n        const raw = res.data.actions.POST\r\n\r\n        // object to array\r\n        const arrayified = Object.keys(raw).map(key => ({\r\n          key,\r\n          ...raw[key],\r\n        }))\r\n        const editable = arrayified.filter(f => !f.read_only)\r\n\r\n        setFields(editable)\r\n      })\r\n      .catch(err => {})\r\n  }, endpoint)\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault()\r\n        onSubmit()\r\n        if (customFetcher) {\r\n          customFetcher(values).catch(err => {\r\n            if (err.response) {\r\n              setErrors(err.response.data)\r\n            }\r\n          })\r\n        } else {\r\n          request({ endpoint, method, data: values })\r\n        }\r\n      }}\r\n    >\r\n      {fields &&\r\n        fields.map(field => (\r\n          <React.Fragment key={field.key}>\r\n            <AutoInput\r\n              {...field}\r\n              onChange={newValue => {\r\n                setValue(field.key, newValue)\r\n              }}\r\n              value={values[field.key]}\r\n            />\r\n            {Object.prototype.hasOwnProperty.call(errors, field.key) && (\r\n              <div>{errors[field.key].join(', ')}</div>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      <Button type=\"submit\" onClick={() => {}}>\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAutoForm.defaultProps = {\r\n  method: 'POST',\r\n  customFetcher: null,\r\n  onSubmit: () => {},\r\n  defaults: {},\r\n}\r\n\r\nAutoForm.propTypes = {\r\n  method: PropTypes.string,\r\n  endpoint: PropTypes.string.isRequired,\r\n  customFetcher: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  defaults: PropTypes.object,\r\n}\r\n\r\nexport default AutoForm\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputLabel\":\"preferences-module--inputLabel--1lXCa\",\"error\":\"preferences-module--error--LGCZX\",\"success\":\"preferences-module--success--2LP8p\",\"calendarSubNotice\":\"preferences-module--calendarSubNotice--2K4Ut\"};","import React, { Component } from 'react'\r\n\r\nimport { put, patch } from '../request'\r\n\r\nimport style from '../../scss/preferences.module.scss'\r\nimport { Button } from '../ui/buttons'\r\n\r\nclass Preferences extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    if (!props.user.profile) props.user.profile = {}\r\n\r\n    this.state = {\r\n      infomailSubscriber: props.user.profile.infomail_subscriber,\r\n      liuCardId: props.user.profile.liu_card_id,\r\n      firstName: props.user.first_name,\r\n      lastName: props.user.last_name,\r\n      errors: {},\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleChange(field, event, checkbox = false) {\r\n    if (checkbox) this.setState({ [field]: event.target.checked })\r\n    else this.setState({ [field]: event.target.value })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const { setLoading, setUser } = this.props\r\n\r\n    // reset errors\r\n    this.setState({ error: undefined, success: undefined, errors: {} })\r\n\r\n    setLoading(true)\r\n    put('/account/profile/', {\r\n      first_name: this.state.firstName,\r\n      last_name: this.state.lastName,\r\n      liu_card_id: this.state.liuCardId,\r\n      infomail_subscriber: this.state.infomailSubscriber,\r\n    })\r\n      .then(res => {\r\n        setLoading(false)\r\n        if (res.status < 300) {\r\n          this.setState({ success: 'Ändringarna har sparats.' })\r\n\r\n          setUser(prev => ({\r\n            ...prev,\r\n            first_name: res.data.firstName,\r\n            last_name: res.data.lastName,\r\n            profile: {\r\n              ...prev.profile,\r\n              liu_card_id: res.data.liu_card_id,\r\n              infomail_subscriber: res.data.infomail_subscriber,\r\n            },\r\n          }))\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setLoading(false)\r\n        if (!err.response) this.setState({ error: 'Nätverksfel.' })\r\n        else if (err.response.status === 400) {\r\n          this.getFormErrorText(err.response)\r\n        }\r\n      })\r\n    event.preventDefault()\r\n  }\r\n\r\n  /**\r\n   * Get error text to pass to setState.\r\n   * @param response - The response from the request.\r\n   * @returns Object - containing the error text.\r\n   */\r\n  getFormErrorText(response) {\r\n    if (response.data?.liu_card_id) {\r\n      return {\r\n        errors: {\r\n          profile: { liu_card_id: 'Det angivna LiU IDt är för långt.' },\r\n        },\r\n      }\r\n    }\r\n\r\n    return { error: 'Något gick fel.' }\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      liuCardId,\r\n      infomailSubscriber,\r\n      errors,\r\n      error,\r\n      success,\r\n    } = this.state\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h2>Profil</h2>\r\n        <p>\r\n          <strong>\r\n            {user.membership\r\n              ? `Du är sektionsmedlem.`\r\n              : 'Du saknar sektionsmedlemsskap.'}\r\n          </strong>\r\n        </p>\r\n        <div>\r\n          <label className={style.inputLabel}>\r\n            Förnamn:\r\n            <input\r\n              value={firstName}\r\n              onChange={e => this.handleChange('firstName', e)}\r\n            />\r\n          </label>\r\n          {errors.first_name && (\r\n            <div className={style.error}>{errors.first_name}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className={style.inputLabel}>\r\n            Efternamn:\r\n            <input\r\n              value={lastName}\r\n              onChange={e => this.handleChange('lastName', e)}\r\n            />\r\n          </label>\r\n          {errors.last_name && (\r\n            <div className={style.error}>{errors.last_name}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className={style.inputLabel}>\r\n            LiU-kortnummer:\r\n            <input\r\n              value={liuCardId}\r\n              onChange={e => this.handleChange('liuCardId', e)}\r\n            />\r\n          </label>\r\n          {errors.profile && errors.profile.liu_card_id && (\r\n            <div className={style.error}>{errors.profile.liu_card_id}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className={style.inputLabel}>\r\n            Prenumerera på veckomailet:\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={infomailSubscriber}\r\n              onChange={e => this.handleChange('infomailSubscriber', e, true)}\r\n            />\r\n          </label>\r\n          {errors.profile && errors.profile.infomail_subscriber && (\r\n            <div className={style.error}>\r\n              {errors.profile.infomail_subscriber}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Button type=\"submit\">Spara</Button>\r\n        </div>\r\n        <div>\r\n          {error && <div className={style.error}>{error}</div>}\r\n          {success && <div className={style.success}>{success}</div>}\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Preferences\r\n","import React from 'react'\r\nimport AutoForm from '../form/form'\r\n\r\nconst AddCalendarSubscription = ({ create }) => (\r\n  <AutoForm\r\n    endpoint=\"/account/calendar-subscriptions/\"\r\n    customFetcher={create}\r\n    defaults={{\r\n      include_bookings: true,\r\n      include_events_attending: true,\r\n      include_events_not_attending: true,\r\n    }}\r\n  />\r\n)\r\n\r\nexport default AddCalendarSubscription\r\n","import React from 'react'\r\nimport { Button } from '../ui/buttons'\r\n\r\nimport style from '../../scss/preferences.module.scss'\r\n\r\nconst CalendarLink = ({ url }) => (\r\n  <>\r\n    <p>\r\n      Denna webbadress kan importeras i ditt kalenderprogram. Länken kommer\r\n      automatiskt hållas uppdaterad med nya händelser.\r\n    </p>\r\n    <div className={style.calendarSubNotice}>\r\n      <input value={url} readOnly />\r\n      <Button\r\n        onClick={() => {\r\n          // TODO: Error handling???\r\n          navigator.clipboard.writeText(url)\r\n        }}\r\n      >\r\n        Kopiera\r\n      </Button>\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default CalendarLink\r\n","import React, { useState } from 'react'\r\nimport useSWR from 'swr'\r\nimport { FiLink, FiTrash2 } from 'react-icons/fi'\r\nimport { List, ListItem, ListButton } from '../ui/list'\r\nimport useConfirmModal from '../modal/useConfirmModal'\r\nimport { del, post } from '../request'\r\nimport AddCalendarSubscription from './addCalendarSubscription'\r\nimport useModal, { useCloseModal } from '../modal/useModal'\r\nimport { Button } from '../ui/buttons'\r\nimport CalendarLink from './calendarLink'\r\n\r\nconst getTitle = sub => {\r\n  const parts = []\r\n  if (sub.include_bookings) parts.push('bokningar')\r\n  if (sub.include_events_attending) parts.push('anmälda evenemang')\r\n  if (sub.include_events_not_attending) parts.push('oanmälda evenemang')\r\n\r\n  const combined = parts.join(', ')\r\n  return combined.charAt(0).toUpperCase() + combined.substring(1)\r\n}\r\n\r\nconst CalendarSubscriptions = () => {\r\n  const [openCreateModal] = useModal(AddCalendarSubscription)\r\n  const [openLinkModal] = useModal(CalendarLink)\r\n  const [openConfirmation] = useConfirmModal()\r\n  const closeModal = useCloseModal()\r\n  const { data: subs, mutate } = useSWR('/account/calendar-subscriptions/')\r\n\r\n  return (\r\n    <div>\r\n      <h2>Kalenderprenumerationer</h2>\r\n      <List>\r\n        {subs &&\r\n          subs.map(sub => (\r\n            <ListItem\r\n              title={getTitle(sub)}\r\n              key={sub.id}\r\n              buttons={[\r\n                <ListButton\r\n                  iconComponent={FiLink}\r\n                  text=\"Visa länk\"\r\n                  onClick={() => {\r\n                    openLinkModal('Prenumerationslänk', {\r\n                      url: sub.url,\r\n                    })\r\n                  }}\r\n                  key=\"view\"\r\n                />,\r\n                <ListButton\r\n                  iconComponent={FiTrash2}\r\n                  text=\"Ta bort prenumeration\"\r\n                  onClick={() => {\r\n                    openConfirmation(\r\n                      'Är du säker på att du vill ta bort prenumerationen?',\r\n                      async () => {\r\n                        await del(`/account/calendar-subscriptions/${sub.id}/`)\r\n                        mutate(subs.filter(s => s.id !== sub.id))\r\n                      }\r\n                    )\r\n                  }}\r\n                  key=\"delete\"\r\n                />,\r\n              ]}\r\n            />\r\n          ))}\r\n      </List>\r\n      <Button\r\n        onClick={() => {\r\n          openCreateModal('Ny prenumeration', {\r\n            create: async data => {\r\n              const { data: newSub } = await post(\r\n                '/account/calendar-subscriptions/',\r\n                data\r\n              )\r\n              mutate([...subs, newSub])\r\n              closeModal()\r\n            },\r\n          })\r\n        }}\r\n      >\r\n        Ny prenumeration\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarSubscriptions\r\n","import React, { useContext } from 'react'\r\nimport { UserContext, LoadingContext } from '../layout/layout'\r\nimport Preferences from './preferences'\r\nimport BigPixels from '../layout/bigPixels'\r\nimport { GridContainer, GridItem } from '../ui/grid'\r\nimport CalendarSubscriptions from './calendarSubscriptions'\r\nimport TitleChooser from '../ui/titleChooser'\r\n\r\nconst PreferencesPage = ({ pageContext: { title } }) => {\r\n  const setLoading = useContext(LoadingContext)[1]\r\n  const [user, setUser] = useContext(UserContext)\r\n  return (\r\n    <BigPixels>\r\n      <GridContainer>\r\n        <GridItem fullWidth>\r\n          <TitleChooser title={title} />\r\n        </GridItem>\r\n        <GridItem>\r\n          <Preferences user={user} setUser={setUser} setLoading={setLoading} />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CalendarSubscriptions />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </BigPixels>\r\n  )\r\n}\r\n\r\nexport default PreferencesPage\r\n"],"sourceRoot":""}