{"version":3,"sources":["webpack:///./src/components/votingAdmin/meetingPanel.js","webpack:///./src/components/votingAdmin/addVote.js","webpack:///./src/components/votingAdmin/voteStats.js","webpack:///./src/components/votingAdmin/votePanel.js","webpack:///./src/components/votingAdmin/attendantPanel.js","webpack:///./src/components/votingAdmin/speakerPanel.js","webpack:///./src/components/votingAdmin/addMeeting.js","webpack:///./src/components/votingAdmin/guestPanel.js","webpack:///./src/components/votingAdmin/page.js","webpack:///./src/components/modal/useConfirmModal.js","webpack:///./src/components/checkin/doorkeeperPanel.js","webpack:///./src/scss/form.module.scss","webpack:///./src/components/form/input.js","webpack:///./src/components/form/form.js"],"names":["MeetingPanel","currentMeeting","updatePatch","name","description","style","whiteSpace","enable_speaker_requests","open_attendance","clear_data","onClick","currentKey","createAlternative","existingData","text","key","AddVote","create","updateData","update","question","setQuestion","useState","alternatives","setAlternatives","map","alt","currentQuestion","setCurrentQuestion","open","value","onChange","e","target","i","newVal","prev","slice","type","checked","id","meeting","VoteStats","voteId","data","useSWR","voteSum","num_votes","reduce","a","b","Math","round","VotePanel","votes","mutate","async","newVote","post","updatedVote","put","filter","v","openCreateModal","useModal","openChartModal","closeModal","useCloseModal","confirmModal","useConfirmModal","useEffect","vote","title","subtitle","undefined","buttons","iconComponent","FiBarChart2","FiEdit2","getMemberAttendants","attendants","attendant","has_voting_rights","AttendantPanel","input","setInput","refreshInterval","onSubmit","preventDefault","newAttendant","user_username","meeting_id","length","del","user","pretty_name","x","FiTrash2","SpeakerPanel","speakers","s","prioritized","AddMeeting","endpoint","customFetcher","getGuestAttendants","GuestPanel","VotingAdminPage","pageContext","setCurrentMeeting","unorderedMeetings","meetings","reverse","find","m","fullWidth","choice","setChoice","choices","label","action","newMeeting","actionLabel","noChoicesLabel","updatedMeeting","patch","event","Confirmation","onAccept","onDecline","close","className","confirmation","openModal","isOpen","defaultProps","DoorkeeperPanel","doorkeepers","newDoorkeeper","event_id","doorkeeper","d","destroy","module","exports","AutoInput","required","min_value","max_value","min_length","max_length","change","datetime","date","boolean","integer","max","min","component","Object","prototype","hasOwnProperty","call","maxLength","minLength","inputWrapper","AutoForm","method","defaults","fields","setFields","values","setValues","errors","setErrors","options","then","res","raw","actions","POST","editable","keys","f","read_only","catch","err","response","request","field","Fragment","newValue","old","setValue","join"],"mappings":"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","file":"component---src-components-voting-admin-page-js-4be10d8ecdf7d5180d0c.js","sourcesContent":["import React from 'react'\r\nimport { ButtonGroup, Button } from '../ui/buttons'\r\nimport { patch } from '../request'\r\n\r\nconst MeetingPanel = ({ currentMeeting, updatePatch }) => (\r\n  <div>\r\n    <h2>Mötesinfo</h2>\r\n    <h3>{currentMeeting.name}</h3>\r\n    {currentMeeting.description && (\r\n      <p style={{ whiteSpace: 'pre-line' }}>{currentMeeting.description}</p>\r\n    )}\r\n    <h3>Detaljer</h3>\r\n    <ul>\r\n      <li>\r\n        {currentMeeting.enable_speaker_requests\r\n          ? 'Talarlista aktiverad'\r\n          : 'Talarlista inaktiverad'}\r\n      </li>\r\n      <li>\r\n        {currentMeeting.open_attendance\r\n          ? 'Öppen incheckning'\r\n          : 'Stängd incheckning'}\r\n      </li>\r\n      <li>{`Mötesdata rensas: ${currentMeeting.clear_data}`}</li>\r\n    </ul>\r\n    <ButtonGroup>\r\n      <Button\r\n        onClick={() =>\r\n          updatePatch({\r\n            enable_speaker_requests: !currentMeeting.enable_speaker_requests,\r\n          })\r\n        }\r\n      >\r\n        {currentMeeting.enable_speaker_requests\r\n          ? 'Inaktivera talarlista'\r\n          : 'Aktivera talarlista'}\r\n      </Button>\r\n      <Button\r\n        onClick={() =>\r\n          updatePatch({\r\n            open_attendance: !currentMeeting.open_attendance,\r\n          })\r\n        }\r\n      >\r\n        {currentMeeting.open_attendance\r\n          ? 'Stäng självincheckning'\r\n          : 'Öppna självincheckning'}\r\n      </Button>\r\n    </ButtonGroup>\r\n  </div>\r\n)\r\n\r\nexport default MeetingPanel\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nlet currentKey = 0\r\n// creates an alternative with an unique key, do not manually create alternative objects\r\n// the key does not match the id later given by the server.\r\nconst createAlternative = (existingData = {}) => {\r\n  currentKey += 1\r\n  return { text: '', ...existingData, key: currentKey }\r\n}\r\n\r\nconst AddVote = ({ currentMeeting, create, updateData, update }) => {\r\n  const [question, setQuestion] = useState(\r\n    updateData ? updateData.question : ''\r\n  )\r\n  const [alternatives, setAlternatives] = useState(\r\n    updateData\r\n      ? updateData.alternatives.map(alt => createAlternative(alt))\r\n      : [createAlternative(), createAlternative()]\r\n  )\r\n  const [currentQuestion, setCurrentQuestion] = useState(\r\n    updateData ? updateData.open : true\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        Fråga\r\n        <input\r\n          value={question}\r\n          onChange={e => {\r\n            setQuestion(e.target.value)\r\n          }}\r\n        />\r\n      </label>\r\n      <hr />\r\n      <ul>\r\n        {alternatives.map((alt, i) => (\r\n          <li key={alt.key}>\r\n            <input\r\n              value={alt.text}\r\n              onChange={e => {\r\n                const newVal = e.target.value\r\n                setAlternatives(prev => [\r\n                  ...prev.slice(0, i),\r\n                  { ...prev[i], text: newVal },\r\n                  ...prev.slice(i + 1),\r\n                ])\r\n              }}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setAlternatives(prev => [\r\n                  ...prev.slice(0, i),\r\n                  ...prev.slice(i + 1),\r\n                ])\r\n              }}\r\n            >\r\n              X\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setAlternatives(prev => [...prev, createAlternative()])\r\n        }}\r\n      >\r\n        Lägg till alternativ\r\n      </button>\r\n      <hr />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={currentQuestion}\r\n          onChange={() => setCurrentQuestion(prev => !prev)}\r\n        />\r\n        Nuvarande frågan\r\n      </label>\r\n      <hr />\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          if (updateData) {\r\n            update(updateData.id, {\r\n              question,\r\n              open: currentQuestion,\r\n              alternatives,\r\n              meeting: currentMeeting.id,\r\n            })\r\n          } else {\r\n            create({\r\n              question,\r\n              open: currentQuestion,\r\n              alternatives,\r\n              meeting: currentMeeting.id,\r\n            })\r\n          }\r\n        }}\r\n      >\r\n        {updateData ? 'Uppdatera omröstning' : 'Skapa ny omröstning'}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddVote\r\n","import React, { useRef, useEffect } from 'react'\r\nimport useSWR from 'swr'\r\n\r\nconst VoteStats = ({ currentMeeting, voteId }) => {\r\n  const { data } = useSWR(() => voteId && `/voting/admin-votes/${voteId}/`)\r\n\r\n  const voteSum = (data\r\n    ? data.alternatives.map(alt => alt.num_votes)\r\n    : []\r\n  ).reduce((a, b) => a + b, 0)\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {data &&\r\n          data.alternatives.map(alt => (\r\n            <li key={alt.text}>\r\n              {`${alt.text}: ${alt.num_votes}`}\r\n              {voteSum\r\n                ? ` (${\r\n                    alt.num_votes\r\n                      ? Math.round((1000 * alt.num_votes) / voteSum) / 10\r\n                      : 0\r\n                  }%)`\r\n                : ''}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      <p>\r\n        {'Summa: '}\r\n        {voteSum}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoteStats\r\n","import React, { useEffect } from 'react'\r\nimport useSWR from 'swr'\r\nimport { FiBarChart2, FiEdit2 } from 'react-icons/fi'\r\n\r\nimport useModal, { useCloseModal } from '../modal/useModal'\r\nimport useConfirmModal from '../modal/useConfirmModal'\r\nimport AddVote from './addVote'\r\nimport VoteStats from './voteStats'\r\nimport { List, ListItem, ListButton } from '../ui/list'\r\nimport { Button } from '../ui/buttons'\r\nimport { post, put } from '../request'\r\n\r\nconst VotePanel = ({ currentMeeting }) => {\r\n  const { data: votes, mutate } = useSWR(\r\n    `/voting/admin-votes/?event_id=${currentMeeting.id}`\r\n  )\r\n\r\n  const create = async data => {\r\n    const { data: newVote } = await post('/voting/admin-votes/', data)\r\n    mutate([...votes, newVote])\r\n    return newVote\r\n  }\r\n\r\n  const update = async (id, data) => {\r\n    const { data: updatedVote } = await put(`/voting/admin-votes/${id}/`, data)\r\n    mutate([...votes.filter(v => v.id !== id), updatedVote])\r\n    return updatedVote\r\n  }\r\n\r\n  const open = async vote => {\r\n    await closeModal()\r\n    openChartModal(`Resultat av \"${vote.question}\"`, {\r\n      voteId: vote.id,\r\n    })\r\n  }\r\n\r\n  const [openCreateModal] = useModal(AddVote)\r\n  const [openChartModal] = useModal(VoteStats)\r\n  const closeModal = useCloseModal()\r\n  const [confirmModal] = useConfirmModal()\r\n\r\n  // Close modal when a vote is created\r\n  useEffect(closeModal, [votes])\r\n\r\n  // if (votes === null) return <></>\r\n\r\n  return (\r\n    <div>\r\n      <h2>Omröstningar</h2>\r\n      <Button\r\n        onClick={() =>\r\n          openCreateModal('Ny omröstning', {\r\n            currentMeeting,\r\n            create,\r\n          })\r\n        }\r\n      >\r\n        Ny omröstning\r\n      </Button>\r\n      <List>\r\n        {votes &&\r\n          votes\r\n            .filter(vote => vote.meeting === currentMeeting.id)\r\n            .map(vote => (\r\n              <ListItem\r\n                title={vote.question}\r\n                subtitle={vote.open ? 'Active' : undefined}\r\n                key={vote.id}\r\n                buttons={[\r\n                  <ListButton\r\n                    onClick={() =>\r\n                      confirmModal(\r\n                        `Vill du se resultatet?`,\r\n                        function() {\r\n                          open(vote)\r\n                        },\r\n                        closeModal\r\n                      )\r\n                    }\r\n                    iconComponent={FiBarChart2}\r\n                    text=\"Resultat\"\r\n                    key=\"results\"\r\n                  />,\r\n                  <ListButton\r\n                    onClick={() =>\r\n                      openCreateModal(`Uppdatera \"${vote.question}\"`, {\r\n                        currentMeeting,\r\n                        update,\r\n                        updateData: vote,\r\n                      })\r\n                    }\r\n                    iconComponent={FiEdit2}\r\n                    text=\"Uppdatera omröstning\"\r\n                    key=\"update\"\r\n                  />,\r\n                ]}\r\n              />\r\n            ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VotePanel\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FiTrash2 } from 'react-icons/fi'\r\n\r\nimport { List, ListButton, ListItem } from '../ui/list'\r\nimport { Button, ButtonGroup } from '../ui/buttons'\r\nimport { del, post } from '../request'\r\nimport useSWR from 'swr'\r\n\r\nconst getMemberAttendants = attendants => {\r\n  const memberAttendants = attendants.filter(\r\n    attendant => attendant.has_voting_rights\r\n  )\r\n  return memberAttendants\r\n}\r\n\r\nconst AttendantPanel = ({ currentMeeting }) => {\r\n  const [input, setInput] = useState('')\r\n\r\n  const { data: attendants, mutate } = useSWR(\r\n    () => `/voting/attendants/?meeting_id=${currentMeeting.id}`,\r\n    { refreshInterval: 4000 }\r\n  )\r\n\r\n  if (attendants === null) return <></>\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deltagare</h2>\r\n      <form\r\n        onSubmit={async e => {\r\n          e.preventDefault()\r\n          setInput('')\r\n          const { data: newAttendant } = await post('/voting/attendants/', {\r\n            user_username: input,\r\n            meeting_id: currentMeeting.id,\r\n            has_voting_rights: true,\r\n          })\r\n          mutate([...attendants, newAttendant])\r\n        }}\r\n      >\r\n        <input value={input} onChange={e => setInput(e.target.value)} />\r\n      </form>\r\n      <div>\r\n        <ButtonGroup>\r\n          <p>{`Röstlängd: ${\r\n            attendants ? getMemberAttendants(attendants).length : 0\r\n          }`}</p>\r\n          <Button\r\n            onClick={async () => {\r\n              // TODO: fix this ugly solution\r\n              await del(\r\n                `/voting/attendants/clear/?meeting_id=${currentMeeting.id}`\r\n              )\r\n\r\n              mutate([])\r\n            }}\r\n          >\r\n            Återställ deltagarlista\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n      <List>\r\n        {attendants &&\r\n          getMemberAttendants(attendants).map(attendant => (\r\n            <ListItem\r\n              title={attendant.user.pretty_name}\r\n              key={attendant.id}\r\n              buttons={[\r\n                <ListButton\r\n                  onClick={async () => {\r\n                    await del(`/voting/attendants/${attendant.id}`, {\r\n                      meeting_id: currentMeeting.id,\r\n                    })\r\n                    mutate(attendants.filter(x => x.id !== attendant.id))\r\n                  }}\r\n                  iconComponent={FiTrash2}\r\n                  text=\"Ta bort deltagare\"\r\n                  key=\"remove\"\r\n                />,\r\n              ]}\r\n            />\r\n          ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttendantPanel\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport useSWR from 'swr'\r\n\r\nimport { FiTrash2 } from 'react-icons/fi'\r\nimport { List, ListButton, ListItem } from '../ui/list'\r\nimport { Button } from '../ui/buttons'\r\nimport { UserContext } from '../layout/layout'\r\nimport { post, del } from '../request'\r\n\r\nconst SpeakerPanel = ({ meeting }) => {\r\n  const { data: speakers, mutate } = useSWR(\r\n    () => meeting && `/voting/speakers/?meeting_id=${meeting.id}`,\r\n    { refreshInterval: 4000 }\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h2>Talarlista</h2>\r\n      <List>\r\n        {speakers &&\r\n          speakers.map(s => (\r\n            <ListItem\r\n              title={s.user.pretty_name}\r\n              subtitle={s.prioritized ? 'Replik' : null}\r\n              key={s.id}\r\n              buttons={[\r\n                <ListButton\r\n                  onClick={async () => {\r\n                    await del(`/voting/speakers/${s.id}`)\r\n                    mutate(speakers.filter(x => x.id !== s.id))\r\n                  }}\r\n                  iconComponent={FiTrash2}\r\n                  text=\"Ta bort från talarlista\"\r\n                  key=\"remove\"\r\n                />,\r\n              ]}\r\n            />\r\n          ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpeakerPanel\r\n","import React from 'react'\r\nimport AutoForm from '../form/form'\r\n\r\nconst AddMeeting = ({ create }) => (\r\n  <AutoForm\r\n    endpoint=\"/voting/admin-meetings/\" // onSubmit={() => {\r\n    //   setNewMeetingName('')\r\n    // }}\r\n    customFetcher={create}\r\n  />\r\n)\r\n\r\nexport default AddMeeting\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FiTrash2 } from 'react-icons/fi'\r\n\r\nimport { List, ListButton, ListItem } from '../ui/list'\r\nimport { Button, ButtonGroup } from '../ui/buttons'\r\nimport { del, post } from '../request'\r\nimport useSWR from 'swr'\r\n\r\nconst getGuestAttendants = attendants => {\r\n  const guestAttendants = attendants.filter(\r\n    attendant => !attendant.has_voting_rights\r\n  )\r\n  return guestAttendants\r\n}\r\n\r\nconst GuestPanel = ({ currentMeeting }) => {\r\n  const [input, setInput] = useState('')\r\n\r\n  const { data: attendants, mutate } = useSWR(\r\n    () => `/voting/attendants/?meeting_id=${currentMeeting.id}`,\r\n    { refreshInterval: 4000 }\r\n  )\r\n\r\n  if (attendants === null) return <></>\r\n\r\n  return (\r\n    <div>\r\n      <h2>Gäster/adjungerade</h2>\r\n      <form\r\n        onSubmit={async e => {\r\n          e.preventDefault()\r\n          setInput('')\r\n          const { data: newAttendant } = await post('/voting/attendants/', {\r\n            user_username: input,\r\n            meeting_id: currentMeeting.id,\r\n            has_voting_rights: false,\r\n          })\r\n          mutate([...attendants, newAttendant])\r\n        }}\r\n      >\r\n        <input value={input} onChange={e => setInput(e.target.value)} />\r\n      </form>\r\n      <div>\r\n        <ButtonGroup>\r\n          <p>{`Antal gäster/adjungerade: ${\r\n            attendants ? getGuestAttendants(attendants).length : 0\r\n          }`}</p>\r\n        </ButtonGroup>\r\n      </div>\r\n      <List>\r\n        {attendants &&\r\n          getGuestAttendants(attendants).map(attendant => (\r\n            <ListItem\r\n              title={attendant.user.pretty_name}\r\n              key={attendant.id}\r\n              buttons={[\r\n                <ListButton\r\n                  onClick={async () => {\r\n                    await del(`/voting/attendants/${attendant.id}`, {\r\n                      meeting_id: currentMeeting.id,\r\n                    })\r\n                    mutate(attendants.filter(x => x.id !== attendant.id))\r\n                  }}\r\n                  iconComponent={FiTrash2}\r\n                  text=\"Ta bort gäst\"\r\n                  key=\"remove\"\r\n                />,\r\n              ]}\r\n            />\r\n          ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GuestPanel\r\n","import React, { useState, useEffect } from 'react'\r\nimport useSWR from 'swr'\r\n\r\nimport MeetingPanel from './meetingPanel'\r\nimport DoorkeeperPanel from '../checkin/doorkeeperPanel'\r\nimport VotePanel from './votePanel'\r\nimport AttendantPanel from './attendantPanel'\r\nimport { GridContainer, GridItem } from '../ui/grid'\r\nimport SpeakerPanel from './speakerPanel'\r\nimport TitleChooser from '../ui/titleChooser'\r\nimport AddMeeting from './addMeeting'\r\nimport useModal, { useCloseModal } from '../modal/useModal'\r\nimport { post, patch } from '../request'\r\nimport BigPixels from '../layout/bigPixels'\r\nimport GuestPanel from './guestPanel'\r\n\r\nconst VotingAdminPage = ({ pageContext: { title } }) => {\r\n  const [currentMeeting, setCurrentMeeting] = useState(null)\r\n  const { data: unorderedMeetings, mutate } = useSWR('/voting/admin-meetings/')\r\n  const [openCreateModal] = useModal(AddMeeting)\r\n  const closeModal = useCloseModal()\r\n\r\n  const create = async data => {\r\n    const { data: newMeeting } = await post('/voting/admin-meetings/', data)\r\n    mutate([...unorderedMeetings, newMeeting])\r\n  }\r\n\r\n  const updatePatch = async data => {\r\n    const { data: updatedMeeting } = await patch(\r\n      `/voting/admin-meetings/${currentMeeting.id}/`,\r\n      data\r\n    )\r\n    mutate([\r\n      ...unorderedMeetings.filter(meeting => meeting.id !== currentMeeting.id),\r\n      updatedMeeting,\r\n    ])\r\n  }\r\n\r\n  const meetings = unorderedMeetings ? [...unorderedMeetings].reverse() : null\r\n\r\n  // sync currentMeeting with updated meetings\r\n  useEffect(\r\n    () => {\r\n      if (currentMeeting)\r\n        setCurrentMeeting(meetings.find(m => m.id === currentMeeting.id))\r\n    },\r\n    [meetings]\r\n  )\r\n\r\n  return (\r\n    <BigPixels>\r\n      <GridContainer>\r\n        <GridItem fullWidth>\r\n          <TitleChooser\r\n            title={title}\r\n            choice={currentMeeting}\r\n            setChoice={setCurrentMeeting}\r\n            choices={meetings}\r\n            label=\"name\"\r\n            action={() => {\r\n              openCreateModal('Nytt möte', {\r\n                create: async data => {\r\n                  await create(data)\r\n                  closeModal()\r\n                },\r\n              })\r\n            }}\r\n            actionLabel=\"Nytt möte\"\r\n            noChoicesLabel=\"Det finns inga möten just nu.\"\r\n          />\r\n        </GridItem>\r\n        {currentMeeting && (\r\n          <>\r\n            <GridItem>\r\n              <MeetingPanel\r\n                currentMeeting={currentMeeting}\r\n                updatePatch={updatePatch}\r\n              />\r\n            </GridItem>\r\n            <GridItem>\r\n              <VotePanel currentMeeting={currentMeeting} />\r\n            </GridItem>\r\n            <GridItem>\r\n              <DoorkeeperPanel event={currentMeeting} />\r\n            </GridItem>\r\n            <GridItem>\r\n              <AttendantPanel currentMeeting={currentMeeting} />\r\n            </GridItem>\r\n            <GridItem>\r\n              <GuestPanel currentMeeting={currentMeeting} />\r\n            </GridItem>\r\n            <GridItem>\r\n              <SpeakerPanel meeting={currentMeeting} />\r\n            </GridItem>\r\n          </>\r\n        )}\r\n      </GridContainer>\r\n    </BigPixels>\r\n  )\r\n}\r\n\r\nexport default VotingAdminPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport useModal, { useCloseModal } from './useModal'\r\nimport { Button } from '../ui/buttons'\r\n\r\nimport style from '../../scss/modal.module.scss'\r\n\r\nconst Confirmation = ({ text, onAccept, onDecline }) => {\r\n  const close = useCloseModal()\r\n  return (\r\n    <div className={style.confirmation}>\r\n      <p>{text}</p>\r\n      <Button\r\n        onClick={() => {\r\n          onDecline()\r\n          close()\r\n        }}\r\n      >\r\n        Nej\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          onAccept()\r\n          close()\r\n        }}\r\n      >\r\n        Ja\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nConfirmation.propTypes = {\r\n  text: PropTypes.string,\r\n  onAccept: PropTypes.func,\r\n  onDecline: PropTypes.func,\r\n}\r\n\r\nConfirmation.defaultProps = {\r\n  text: 'Är du säker?',\r\n  onAccept: () => {},\r\n  onDecline: () => {},\r\n}\r\n\r\nexport default function useConfirmModal() {\r\n  const [openModal, isOpen] = useModal(Confirmation)\r\n\r\n  const open = (text, onAccept, onDecline) => {\r\n    openModal('', { text, onAccept, onDecline })\r\n  }\r\n\r\n  return [open, isOpen]\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { FiTrash2 } from 'react-icons/fi'\r\nimport { List, ListItem, ListButton } from '../ui/list'\r\nimport useSWR from 'swr'\r\nimport { post, del } from '../request'\r\n\r\nconst DoorkeeperPanel = ({ event }) => {\r\n  const [input, setInput] = useState('')\r\n\r\n  const { data: doorkeepers, mutate } = useSWR(\r\n    `/checkin/doorkeepers/?event_id=${event.id}`\r\n  )\r\n\r\n  const create = async data => {\r\n    const { data: newDoorkeeper } = await post('/checkin/doorkeepers/', data)\r\n    mutate([...doorkeepers, newDoorkeeper])\r\n    return newDoorkeeper\r\n  }\r\n\r\n  const destroy = async id => {\r\n    await del(`/checkin/doorkeepers/${id}/`)\r\n    mutate(doorkeepers.filter(d => d.id !== id))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dörrvakter</h2>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          setInput('')\r\n\r\n          create({\r\n            user_username: input,\r\n            event_id: event.id,\r\n          })\r\n        }}\r\n      >\r\n        <input value={input} onChange={e => setInput(e.target.value)} />\r\n      </form>\r\n      <List>\r\n        {doorkeepers &&\r\n          doorkeepers.map(doorkeeper => (\r\n            <ListItem\r\n              title={doorkeeper.user.pretty_name}\r\n              key={doorkeeper.id}\r\n              buttons={[\r\n                <ListButton\r\n                  onClick={() => destroy(doorkeeper.id)}\r\n                  iconComponent={FiTrash2}\r\n                  text=\"Ta bort dörrvakt\"\r\n                  key=\"remove\"\r\n                />,\r\n              ]}\r\n            />\r\n          ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DoorkeeperPanel\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form-module--label--1D42h\",\"inputWrapper\":\"form-module--inputWrapper--1aGr5\",\"required\":\"form-module--required--1fgVY\"};","import React, { useState, useEffect } from 'react'\r\nimport DateTimePicker from './dateTimePicker'\r\n\r\nimport style from '../../scss/form.module.scss'\r\n\r\nconst AutoInput = ({\r\n  value,\r\n  onChange,\r\n  type,\r\n  label,\r\n  required,\r\n  min_value,\r\n  max_value,\r\n  min_length,\r\n  max_length,\r\n}) => {\r\n  const change = e => {\r\n    onChange(e.target.value)\r\n  }\r\n\r\n  const map = {\r\n    datetime: <DateTimePicker value={value} onChange={onChange} />,\r\n    date: <input type=\"date\" value={value} onChange={change} />,\r\n    boolean: (\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={value}\r\n        onChange={e => {\r\n          onChange(e.target.checked)\r\n        }}\r\n      />\r\n    ),\r\n    integer: (\r\n      <input\r\n        type=\"number\"\r\n        value={value}\r\n        onChange={change}\r\n        max={max_value}\r\n        min={min_value}\r\n      />\r\n    ),\r\n  }\r\n\r\n  const component = Object.prototype.hasOwnProperty.call(map, type) ? (\r\n    map[type]\r\n  ) : (\r\n    <input\r\n      value={value}\r\n      onChange={change}\r\n      maxLength={max_length}\r\n      minLength={min_length}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <label className={style.label}>\r\n      {`${label}`}\r\n      {required && <span className={style.required}>*</span>}\r\n      <div className={style.inputWrapper}>{component}</div>\r\n    </label>\r\n  )\r\n}\r\nexport default AutoInput\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport request, { options } from '../request'\r\nimport AutoInput from './input'\r\nimport { Button } from '../ui/buttons'\r\n\r\nconst AutoForm = ({ endpoint, method, customFetcher, onSubmit, defaults }) => {\r\n  const [fields, setFields] = useState()\r\n  const [values, setValues] = useState(defaults)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const setValue = (field, value) => {\r\n    setValues(old => ({ ...old, [field]: value }))\r\n  }\r\n\r\n  const setError = (field, error) => {\r\n    setErrors(old => ({ ...old, [field]: error }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // request endpoint info from server\r\n    options(endpoint)\r\n      .then(res => {\r\n        const raw = res.data.actions.POST\r\n\r\n        // object to array\r\n        const arrayified = Object.keys(raw).map(key => ({\r\n          key,\r\n          ...raw[key],\r\n        }))\r\n        const editable = arrayified.filter(f => !f.read_only)\r\n\r\n        setFields(editable)\r\n      })\r\n      .catch(err => {})\r\n  }, endpoint)\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault()\r\n        onSubmit()\r\n        if (customFetcher) {\r\n          customFetcher(values).catch(err => {\r\n            if (err.response) {\r\n              setErrors(err.response.data)\r\n            }\r\n          })\r\n        } else {\r\n          request({ endpoint, method, data: values })\r\n        }\r\n      }}\r\n    >\r\n      {fields &&\r\n        fields.map(field => (\r\n          <React.Fragment key={field.key}>\r\n            <AutoInput\r\n              {...field}\r\n              onChange={newValue => {\r\n                setValue(field.key, newValue)\r\n              }}\r\n              value={values[field.key]}\r\n            />\r\n            {Object.prototype.hasOwnProperty.call(errors, field.key) && (\r\n              <div>{errors[field.key].join(', ')}</div>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      <Button type=\"submit\" onClick={() => {}}>\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAutoForm.defaultProps = {\r\n  method: 'POST',\r\n  customFetcher: null,\r\n  onSubmit: () => {},\r\n  defaults: {},\r\n}\r\n\r\nAutoForm.propTypes = {\r\n  method: PropTypes.string,\r\n  endpoint: PropTypes.string.isRequired,\r\n  customFetcher: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  defaults: PropTypes.object,\r\n}\r\n\r\nexport default AutoForm\r\n"],"sourceRoot":""}