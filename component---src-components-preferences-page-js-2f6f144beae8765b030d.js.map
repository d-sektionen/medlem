{"version":3,"sources":["webpack:///./src/components/modal/useConfirmModal.js","webpack:///./src/scss/form.module.scss","webpack:///./src/components/form/input.js","webpack:///./src/components/form/form.js","webpack:///./src/scss/preferences.module.scss","webpack:///./src/components/preferences/preferences.js","webpack:///./src/components/preferences/addCalendarSubscription.js","webpack:///./src/components/preferences/calendarLink.js","webpack:///./src/components/preferences/calendarSubscriptions.js","webpack:///./src/components/preferences/page.js"],"names":["Confirmation","text","onAccept","onDecline","close","useCloseModal","className","style","confirmation","onClick","useConfirmModal","openModal","isOpen","useModal","defaultProps","module","exports","AutoInput","value","onChange","type","label","required","min_value","max_value","min_length","max_length","change","e","target","map","datetime","date","boolean","checked","integer","max","min","component","Object","prototype","hasOwnProperty","call","maxLength","minLength","inputWrapper","AutoForm","endpoint","method","customFetcher","onSubmit","defaults","fields","setFields","useState","values","setValues","errors","setErrors","useEffect","options","then","res","raw","data","actions","POST","editable","keys","key","filter","f","read_only","catch","err","preventDefault","response","request","field","Fragment","newValue","old","setValue","join","Preferences","props","user","profile","state","infomailSubscriber","infomail_subscriber","liuCardId","liu_card_id","firstName","first_name","lastName","last_name","handleChange","bind","handleSubmit","event","checkbox","this","setState","setLoading","setUser","error","undefined","success","put","status","prev","console","log","render","membership","inputLabel","Component","AddCalendarSubscription","create","include_bookings","include_events_attending","include_events_not_attending","CalendarLink","url","calendarSubNotice","readOnly","navigator","clipboard","writeText","getTitle","sub","parts","push","combined","charAt","toUpperCase","substring","CalendarSubscriptions","openCreateModal","openLinkModal","openConfirmation","closeModal","subs","mutate","useSWR","title","id","buttons","iconComponent","FiLink","FiTrash2","async","del","s","newSub","post","PreferencesPage","pageContext","useContext","LoadingContext","UserContext","fullWidth"],"mappings":"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","file":"component---src-components-preferences-page-js-2f6f144beae8765b030d.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport useModal, { useCloseModal } from './useModal'\nimport { Button } from '../ui/buttons'\n\nimport style from '../../scss/modal.module.scss'\n\nconst Confirmation = ({ text, onAccept, onDecline }) => {\n  const close = useCloseModal()\n  return (\n    <div className={style.confirmation}>\n      <p>{text}</p>\n      <Button\n        onClick={() => {\n          onDecline()\n          close()\n        }}\n      >\n        Nej\n      </Button>\n      <Button\n        onClick={() => {\n          onAccept()\n          close()\n        }}\n      >\n        Ja\n      </Button>\n    </div>\n  )\n}\n\nConfirmation.propTypes = {\n  text: PropTypes.string,\n  onAccept: PropTypes.func,\n  onDecline: PropTypes.func,\n}\n\nConfirmation.defaultProps = {\n  text: 'Är du säker?',\n  onAccept: () => {},\n  onDecline: () => {},\n}\n\nexport default function useConfirmModal() {\n  const [openModal, isOpen] = useModal(Confirmation)\n\n  const open = (text, onAccept, onDecline) => {\n    openModal('', { text, onAccept, onDecline })\n  }\n\n  return [open, isOpen]\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"form-module--label--1j4rO\",\"inputWrapper\":\"form-module--inputWrapper--tEZjQ\",\"required\":\"form-module--required--1ei65\"};","import React, { useState, useEffect } from 'react'\nimport DateTimePicker from './dateTimePicker'\n\nimport style from '../../scss/form.module.scss'\n\nconst AutoInput = ({\n  value,\n  onChange,\n  type,\n  label,\n  required,\n  min_value,\n  max_value,\n  min_length,\n  max_length,\n}) => {\n  const change = e => {\n    onChange(e.target.value)\n  }\n\n  const map = {\n    datetime: <DateTimePicker value={value} onChange={onChange} />,\n    date: <input type=\"date\" value={value} onChange={change} />,\n    boolean: (\n      <input\n        type=\"checkbox\"\n        checked={value}\n        onChange={e => {\n          onChange(e.target.checked)\n        }}\n      />\n    ),\n    integer: (\n      <input\n        type=\"number\"\n        value={value}\n        onChange={change}\n        max={max_value}\n        min={min_value}\n      />\n    ),\n  }\n\n  const component = Object.prototype.hasOwnProperty.call(map, type) ? (\n    map[type]\n  ) : (\n    <input\n      value={value}\n      onChange={change}\n      maxLength={max_length}\n      minLength={min_length}\n    />\n  )\n\n  return (\n    <label className={style.label}>\n      {`${label}`}\n      {required && <span className={style.required}>*</span>}\n      <div className={style.inputWrapper}>{component}</div>\n    </label>\n  )\n}\nexport default AutoInput\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport request, { options } from '../request'\nimport AutoInput from './input'\nimport { Button } from '../ui/buttons'\n\nconst AutoForm = ({ endpoint, method, customFetcher, onSubmit, defaults }) => {\n  const [fields, setFields] = useState()\n  const [values, setValues] = useState(defaults)\n  const [errors, setErrors] = useState({})\n\n  const setValue = (field, value) => {\n    setValues(old => ({ ...old, [field]: value }))\n  }\n\n  const setError = (field, error) => {\n    setErrors(old => ({ ...old, [field]: error }))\n  }\n\n  useEffect(() => {\n    // request endpoint info from server\n    options(endpoint)\n      .then(res => {\n        const raw = res.data.actions.POST\n\n        // object to array\n        const arrayified = Object.keys(raw).map(key => ({\n          key,\n          ...raw[key],\n        }))\n        const editable = arrayified.filter(f => !f.read_only)\n\n        setFields(editable)\n      })\n      .catch(err => {})\n  }, endpoint)\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault()\n        onSubmit()\n        if (customFetcher) {\n          customFetcher(values).catch(err => {\n            if (err.response) {\n              setErrors(err.response.data)\n            }\n          })\n        } else {\n          request({ endpoint, method, data: values })\n        }\n      }}\n    >\n      {fields &&\n        fields.map(field => (\n          <React.Fragment key={field.key}>\n            <AutoInput\n              {...field}\n              onChange={newValue => {\n                setValue(field.key, newValue)\n              }}\n              value={values[field.key]}\n            />\n            {Object.prototype.hasOwnProperty.call(errors, field.key) && (\n              <div>{errors[field.key].join(', ')}</div>\n            )}\n          </React.Fragment>\n        ))}\n      <Button type=\"submit\" onClick={() => {}}>\n        Submit\n      </Button>\n    </form>\n  )\n}\n\nAutoForm.defaultProps = {\n  method: 'POST',\n  customFetcher: null,\n  onSubmit: () => {},\n  defaults: {},\n}\n\nAutoForm.propTypes = {\n  method: PropTypes.string,\n  endpoint: PropTypes.string.isRequired,\n  customFetcher: PropTypes.func,\n  onSubmit: PropTypes.func,\n  defaults: PropTypes.object,\n}\n\nexport default AutoForm\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputLabel\":\"preferences-module--inputLabel--37O6A\",\"error\":\"preferences-module--error--2-qsf\",\"success\":\"preferences-module--success--1uRT2\",\"calendarSubNotice\":\"preferences-module--calendarSubNotice--DsQks\"};","import React, { Component } from 'react'\n\nimport { put, patch } from '../request'\n\nimport style from '../../scss/preferences.module.scss'\nimport { Button } from '../ui/buttons'\n\nclass Preferences extends Component {\n  constructor(props) {\n    super(props)\n\n    if (!props.user.profile) props.user.profile = {}\n\n    this.state = {\n      infomailSubscriber: props.user.profile.infomail_subscriber,\n      liuCardId: props.user.profile.liu_card_id,\n      firstName: props.user.first_name,\n      lastName: props.user.last_name,\n      errors: {},\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(field, event, checkbox = false) {\n    if (checkbox) this.setState({ [field]: event.target.checked })\n    else this.setState({ [field]: event.target.value })\n  }\n\n  handleSubmit(event) {\n    const { setLoading, setUser } = this.props\n\n    // reset errors\n    this.setState({ error: undefined, success: undefined, errors: {} })\n\n    setLoading(true)\n    put('/account/profile/', {\n      first_name: this.state.firstName,\n      last_name: this.state.lastName,\n      liu_card_id: this.state.liuCardId,\n      infomail_subscriber: this.state.infomailSubscriber,\n    })\n      .then(res => {\n        setLoading(false)\n        if (res.status < 300) {\n          this.setState({ success: 'Ändringarna har sparats.' })\n\n          setUser(prev => ({\n            ...prev,\n            first_name: res.data.firstName,\n            last_name: res.data.lastName,\n            profile: {\n              ...prev.profile,\n              liu_card_id: res.data.liu_card_id,\n              infomail_subscriber: res.data.infomail_subscriber,\n            },\n          }))\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        setLoading(false)\n        if (!err.response) this.setState({ error: 'Nätverksfel.' })\n        else if (err.response.status === 400)\n          this.setState({ errors: err.response.data })\n        else this.setState({ error: 'Något gick fel.' })\n      })\n    event.preventDefault()\n  }\n\n  render() {\n    const { user } = this.props\n    const {\n      firstName,\n      lastName,\n      liuCardId,\n      infomailSubscriber,\n      errors,\n      error,\n      success,\n    } = this.state\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h2>Profil</h2>\n        <p>\n          <strong>\n            {user.membership\n              ? `Du är sektionsmedlem.`\n              : 'Du saknar sektionsmedlemsskap.'}\n          </strong>\n        </p>\n        <div>\n          <label className={style.inputLabel}>\n            Förnamn:\n            <input\n              value={firstName}\n              onChange={e => this.handleChange('firstName', e)}\n            />\n          </label>\n          {errors.first_name && (\n            <div className={style.error}>{errors.first_name}</div>\n          )}\n        </div>\n        <div>\n          <label className={style.inputLabel}>\n            Efternamn:\n            <input\n              value={lastName}\n              onChange={e => this.handleChange('lastName', e)}\n            />\n          </label>\n          {errors.last_name && (\n            <div className={style.error}>{errors.last_name}</div>\n          )}\n        </div>\n        <div>\n          <label className={style.inputLabel}>\n            LiU-kortnummer:\n            <input\n              value={liuCardId}\n              onChange={e => this.handleChange('liuCardId', e)}\n            />\n          </label>\n          {errors.profile && errors.profile.liu_card_id && (\n            <div className={style.error}>{errors.profile.liu_card_id}</div>\n          )}\n        </div>\n        <div>\n          <label className={style.inputLabel}>\n            Prenumerera på veckomailet:\n            <input\n              type=\"checkbox\"\n              checked={infomailSubscriber}\n              onChange={e => this.handleChange('infomailSubscriber', e, true)}\n            />\n          </label>\n          {errors.profile && errors.profile.infomail_subscriber && (\n            <div className={style.error}>\n              {errors.profile.infomail_subscriber}\n            </div>\n          )}\n        </div>\n        <div>\n          <Button type=\"submit\">Spara</Button>\n        </div>\n        <div>\n          {error && <div className={style.error}>{error}</div>}\n          {success && <div className={style.success}>{success}</div>}\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default Preferences\n","import React from 'react'\nimport AutoForm from '../form/form'\n\nconst AddCalendarSubscription = ({ create }) => (\n  <AutoForm\n    endpoint=\"/account/calendar-subscriptions/\"\n    customFetcher={create}\n    defaults={{\n      include_bookings: true,\n      include_events_attending: true,\n      include_events_not_attending: true,\n    }}\n  />\n)\n\nexport default AddCalendarSubscription\n","import React from 'react'\nimport { Button } from '../ui/buttons'\n\nimport style from '../../scss/preferences.module.scss'\n\nconst CalendarLink = ({ url }) => (\n  <>\n    <p>\n      Denna webbadress kan importeras i ditt kalenderprogram. Länken kommer\n      automatiskt hållas uppdaterad med nya händelser.\n    </p>\n    <div className={style.calendarSubNotice}>\n      <input value={url} readOnly />\n      <Button\n        onClick={() => {\n          // TODO: Error handling???\n          navigator.clipboard.writeText(url)\n        }}\n      >\n        Kopiera\n      </Button>\n    </div>\n  </>\n)\n\nexport default CalendarLink\n","import React, { useState } from 'react'\nimport useSWR from 'swr'\nimport { FiLink, FiTrash2 } from 'react-icons/fi'\nimport { List, ListItem, ListButton } from '../ui/list'\nimport useConfirmModal from '../modal/useConfirmModal'\nimport { del, post } from '../request'\nimport AddCalendarSubscription from './addCalendarSubscription'\nimport useModal, { useCloseModal } from '../modal/useModal'\nimport { Button } from '../ui/buttons'\nimport CalendarLink from './calendarLink'\n\nconst getTitle = sub => {\n  const parts = []\n  if (sub.include_bookings) parts.push('bokningar')\n  if (sub.include_events_attending) parts.push('anmälda evenemang')\n  if (sub.include_events_not_attending) parts.push('oanmälda evenemang')\n\n  const combined = parts.join(', ')\n  return combined.charAt(0).toUpperCase() + combined.substring(1)\n}\n\nconst CalendarSubscriptions = () => {\n  const [openCreateModal] = useModal(AddCalendarSubscription)\n  const [openLinkModal] = useModal(CalendarLink)\n  const [openConfirmation] = useConfirmModal()\n  const closeModal = useCloseModal()\n  const { data: subs, mutate } = useSWR('/account/calendar-subscriptions/')\n\n  return (\n    <div>\n      <h2>Kalenderprenumerationer</h2>\n      <List>\n        {subs &&\n          subs.map(sub => (\n            <ListItem\n              title={getTitle(sub)}\n              key={sub.id}\n              buttons={[\n                <ListButton\n                  iconComponent={FiLink}\n                  text=\"Visa länk\"\n                  onClick={() => {\n                    openLinkModal('Prenumerationslänk', {\n                      url: sub.url,\n                    })\n                  }}\n                  key=\"view\"\n                />,\n                <ListButton\n                  iconComponent={FiTrash2}\n                  text=\"Ta bort prenumeration\"\n                  onClick={() => {\n                    openConfirmation(\n                      'Är du säker på att du vill ta bort prenumerationen?',\n                      async () => {\n                        await del(`/account/calendar-subscriptions/${sub.id}/`)\n                        mutate(subs.filter(s => s.id !== sub.id))\n                      }\n                    )\n                  }}\n                  key=\"delete\"\n                />,\n              ]}\n            />\n          ))}\n      </List>\n      <Button\n        onClick={() => {\n          openCreateModal('Ny prenumeration', {\n            create: async data => {\n              const { data: newSub } = await post(\n                '/account/calendar-subscriptions/',\n                data\n              )\n              mutate([...subs, newSub])\n              closeModal()\n            },\n          })\n        }}\n      >\n        Ny prenumeration\n      </Button>\n    </div>\n  )\n}\n\nexport default CalendarSubscriptions\n","import React, { useContext } from 'react'\nimport { UserContext, LoadingContext } from '../layout/layout'\nimport Preferences from './preferences'\nimport BigPixels from '../layout/bigPixels'\nimport { GridContainer, GridItem } from '../ui/grid'\nimport CalendarSubscriptions from './calendarSubscriptions'\nimport TitleChooser from '../ui/titleChooser'\n\nconst PreferencesPage = ({ pageContext: { title } }) => {\n  const setLoading = useContext(LoadingContext)[1]\n  const [user, setUser] = useContext(UserContext)\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem fullWidth>\n          <TitleChooser title={title} />\n        </GridItem>\n        <GridItem>\n          <Preferences user={user} setUser={setUser} setLoading={setLoading} />\n        </GridItem>\n        <GridItem>\n          <CalendarSubscriptions />\n        </GridItem>\n      </GridContainer>\n    </BigPixels>\n  )\n}\n\nexport default PreferencesPage\n"],"sourceRoot":""}