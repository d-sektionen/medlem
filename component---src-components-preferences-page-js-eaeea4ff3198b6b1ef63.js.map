{"version":3,"file":"component---src-components-preferences-page-js-eaeea4ff3198b6b1ef63.js","mappings":"+OACWA,EAAQ,4BACRC,EAAe,mCC4D1B,MAzDkBC,IAUX,IAVY,MACjBC,EAAK,SACLC,EAAQ,KACRC,EAAI,MACJC,EAAK,SACLC,EAAQ,UACRC,EAAS,UACTC,EAAS,WACTC,EAAU,WACVC,GACDT,EACC,MAAMU,EAASC,IACbT,EAASS,EAAEC,OAAOX,MAAM,EAGpBY,EAAM,CACVC,SAAUC,EAAAA,cAACC,EAAAA,EAAc,CAACf,MAAOA,EAAOC,SAAUA,IAClDe,KAAMF,EAAAA,cAAA,SAAOZ,KAAK,OAAOF,MAAOA,EAAOC,SAAUQ,IACjDQ,QACEH,EAAAA,cAAA,SACEZ,KAAK,WACLgB,QAASlB,EACTC,SAAUS,IACRT,EAASS,EAAEC,OAAOO,QAAQ,IAIhCC,QACEL,EAAAA,cAAA,SACEZ,KAAK,SACLF,MAAOA,EACPC,SAAUQ,EACVW,IAAKd,EACLe,IAAKhB,KAKLiB,EAAYC,OAAOC,UAAUC,eAAeC,KAAKd,EAAKV,GAC1DU,EAAIV,GAEJY,EAAAA,cAAA,SACEd,MAAOA,EACPC,SAAUQ,EACVkB,UAAWnB,EACXoB,UAAWrB,IAIf,OACEO,EAAAA,cAAA,SAAOe,UAAWhC,GAAM,GAClBM,EACHC,GAAYU,EAAAA,cAAA,QAAMe,UAAWC,EAAAA,UAAU,KACxChB,EAAAA,cAAA,OAAKe,UAAW/B,GAAewB,GACzB,E,UCrDZ,MAAMS,EAAWhC,IAA8D,IAA7D,SAAEiC,EAAQ,OAAEC,EAAM,cAAEC,EAAa,SAAEC,EAAQ,SAAEC,GAAUrC,EACvE,MAAM,EAACsC,EAAO,EAACC,IAAaC,EAAAA,EAAAA,aACtB,EAACC,EAAO,EAACC,IAAaF,EAAAA,EAAAA,UAASH,IAC/B,EAACM,EAAO,EAACC,IAAaJ,EAAAA,EAAAA,UAAS,CAAC,GA4BtC,OAlBAK,EAAAA,EAAAA,YAAU,MAERC,EAAAA,EAAAA,IAAQb,GACLc,MAAKC,IACJ,MAAMC,EAAMD,EAAIE,KAAKC,QAAQC,KAOvBC,EAJa7B,OAAO8B,KAAKL,GAAKpC,KAAI0C,IAAG,CACzCA,SACGN,EAAIM,OAEmBC,QAAOC,IAAMA,EAAEC,YAE3CnB,EAAUc,EAAS,IAEpBM,OAAMC,OAAU,GAClB3B,GAGDlB,EAAAA,cAAA,QACEqB,SAAUzB,IACRA,EAAEkD,iBACFzB,IACID,EACFA,EAAcM,GAAQkB,OAAMC,IACtBA,EAAIE,UACNlB,EAAUgB,EAAIE,SAASZ,KACzB,KAGFa,EAAAA,EAAAA,IAAQ,CAAE9B,WAAUC,SAAQgB,KAAMT,GACpC,GAGDH,GACCA,EAAOzB,KAAImD,GACTjD,EAAAA,cAACA,EAAAA,SAAc,CAACwC,IAAKS,EAAMT,KACzBxC,EAAAA,cAACkD,EAASzC,OAAA0C,OAAA,GACJF,EAAK,CACT9D,SAAUiE,IA/CLC,EAACJ,EAAO/D,KACvByC,GAAU2B,IAAG,IAAUA,EAAK,CAACL,GAAQ/D,KAAS,EA+ClCmE,CAASJ,EAAMT,IAAKY,EAAS,EAE/BlE,MAAOwC,EAAOuB,EAAMT,QAErB/B,OAAOC,UAAUC,eAAeC,KAAKgB,EAAQqB,EAAMT,MAClDxC,EAAAA,cAAA,WAAM4B,EAAOqB,EAAMT,KAAKe,KAAK,UAIrCvD,EAAAA,cAACwD,EAAAA,GAAM,CAACpE,KAAK,SAASqE,QAASA,QAAU,UAGpC,EAIXxC,EAASyC,aAAe,CACtBvC,OAAQ,OACRC,cAAe,KACfC,SAAUA,OACVC,SAAU,CAAC,GAWb,O,mGClFA,MAAMqC,EAAe1E,IAAoC,IAAnC,KAAE2E,EAAI,SAAEC,EAAQ,UAAEC,GAAW7E,EACjD,MAAM8E,GAAQC,EAAAA,EAAAA,KACd,OACEhE,EAAAA,cAAA,OAAKe,UAAWkD,EAAAA,IACdjE,EAAAA,cAAA,SAAI4D,GACJ5D,EAAAA,cAACwD,EAAAA,GAAM,CACLC,QAASA,KACPK,IACAC,GAAO,GAEV,OAGD/D,EAAAA,cAACwD,EAAAA,GAAM,CACLC,QAASA,KACPI,IACAE,GAAO,GAEV,MAGG,EAgBK,SAASG,IACtB,MAAOC,EAAWC,IAAUC,EAAAA,EAAAA,GAASV,GAMrC,MAAO,CAJMW,CAACV,EAAMC,EAAUC,KAC5BK,EAAU,GAAI,CAAEP,OAAMC,WAAUC,aAAY,EAGhCM,EAChB,CAdAT,EAAaD,aAAe,CAC1BE,KAAM,eACNC,SAAUA,OACVC,UAAWA,O,0HCzCFS,EAAQ,mCAGRC,EAAa,wC,UCoKxB,MAjKiB,SAAAC,GACf,SAAAC,EAAYC,GAAQ,IAADC,EAc+B,OAbhDA,EAAAH,EAAA7D,KAAA,KAAM+D,IAAM,KAEPA,EAAME,KAAKC,UAASH,EAAME,KAAKC,QAAU,CAAC,GAE/CF,EAAKG,MAAQ,CACXC,mBAAoBL,EAAME,KAAKC,QAAQG,oBACvCC,UAAWP,EAAME,KAAKC,QAAQK,YAC9BC,UAAWT,EAAME,KAAKQ,WACtBC,SAAUX,EAAME,KAAKU,UACrB3D,OAAQ,CAAC,GAGXgD,EAAKY,aAAeZ,EAAKY,aAAaC,MAAIC,EAAAA,EAAAA,GAAAd,IAC1CA,EAAKe,aAAef,EAAKe,aAAaF,MAAIC,EAAAA,EAAAA,GAAAd,IAAMA,CAClD,EAhBegB,EAAAA,EAAAA,GAAAlB,EAAAD,GAgBd,IAAAoB,EAAAnB,EAAAhE,UA8IA,OA9IAmF,EAEDL,aAAA,SAAavC,EAAO6C,EAAOC,QAAQ,IAARA,IAAAA,GAAW,GAChCA,EAAUC,KAAKC,SAAS,CAAE,CAAChD,GAAQ6C,EAAMjG,OAAOO,UAC/C4F,KAAKC,SAAS,CAAE,CAAChD,GAAQ6C,EAAMjG,OAAOX,OAC7C,EAAC2G,EAEDF,aAAA,SAAaG,GACX,MAAM,WAAEI,EAAU,QAAEC,GAAYH,KAAKrB,MAGrCqB,KAAKC,SAAS,CAAEG,WAAOC,EAAWC,aAASD,EAAWzE,OAAQ,CAAC,IAE/DsE,GAAW,IACXK,EAAAA,EAAAA,IAAI,oBAAqB,CACvBlB,WAAYW,KAAKjB,MAAMK,UACvBG,UAAWS,KAAKjB,MAAMO,SACtBH,YAAaa,KAAKjB,MAAMG,UACxBD,oBAAqBe,KAAKjB,MAAMC,qBAE/BhD,MAAKC,IACJiE,GAAW,GACPjE,EAAIuE,OAAS,MACfR,KAAKC,SAAS,CAAEK,QAAS,6BAEzBH,GAAQM,IAAI,IACPA,EACHpB,WAAYpD,EAAIE,KAAKiD,UACrBG,UAAWtD,EAAIE,KAAKmD,SACpBR,QAAS,IACJ2B,EAAK3B,QACRK,YAAalD,EAAIE,KAAKgD,YACtBF,oBAAqBhD,EAAIE,KAAK8C,yBAGpC,IAEDrC,OAAMC,IACL6D,QAAQC,IAAI9D,GACZqD,GAAW,GACNrD,EAAIE,SACwB,MAAxBF,EAAIE,SAASyD,QACpBR,KAAKY,iBAAiB/D,EAAIE,UAFTiD,KAAKC,SAAS,CAAEG,MAAO,gBAG1C,IAEJN,EAAMhD,gBACR,EAEA+C,EAKAe,iBAAA,SAAiB7D,GAAW,IAAD8D,EACzB,OAAiB,QAAjBA,EAAI9D,EAASZ,YAAI,IAAA0E,GAAbA,EAAe1B,YACV,CACLvD,OAAQ,CACNkD,QAAS,CAAEK,YAAa,uCAKvB,CAAEiB,MAAO,kBAClB,EAACP,EAEDiB,OAAA,WACE,MAAM,KAAEjC,GAASmB,KAAKrB,OAChB,UACJS,EAAS,SACTE,EAAQ,UACRJ,EAAS,mBACTF,EAAkB,OAClBpD,EAAM,MACNwE,EAAK,QACLE,GACEN,KAAKjB,MACT,OACE/E,EAAAA,cAAA,QAAMqB,SAAU2E,KAAKL,cACnB3F,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,SACEA,EAAAA,cAAA,cACG6E,EAAKkC,WAAU,wBAEZ,mCAGR/G,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAOe,UAAWyD,GAAY,WAE5BxE,EAAAA,cAAA,SACEd,MAAOkG,EACPjG,SAAUS,GAAKoG,KAAKR,aAAa,YAAa5F,MAGjDgC,EAAOyD,YACNrF,EAAAA,cAAA,OAAKe,UAAWwD,GAAQ3C,EAAOyD,aAGnCrF,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAOe,UAAWyD,GAAY,aAE5BxE,EAAAA,cAAA,SACEd,MAAOoG,EACPnG,SAAUS,GAAKoG,KAAKR,aAAa,WAAY5F,MAGhDgC,EAAO2D,WAAavF,EAAAA,cAAA,OAAKe,UAAWwD,GAAQ3C,EAAO2D,YAEtDvF,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAOe,UAAWyD,GAAY,kBAE5BxE,EAAAA,cAAA,SACEd,MAAOgG,EACP/F,SAAUS,GAAKoG,KAAKR,aAAa,YAAa5F,MAGjDgC,EAAOkD,SAAWlD,EAAOkD,QAAQK,aAChCnF,EAAAA,cAAA,OAAKe,UAAWwD,GAAQ3C,EAAOkD,QAAQK,cAG3CnF,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAOe,UAAWyD,GAAY,8BAE5BxE,EAAAA,cAAA,SACEZ,KAAK,WACLgB,QAAS4E,EACT7F,SAAUS,GAAKoG,KAAKR,aAAa,qBAAsB5F,GAAG,MAG7DgC,EAAOkD,SAAWlD,EAAOkD,QAAQG,qBAChCjF,EAAAA,cAAA,OAAKe,UAAWwD,GAAQ3C,EAAOkD,QAAQG,sBAG3CjF,EAAAA,cAAA,WACEA,EAAAA,cAACwD,EAAAA,GAAM,CAACpE,KAAK,UAAS,UAExBY,EAAAA,cAAA,WACGoG,GAASpG,EAAAA,cAAA,OAAKe,UAAWwD,GAAQ6B,GACjCE,GAAWtG,EAAAA,cAAA,OAAKe,UD/JN,sCC+J2BuF,IAI9C,EAAC5B,CAAA,CA9Jc,CAASsC,EAAAA,W,+ECQ1B,MAZgC/H,IAAA,IAAC,OAAEgI,GAAQhI,EAAA,OACzCe,EAAAA,cAACiB,EAAAA,EAAQ,CACPC,SAAS,mCACTE,cAAe6F,EACf3F,SAAU,CACR4F,kBAAkB,EAClBC,0BAA0B,EAC1BC,8BAA8B,IAEhC,E,UCaJ,MApBqBnI,IAAA,IAAC,IAAEoI,GAAKpI,EAAA,OAC3Be,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,SAAG,0HAIHA,EAAAA,cAAA,OAAKe,UHRsB,gDGSzBf,EAAAA,cAAA,SAAOd,MAAOmI,EAAKC,UAAQ,IAC3BtH,EAAAA,cAACwD,EAAAA,GAAM,CACLC,QAASA,KAEP8D,UAAUC,UAAUC,UAAUJ,EAAI,GAErC,YAIF,ECXL,MAAMK,EAAWC,IACf,MAAMC,EAAQ,GACVD,EAAIT,kBAAkBU,EAAMC,KAAK,aACjCF,EAAIR,0BAA0BS,EAAMC,KAAK,qBACzCF,EAAIP,8BAA8BQ,EAAMC,KAAK,sBAEjD,MAAMC,EAAWF,EAAMrE,KAAK,MAC5B,OAAOuE,EAASC,OAAO,GAAGC,cAAgBF,EAASG,UAAU,EAAE,EAoEjE,MAjE8BC,KAC5B,MAAOC,IAAmB9D,EAAAA,EAAAA,GAAS+D,IAC5BC,IAAiBhE,EAAAA,EAAAA,GAASiE,IAC1BC,IAAoBrE,EAAAA,EAAAA,KACrBsE,GAAaxE,EAAAA,EAAAA,MACX7B,KAAMsG,EAAI,OAAEC,IAAWC,EAAAA,EAAAA,IAAO,oCAEtC,OACE3I,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAI,2BACJA,EAAAA,cAAC4I,EAAAA,GAAI,KACFH,GACCA,EAAK3I,KAAI6H,GACP3H,EAAAA,cAAC6I,EAAAA,GAAQ,CACPC,MAAOpB,EAASC,GAChBnF,IAAKmF,EAAIoB,GACTC,QAAS,CACPhJ,EAAAA,cAACiJ,EAAAA,GAAU,CACTC,cAAeC,EAAAA,IACfvF,KAAK,YACLH,QAASA,KACP4E,EAAc,qBAAsB,CAClChB,IAAKM,EAAIN,KACT,EAEJ7E,IAAI,SAENxC,EAAAA,cAACiJ,EAAAA,GAAU,CACTC,cAAeE,EAAAA,IACfxF,KAAK,wBACLH,QAASA,KACP8E,EACE,uDACAc,gBACQC,EAAAA,EAAAA,IAAI,mCAAmC3B,EAAIoB,GAAE,KACnDL,EAAOD,EAAKhG,QAAO8G,GAAKA,EAAER,KAAOpB,EAAIoB,KAAI,GAE5C,EAEHvG,IAAI,iBAMhBxC,EAAAA,cAACwD,EAAAA,GAAM,CACLC,QAASA,KACP0E,EAAgB,mBAAoB,CAClClB,OAAQoC,UACN,MAAQlH,KAAMqH,SAAiBC,EAAAA,EAAAA,IAC7B,mCACAtH,GAEFuG,EAAO,GAADgB,QAAAC,EAAAA,EAAAA,GAAKlB,GAAI,CAAEe,KACjBhB,GAAY,GAEd,GAEL,oBAGG,E,UCtDV,MApBwBvJ,IAAiC,IAA9B2K,aAAa,MAAEd,IAAS7J,EACjD,MAAMiH,GAAa2D,EAAAA,EAAAA,YAAWC,EAAAA,IAAgB,IACxC,EAACjF,EAAK,EAACsB,IAAW0D,EAAAA,EAAAA,YAAWE,EAAAA,IACnC,OACE/J,EAAAA,cAACgK,EAAAA,EAAS,KACRhK,EAAAA,cAACiK,EAAAA,EAAa,KACZjK,EAAAA,cAACkK,EAAAA,EAAQ,CAACC,WAAS,GACjBnK,EAAAA,cAACoK,EAAAA,EAAY,CAACtB,MAAOA,KAEvB9I,EAAAA,cAACkK,EAAAA,EAAQ,KACPlK,EAAAA,cAAC0E,EAAW,CAACG,KAAMA,EAAMsB,QAASA,EAASD,WAAYA,KAEzDlG,EAAAA,cAACkK,EAAAA,EAAQ,KACPlK,EAAAA,cAACkI,EAAqB,QAGhB,C","sources":["webpack://medlem/./src/scss/form.module.scss","webpack://medlem/./src/components/form/input.js","webpack://medlem/./src/components/form/form.js","webpack://medlem/./src/components/modal/useConfirmModal.js","webpack://medlem/./src/scss/preferences.module.scss","webpack://medlem/./src/components/preferences/preferences.js","webpack://medlem/./src/components/preferences/addCalendarSubscription.js","webpack://medlem/./src/components/preferences/calendarLink.js","webpack://medlem/./src/components/preferences/calendarSubscriptions.js","webpack://medlem/./src/components/preferences/page.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var Label = \"form-module--Label--ab587\";\nexport var inputWrapper = \"form-module--inputWrapper--1111e\";\nexport var required = \"form-module--required--7063a\";","import React, { useState, useEffect } from 'react'\r\nimport DateTimePicker from './dateTimePicker'\r\n\r\nimport { Label, Required, inputWrapper } from '../../scss/form.module.scss'\r\n\r\nconst AutoInput = ({\r\n  value,\r\n  onChange,\r\n  type,\r\n  label,\r\n  required,\r\n  min_value,\r\n  max_value,\r\n  min_length,\r\n  max_length,\r\n}) => {\r\n  const change = e => {\r\n    onChange(e.target.value)\r\n  }\r\n\r\n  const map = {\r\n    datetime: <DateTimePicker value={value} onChange={onChange} />,\r\n    date: <input type=\"date\" value={value} onChange={change} />,\r\n    boolean: (\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={value}\r\n        onChange={e => {\r\n          onChange(e.target.checked)\r\n        }}\r\n      />\r\n    ),\r\n    integer: (\r\n      <input\r\n        type=\"number\"\r\n        value={value}\r\n        onChange={change}\r\n        max={max_value}\r\n        min={min_value}\r\n      />\r\n    ),\r\n  }\r\n\r\n  const component = Object.prototype.hasOwnProperty.call(map, type) ? (\r\n    map[type]\r\n  ) : (\r\n    <input\r\n      value={value}\r\n      onChange={change}\r\n      maxLength={max_length}\r\n      minLength={min_length}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <label className={Label}>\r\n      {`${label}`}\r\n      {required && <span className={Required}>*</span>}\r\n      <div className={inputWrapper}>{component}</div>\r\n    </label>\r\n  )\r\n}\r\nexport default AutoInput\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport request, { options } from '../request'\r\nimport AutoInput from './input'\r\nimport { Button } from '../ui/buttons'\r\n\r\nconst AutoForm = ({ endpoint, method, customFetcher, onSubmit, defaults }) => {\r\n  const [fields, setFields] = useState()\r\n  const [values, setValues] = useState(defaults)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const setValue = (field, value) => {\r\n    setValues(old => ({ ...old, [field]: value }))\r\n  }\r\n\r\n  const setError = (field, error) => {\r\n    setErrors(old => ({ ...old, [field]: error }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // request endpoint info from server\r\n    options(endpoint)\r\n      .then(res => {\r\n        const raw = res.data.actions.POST\r\n\r\n        // object to array\r\n        const arrayified = Object.keys(raw).map(key => ({\r\n          key,\r\n          ...raw[key],\r\n        }))\r\n        const editable = arrayified.filter(f => !f.read_only)\r\n\r\n        setFields(editable)\r\n      })\r\n      .catch(err => {})\r\n  }, endpoint)\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault()\r\n        onSubmit()\r\n        if (customFetcher) {\r\n          customFetcher(values).catch(err => {\r\n            if (err.response) {\r\n              setErrors(err.response.data)\r\n            }\r\n          })\r\n        } else {\r\n          request({ endpoint, method, data: values })\r\n        }\r\n      }}\r\n    >\r\n      {fields &&\r\n        fields.map(field => (\r\n          <React.Fragment key={field.key}>\r\n            <AutoInput\r\n              {...field}\r\n              onChange={newValue => {\r\n                setValue(field.key, newValue)\r\n              }}\r\n              value={values[field.key]}\r\n            />\r\n            {Object.prototype.hasOwnProperty.call(errors, field.key) && (\r\n              <div>{errors[field.key].join(', ')}</div>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      <Button type=\"submit\" onClick={() => {}}>\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAutoForm.defaultProps = {\r\n  method: 'POST',\r\n  customFetcher: null,\r\n  onSubmit: () => {},\r\n  defaults: {},\r\n}\r\n\r\nAutoForm.propTypes = {\r\n  method: PropTypes.string,\r\n  endpoint: PropTypes.string.isRequired,\r\n  customFetcher: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  defaults: PropTypes.object,\r\n}\r\n\r\nexport default AutoForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport useModal, { useCloseModal } from './useModal'\r\nimport { Button } from '../ui/buttons'\r\n\r\nimport { confirmation } from '../../scss/modal.module.scss'\r\n\r\nconst Confirmation = ({ text, onAccept, onDecline }) => {\r\n  const close = useCloseModal()\r\n  return (\r\n    <div className={confirmation}>\r\n      <p>{text}</p>\r\n      <Button\r\n        onClick={() => {\r\n          onDecline()\r\n          close()\r\n        }}\r\n      >\r\n        Nej\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          onAccept()\r\n          close()\r\n        }}\r\n      >\r\n        Ja\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nConfirmation.propTypes = {\r\n  text: PropTypes.string,\r\n  onAccept: PropTypes.func,\r\n  onDecline: PropTypes.func,\r\n}\r\n\r\nConfirmation.defaultProps = {\r\n  text: 'Är du säker?',\r\n  onAccept: () => {},\r\n  onDecline: () => {},\r\n}\r\n\r\nexport default function useConfirmModal() {\r\n  const [openModal, isOpen] = useModal(Confirmation)\r\n\r\n  const open = (text, onAccept, onDecline) => {\r\n    openModal('', { text, onAccept, onDecline })\r\n  }\r\n\r\n  return [open, isOpen]\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var Error = \"preferences-module--Error--64b4f\";\nexport var Success = \"preferences-module--Success--2a5c9\";\nexport var calendarSubNotice = \"preferences-module--calendarSubNotice--f06ca\";\nexport var inputLabel = \"preferences-module--inputLabel--8938d\";","import React, { Component } from 'react'\r\n\r\nimport { put, patch } from '../request'\r\n\r\nimport { inputLabel, Error, Success } from '../../scss/preferences.module.scss'\r\nimport { Button } from '../ui/buttons'\r\n\r\nclass Preferences extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    if (!props.user.profile) props.user.profile = {}\r\n\r\n    this.state = {\r\n      infomailSubscriber: props.user.profile.infomail_subscriber,\r\n      liuCardId: props.user.profile.liu_card_id,\r\n      firstName: props.user.first_name,\r\n      lastName: props.user.last_name,\r\n      errors: {},\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleChange(field, event, checkbox = false) {\r\n    if (checkbox) this.setState({ [field]: event.target.checked })\r\n    else this.setState({ [field]: event.target.value })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const { setLoading, setUser } = this.props\r\n\r\n    // reset errors\r\n    this.setState({ error: undefined, success: undefined, errors: {} })\r\n\r\n    setLoading(true)\r\n    put('/account/profile/', {\r\n      first_name: this.state.firstName,\r\n      last_name: this.state.lastName,\r\n      liu_card_id: this.state.liuCardId,\r\n      infomail_subscriber: this.state.infomailSubscriber,\r\n    })\r\n      .then(res => {\r\n        setLoading(false)\r\n        if (res.status < 300) {\r\n          this.setState({ success: 'Ändringarna har sparats.' })\r\n\r\n          setUser(prev => ({\r\n            ...prev,\r\n            first_name: res.data.firstName,\r\n            last_name: res.data.lastName,\r\n            profile: {\r\n              ...prev.profile,\r\n              liu_card_id: res.data.liu_card_id,\r\n              infomail_subscriber: res.data.infomail_subscriber,\r\n            },\r\n          }))\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setLoading(false)\r\n        if (!err.response) this.setState({ error: 'Nätverksfel.' })\r\n        else if (err.response.status === 400) {\r\n          this.getFormErrorText(err.response)\r\n        }\r\n      })\r\n    event.preventDefault()\r\n  }\r\n\r\n  /**\r\n   * Get error text to pass to setState.\r\n   * @param response - The response from the request.\r\n   * @returns Object - containing the error text.\r\n   */\r\n  getFormErrorText(response) {\r\n    if (response.data?.liu_card_id) {\r\n      return {\r\n        errors: {\r\n          profile: { liu_card_id: 'Det angivna LiU IDt är för långt.' },\r\n        },\r\n      }\r\n    }\r\n\r\n    return { error: 'Något gick fel.' }\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      liuCardId,\r\n      infomailSubscriber,\r\n      errors,\r\n      error,\r\n      success,\r\n    } = this.state\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h2>Profil</h2>\r\n        <p>\r\n          <strong>\r\n            {user.membership\r\n              ? `Du är sektionsmedlem.`\r\n              : 'Du saknar sektionsmedlemsskap.'}\r\n          </strong>\r\n        </p>\r\n        <div>\r\n          <label className={inputLabel}>\r\n            Förnamn:\r\n            <input\r\n              value={firstName}\r\n              onChange={e => this.handleChange('firstName', e)}\r\n            />\r\n          </label>\r\n          {errors.first_name && (\r\n            <div className={Error}>{errors.first_name}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className={inputLabel}>\r\n            Efternamn:\r\n            <input\r\n              value={lastName}\r\n              onChange={e => this.handleChange('lastName', e)}\r\n            />\r\n          </label>\r\n          {errors.last_name && <div className={Error}>{errors.last_name}</div>}\r\n        </div>\r\n        <div>\r\n          <label className={inputLabel}>\r\n            LiU-kortnummer:\r\n            <input\r\n              value={liuCardId}\r\n              onChange={e => this.handleChange('liuCardId', e)}\r\n            />\r\n          </label>\r\n          {errors.profile && errors.profile.liu_card_id && (\r\n            <div className={Error}>{errors.profile.liu_card_id}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label className={inputLabel}>\r\n            Prenumerera på veckomailet:\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={infomailSubscriber}\r\n              onChange={e => this.handleChange('infomailSubscriber', e, true)}\r\n            />\r\n          </label>\r\n          {errors.profile && errors.profile.infomail_subscriber && (\r\n            <div className={Error}>{errors.profile.infomail_subscriber}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Button type=\"submit\">Spara</Button>\r\n        </div>\r\n        <div>\r\n          {error && <div className={Error}>{error}</div>}\r\n          {success && <div className={Success}>{success}</div>}\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Preferences\r\n","import React from 'react'\r\nimport AutoForm from '../form/form'\r\n\r\nconst AddCalendarSubscription = ({ create }) => (\r\n  <AutoForm\r\n    endpoint=\"/account/calendar-subscriptions/\"\r\n    customFetcher={create}\r\n    defaults={{\r\n      include_bookings: true,\r\n      include_events_attending: true,\r\n      include_events_not_attending: true,\r\n    }}\r\n  />\r\n)\r\n\r\nexport default AddCalendarSubscription\r\n","import React from 'react'\r\nimport { Button } from '../ui/buttons'\r\n\r\nimport { calendarSubNotice } from '../../scss/preferences.module.scss'\r\n\r\nconst CalendarLink = ({ url }) => (\r\n  <>\r\n    <p>\r\n      Denna webbadress kan importeras i ditt kalenderprogram. Länken kommer\r\n      automatiskt hållas uppdaterad med nya händelser.\r\n    </p>\r\n    <div className={calendarSubNotice}>\r\n      <input value={url} readOnly />\r\n      <Button\r\n        onClick={() => {\r\n          // TODO: Error handling???\r\n          navigator.clipboard.writeText(url)\r\n        }}\r\n      >\r\n        Kopiera\r\n      </Button>\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default CalendarLink\r\n","import React, { useState } from 'react'\r\nimport useSWR from 'swr'\r\nimport { FiLink, FiTrash2 } from 'react-icons/fi'\r\nimport { List, ListItem, ListButton } from '../ui/list'\r\nimport useConfirmModal from '../modal/useConfirmModal'\r\nimport { del, post } from '../request'\r\nimport AddCalendarSubscription from './addCalendarSubscription'\r\nimport useModal, { useCloseModal } from '../modal/useModal'\r\nimport { Button } from '../ui/buttons'\r\nimport CalendarLink from './calendarLink'\r\n\r\nconst getTitle = sub => {\r\n  const parts = []\r\n  if (sub.include_bookings) parts.push('bokningar')\r\n  if (sub.include_events_attending) parts.push('anmälda evenemang')\r\n  if (sub.include_events_not_attending) parts.push('oanmälda evenemang')\r\n\r\n  const combined = parts.join(', ')\r\n  return combined.charAt(0).toUpperCase() + combined.substring(1)\r\n}\r\n\r\nconst CalendarSubscriptions = () => {\r\n  const [openCreateModal] = useModal(AddCalendarSubscription)\r\n  const [openLinkModal] = useModal(CalendarLink)\r\n  const [openConfirmation] = useConfirmModal()\r\n  const closeModal = useCloseModal()\r\n  const { data: subs, mutate } = useSWR('/account/calendar-subscriptions/')\r\n\r\n  return (\r\n    <div>\r\n      <h2>Kalenderprenumerationer</h2>\r\n      <List>\r\n        {subs &&\r\n          subs.map(sub => (\r\n            <ListItem\r\n              title={getTitle(sub)}\r\n              key={sub.id}\r\n              buttons={[\r\n                <ListButton\r\n                  iconComponent={FiLink}\r\n                  text=\"Visa länk\"\r\n                  onClick={() => {\r\n                    openLinkModal('Prenumerationslänk', {\r\n                      url: sub.url,\r\n                    })\r\n                  }}\r\n                  key=\"view\"\r\n                />,\r\n                <ListButton\r\n                  iconComponent={FiTrash2}\r\n                  text=\"Ta bort prenumeration\"\r\n                  onClick={() => {\r\n                    openConfirmation(\r\n                      'Är du säker på att du vill ta bort prenumerationen?',\r\n                      async () => {\r\n                        await del(`/account/calendar-subscriptions/${sub.id}/`)\r\n                        mutate(subs.filter(s => s.id !== sub.id))\r\n                      }\r\n                    )\r\n                  }}\r\n                  key=\"delete\"\r\n                />,\r\n              ]}\r\n            />\r\n          ))}\r\n      </List>\r\n      <Button\r\n        onClick={() => {\r\n          openCreateModal('Ny prenumeration', {\r\n            create: async data => {\r\n              const { data: newSub } = await post(\r\n                '/account/calendar-subscriptions/',\r\n                data\r\n              )\r\n              mutate([...subs, newSub])\r\n              closeModal()\r\n            },\r\n          })\r\n        }}\r\n      >\r\n        Ny prenumeration\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarSubscriptions\r\n","import React, { useContext } from 'react'\r\nimport { UserContext, LoadingContext } from '../layout/layout'\r\nimport Preferences from './preferences'\r\nimport BigPixels from '../layout/bigPixels'\r\nimport { GridContainer, GridItem } from '../ui/grid'\r\nimport CalendarSubscriptions from './calendarSubscriptions'\r\nimport TitleChooser from '../ui/titleChooser'\r\n\r\nconst PreferencesPage = ({ pageContext: { title } }) => {\r\n  const setLoading = useContext(LoadingContext)[1]\r\n  const [user, setUser] = useContext(UserContext)\r\n  return (\r\n    <BigPixels>\r\n      <GridContainer>\r\n        <GridItem fullWidth>\r\n          <TitleChooser title={title} />\r\n        </GridItem>\r\n        <GridItem>\r\n          <Preferences user={user} setUser={setUser} setLoading={setLoading} />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CalendarSubscriptions />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </BigPixels>\r\n  )\r\n}\r\n\r\nexport default PreferencesPage\r\n"],"names":["Label","inputWrapper","_ref","value","onChange","type","label","required","min_value","max_value","min_length","max_length","change","e","target","map","datetime","React","DateTimePicker","date","boolean","checked","integer","max","min","component","Object","prototype","hasOwnProperty","call","maxLength","minLength","className","Required","AutoForm","endpoint","method","customFetcher","onSubmit","defaults","fields","setFields","useState","values","setValues","errors","setErrors","useEffect","options","then","res","raw","data","actions","POST","editable","keys","key","filter","f","read_only","catch","err","preventDefault","response","request","field","AutoInput","assign","newValue","setValue","old","join","Button","onClick","defaultProps","Confirmation","text","onAccept","onDecline","close","useCloseModal","confirmation","useConfirmModal","openModal","isOpen","useModal","open","Error","inputLabel","_Component","Preferences","props","_this","user","profile","state","infomailSubscriber","infomail_subscriber","liuCardId","liu_card_id","firstName","first_name","lastName","last_name","handleChange","bind","_assertThisInitialized","handleSubmit","_inheritsLoose","_proto","event","checkbox","this","setState","setLoading","setUser","error","undefined","success","put","status","prev","console","log","getFormErrorText","_response$data","render","membership","Component","create","include_bookings","include_events_attending","include_events_not_attending","url","readOnly","navigator","clipboard","writeText","getTitle","sub","parts","push","combined","charAt","toUpperCase","substring","CalendarSubscriptions","openCreateModal","AddCalendarSubscription","openLinkModal","CalendarLink","openConfirmation","closeModal","subs","mutate","useSWR","List","ListItem","title","id","buttons","ListButton","iconComponent","FiLink","FiTrash2","async","del","s","newSub","post","concat","_toConsumableArray","pageContext","useContext","LoadingContext","UserContext","BigPixels","GridContainer","GridItem","fullWidth","TitleChooser"],"sourceRoot":""}