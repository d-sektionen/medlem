{"version":3,"sources":["webpack:///./src/components/booking/bookingInstance.js","webpack:///./src/components/booking/index.js","webpack:///./src/pages/booking.js"],"names":["moment","locale","formatDate","date","toLocaleDateString","month","day","hour","minute","BookingInstance","_ref","user","fullName","booking","showItem","item","newBooking","undefined","_useState","useState","open","setOpen","_useState2","editing","setEditing","_useState3","description","setDescription","_useState4","start","Date","setStart","_useState5","end","setEnd","react_default","a","createElement","className","style","bookingHeader","onClick","Fragment","first_name","last_name","join","username","item_obj","name","fromNow","fi","flip","bookingBody","es","datePicker","selectsStart","selected","startDate","endDate","onChange","minDate","maxDate","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","selectsEnd","value","e","target","bookingButtons","del","id","then","res","console","log","data","catch","err","response","post","put","Booking","props","_this","_Component","call","this","state","onlyMine","render","_this2","_this$state","setLoading","root","components_request","endpoint","items","setState","filter","i","map","key","type","checked","bookings","bookingInstance","b","Object","assign","sort","Component","BookingPage","layout","Consumer","loading","components_booking","set"],"mappings":"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","file":"component---src-pages-booking-js-ea37b47af667a1b495cf.js","sourcesContent":["import React, { useState } from 'react'\nimport DatePicker from 'react-datepicker'\nimport { FiChevronDown } from 'react-icons/fi'\nimport moment from 'moment'\nimport 'moment/locale/sv'\n\nimport 'react-datepicker/dist/react-datepicker.css'\nimport style from '../../scss/booking.module.scss'\nimport { put, del, Get, post } from '../request/'\n\nmoment.locale('sv')\n\nconst getDisplayName = user => {\n  const fullName = [user.first_name, user.last_name].join(' ')\n  return fullName === ' ' ? user.username : fullName\n}\n\nconst formatDate = date =>\n  date.toLocaleDateString('sv-SE', {\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  })\n\nconst BookingInstance = ({ booking, showItem, item }) => {\n  const newBooking = booking == undefined\n\n  const [open, setOpen] = useState(false)\n  const [editing, setEditing] = useState(newBooking)\n  const [description, setDescription] = useState(\n    booking ? booking.description : ''\n  )\n  const [start, setStart] = useState(booking ? booking.start : new Date())\n  const [end, setEnd] = useState(booking ? booking.end : new Date())\n\n  const saveBooking = () => {\n    const request = newBooking\n      ? post('/booking/bookings/', {\n          item: item.id,\n          description,\n          start,\n          end,\n        })\n      : put(`/booking/bookings/${booking.id}/`, {\n          item: booking.item,\n          description,\n          start,\n          end,\n        })\n\n    request\n      .then(res => {\n        console.log(res.data)\n      })\n      .catch(err => {\n        console.log(err.response.data)\n      })\n  }\n  const deleteBooking = () => {\n    //if (confirm('Är du säker på att du vill ta bort den?'))\n    del(`/booking/bookings/${booking.id}/`)\n      .then(res => {\n        console.log(res.data)\n      })\n      .catch(err => {\n        console.log(err.response.data)\n      })\n  }\n\n  return (\n    <li>\n      <div className={style.bookingHeader} onClick={() => setOpen(!open)}>\n        {newBooking ? (\n          'Ny bokning'\n        ) : (\n          <>\n            <strong>{getDisplayName(booking.user)}</strong>\n            {showItem && `, ${booking.item_obj.name}`}\n            {`, ${moment(start).fromNow()}`}\n          </>\n        )}\n\n        <FiChevronDown className={open ? style.flip : undefined} />\n      </div>\n      {open && (\n        <>\n          <div className={style.bookingBody}>\n            {newBooking && editing && (\n              <p>\n                {item\n                  ? `Bokning av ${item.name}.`\n                  : 'Välj vad som ska bokas i menyn ovan.'}\n              </p>\n            )}\n            <div>\n              {editing ? (\n                <>\n                  <DatePicker\n                    className={style.datePicker}\n                    selectsStart\n                    selected={start}\n                    startDate={start}\n                    endDate={end}\n                    onChange={date => setStart(date)}\n                    minDate={new Date()}\n                    maxDate={end}\n                    showTimeSelect\n                    timeFormat=\"HH:mm\"\n                    timeIntervals={15}\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                    timeCaption=\"time\"\n                  />\n                  <DatePicker\n                    className={style.datePicker}\n                    selectsEnd\n                    selected={end}\n                    startDate={start}\n                    endDate={end}\n                    onChange={date => setEnd(date)}\n                    minDate={start}\n                    showTimeSelect\n                    timeFormat=\"HH:mm\"\n                    timeIntervals={15}\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                    timeCaption=\"time\"\n                  />\n                </>\n              ) : (\n                `${formatDate(start)} - ${formatDate(end)}`\n              )}\n            </div>\n            <p>\n              {editing ? (\n                <textarea\n                  value={description}\n                  onChange={e => setDescription(e.target.value)}\n                />\n              ) : (\n                description\n              )}\n            </p>\n          </div>\n          <div className={style.bookingButtons}>\n            {!editing && <button onClick={() => setEditing(true)}>Edit</button>}\n            {!editing && <button onClick={deleteBooking}>Delete</button>}\n            {editing && (\n              <button\n                onClick={() =>\n                  newBooking ? setOpen(false) : setEditing(false)\n                }\n              >\n                Cancel\n              </button>\n            )}\n            {editing && <button onClick={saveBooking}>Save</button>}\n          </div>\n        </>\n      )}\n    </li>\n  )\n}\n\nexport default BookingInstance\n","import React, { Component } from 'react'\nimport { Get } from '../request/'\n\nimport style from '../../scss/booking.module.scss'\nimport BookingInstance from './bookingInstance'\n\nclass Booking extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      item: '',\n      onlyMine: false,\n    }\n  }\n  render() {\n    const { setLoading } = this.props\n    const { item, onlyMine } = this.state\n\n    return (\n      <div className={style.root}>\n        <Get endpoint=\"/booking/items/\">\n          {items => (\n            <>\n              <select\n                className={style.items}\n                onChange={e => {\n                  this.setState({\n                    item: items.filter(i => i.id == e.target.value)[0],\n                  })\n                }}\n                value={item ? item.id : ''}\n              >\n                <option value=\"\">Alla</option>\n                {items.map(i => (\n                  <option key={i.id} value={i.id}>\n                    {i.name}\n                  </option>\n                ))}\n              </select>\n            </>\n          )}\n        </Get>\n        <p>\n          <label>\n            <input\n              type=\"checkbox\"\n              onClick={e => {\n                this.setState({ onlyMine: e.target.checked })\n              }}\n              value={onlyMine}\n            />{' '}\n            Visa endast mina bokningar.\n          </label>\n        </p>\n        <Get\n          endpoint={`/booking/bookings/?item=${item ? item.id : ''}&future${\n            onlyMine ? '&user=me' : ''\n          }`}\n        >\n          {bookings => (\n            <ul className={style.bookings}>\n              <BookingInstance item={item} />\n              {bookings\n                .map(b => ({\n                  ...b,\n                  start: new Date(b.start),\n                  end: new Date(b.end),\n                }))\n                .sort((a, b) => a.start - b.start)\n                .map(booking => (\n                  <BookingInstance\n                    booking={booking}\n                    showItem={item === undefined}\n                    key={booking.id}\n                  />\n                ))}\n            </ul>\n          )}\n        </Get>\n      </div>\n    )\n  }\n}\n\nexport default Booking\n","import React from 'react'\nimport { LoadingContext } from '../components/layout'\nimport Booking from '../components/booking/'\n\nconst BookingPage = () => (\n  <LoadingContext.Consumer>\n    {loading => <Booking setLoading={loading.set} />}\n  </LoadingContext.Consumer>\n)\n\nexport default BookingPage\n"],"sourceRoot":""}