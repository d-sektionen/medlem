{"version":3,"sources":["webpack:///./src/components/vote/voteForm.js","webpack:///./src/components/vote/activeVote.js","webpack:///./src/components/vote/index.js","webpack:///./src/components/vote/page.js"],"names":["VoteForm","props","state","checkedId","onMessage","onAlternativeChecked","bind","placeVote","showMessage","alternativeId","this","setState","setLoading","vote","voteData","vote_id","id","alternative_id","post","then","error","render","votingDisabled","buttonText","question","alternatives","map","text","key","type","checked","onChange","disabled","onClick","Component","ActiveVote","useEndpoint","endpoint","votes","length","shownVote","has_voted","Vote","useContext","LoadingContext","useState","message","setMessage","displayReloadCloseText","setDisplayReloadCloseText","title","content","drct","VotePage"],"mappings":"qTAkFeA,E,oBA9Eb,WAAYC,GAAQ,IAAD,GACjB,cAAMA,IAAN,MAEKC,MAAQ,CACXC,WAAY,GAJG,IAOTC,EAAc,EAAKH,MAAnBG,UAPS,OASjB,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,MAC5B,EAAKC,UAAY,EAAKA,UAAUD,KAAf,MACjB,EAAKE,YAAcJ,EAXF,E,kHAcnBC,qBAAA,SAAqBI,GACnBC,KAAKC,SAAS,CACZR,UAAWM,K,EAIfF,UAAA,WAAa,IAAD,EACmBG,KAAKT,MAA1BW,EADE,EACFA,WAAYC,EADV,EACUA,KACZV,EAAcO,KAAKR,MAAnBC,UAEAK,EAAgBE,KAAhBF,YACFM,EAAW,CACfC,QAASF,EAAKG,GACdC,eAAgBd,GAGlBS,GAAW,GACXM,YAAK,sBAAuBJ,GACzBK,MAAK,WACJP,GAAW,GACXJ,EAAY,QAAS,gCAHzB,OAKS,SAAAY,GACLR,GAAW,GACXJ,EAAY,kBAAmBY,O,EAIrCC,OAAA,WAAU,IAAD,OACCR,EAASH,KAAKT,MAAdY,KACAV,EAAcO,KAAKR,MAAnBC,UAEFmB,GAAgC,IAAfnB,EACjBoB,EAAaD,EAAiB,sBAAwB,QAE5D,OACE,6BACE,gCAAST,EAAKW,UACd,4BACGX,EAAKY,aAAaC,KAAI,gBAAGC,EAAH,EAAGA,KAAMX,EAAT,EAASA,GAAT,OACrB,wBAAIY,IAAKZ,GACP,+BACE,2BACEa,KAAK,QACLC,QAAS3B,IAAca,EACvBe,SAAU,kBAAM,EAAK1B,qBAAqBW,MAJ9C,IAMOW,QAKb,4BACEE,KAAK,SACLG,SAAUV,EACVW,QAASvB,KAAKH,WAEbgB,K,GAxEYW,aC2BRC,EA1BI,SAAC,GAAiC,IAA/B3B,EAA8B,EAA9BA,YAAaI,EAAiB,EAAjBA,WAAiB,EAC3BwB,YAAY,CACjCC,SAAU,gCADLC,EAD2C,KASlD,GATkD,MAMhD9B,EAAY,iBAAkB,sCAAsC,IAGjE8B,EAAO,OAAO,qCAEnB,GAAqB,IAAjBA,EAAMC,OAAc,OAAO,iEAE/B,IAAMC,EAAYF,EAAM,GAExB,OAAOE,EAAUC,UACf,gFAEA,kBAAC,EAAD,CACE5B,KAAM2B,EACNpC,UAAWI,EACXI,WAAYA,KCeH8B,EAjCF,WACX,IAAM9B,EAAa+B,qBAAWC,KAAgB,GAD7B,EAEaC,mBAAS,MAAhCC,EAFU,KAEDC,EAFC,OAG2CF,oBAAS,GAA9DG,EAHU,KAGcC,EAHd,KAajB,GAAgB,OAAZH,EAAkB,CAAC,IACbI,EAAmBJ,EAAnBI,MAAOC,EAAYL,EAAZK,QACf,OACE,oCACE,4BAAKD,GACL,2BAAIC,GACJ,4BAAQtB,KAAK,SAASI,QAAS,kBAAMc,EAAW,QAC7CC,EAAyB,iBAAmB,UAKrD,OACE,oCACE,sCACA,kBAAC,EAAD,CAAYxC,YAvBI,SAAC0C,EAAOC,EAASC,GACnCH,EAA0BG,GAC1BL,EAAW,CACTG,QACAC,aAmBsCvC,WAAYA,M,wBClBzCyC,UAXE,WACf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD","file":"component---src-components-vote-page-js-7a8d52d2026b29e4b91d.js","sourcesContent":["import React, { Component } from 'react'\nimport { post } from '../request'\n\nclass VoteForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      checkedId: -1,\n    }\n\n    const { onMessage } = this.props\n\n    this.onAlternativeChecked = this.onAlternativeChecked.bind(this)\n    this.placeVote = this.placeVote.bind(this)\n    this.showMessage = onMessage\n  }\n\n  onAlternativeChecked(alternativeId) {\n    this.setState({\n      checkedId: alternativeId,\n    })\n  }\n\n  placeVote() {\n    const { setLoading, vote } = this.props\n    const { checkedId } = this.state\n\n    const { showMessage } = this\n    const voteData = {\n      vote_id: vote.id,\n      alternative_id: checkedId,\n    }\n\n    setLoading(true)\n    post('/voting/made_votes/', voteData)\n      .then(() => {\n        setLoading(false)\n        showMessage('Tack!', 'Din röst har registrerats')\n      })\n      .catch(error => {\n        setLoading(false)\n        showMessage('Ett fel uppstod', error)\n      })\n  }\n\n  render() {\n    const { vote } = this.props\n    const { checkedId } = this.state\n\n    const votingDisabled = checkedId === -1\n    const buttonText = votingDisabled ? 'Välj ett alternativ' : 'Rösta'\n\n    return (\n      <div>\n        <strong>{vote.question}</strong>\n        <ul>\n          {vote.alternatives.map(({ text, id }) => (\n            <li key={id}>\n              <label>\n                <input\n                  type=\"radio\"\n                  checked={checkedId === id}\n                  onChange={() => this.onAlternativeChecked(id)}\n                />\n                {` ${text}`}\n              </label>\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          disabled={votingDisabled}\n          onClick={this.placeVote}\n        >\n          {buttonText}\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default VoteForm\n","import React from 'react'\nimport VoteForm from './voteForm'\nimport { useEndpoint } from '../request'\n\nconst ActiveVote = ({ showMessage, setLoading }) => {\n  const [votes, error] = useEndpoint({\n    endpoint: '/voting/votes/?current=true',\n  })\n\n  if (error) {\n    showMessage('Något gick fel', 'Logga ut eller refresha eller nåt.', true)\n  }\n\n  if (!votes) return <></>\n\n  if (votes.length === 0) return <div>Det finns ingen aktiv omröstning</div>\n\n  const shownVote = votes[0]\n\n  return shownVote.has_voted ? (\n    <p>Du har redan röstat i den nuvarande omröstningen.</p>\n  ) : (\n    <VoteForm\n      vote={shownVote}\n      onMessage={showMessage}\n      setLoading={setLoading}\n    />\n  )\n}\n\nexport default ActiveVote\n","import React, { useContext, useState } from 'react'\nimport ActiveVote from './activeVote'\nimport { Get, useEndpoint } from '../request'\nimport { LoadingContext } from '../layout/layout'\n\n// import style from '../../scss/vote.module.scss'\n\nconst Vote = () => {\n  const setLoading = useContext(LoadingContext)[1]\n  const [message, setMessage] = useState(null)\n  const [displayReloadCloseText, setDisplayReloadCloseText] = useState(false)\n\n  const showMessage = (title, content, drct) => {\n    setDisplayReloadCloseText(drct)\n    setMessage({\n      title,\n      content,\n    })\n  }\n\n  if (message !== null) {\n    const { title, content } = message\n    return (\n      <>\n        <h2>{title}</h2>\n        <p>{content}</p>\n        <button type=\"button\" onClick={() => setMessage(null)}>\n          {displayReloadCloseText ? 'Ladda om sidan' : 'Stäng'}\n        </button>\n      </>\n    )\n  }\n  return (\n    <>\n      <h1>D-cide</h1>\n      <ActiveVote showMessage={showMessage} setLoading={setLoading} />\n    </>\n  )\n}\n\nexport default Vote\n","import React, { useContext } from 'react'\nimport { LoadingContext } from '../layout/layout'\nimport Vote from '.'\nimport BigPixels from '../layout/bigPixels'\nimport { GridContainer, GridItem } from '../ui/grid'\n\nconst VotePage = () => {\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem>\n          <Vote />\n        </GridItem>\n      </GridContainer>\n    </BigPixels>\n  )\n}\nexport default VotePage\n"],"sourceRoot":""}