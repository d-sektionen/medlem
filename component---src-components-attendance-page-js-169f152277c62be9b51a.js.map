{"version":3,"file":"component---src-components-attendance-page-js-169f152277c62be9b51a.js","mappings":"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","sources":["webpack://medlem/./src/components/attendance/attendantPanel.js","webpack://medlem/./src/components/attendance/addOccurrence.js","webpack://medlem/./src/components/attendance/page.js","webpack://medlem/./src/components/checkin/doorkeeperPanel.js","webpack://medlem/./src/scss/form.module.scss","webpack://medlem/./src/components/form/input.js","webpack://medlem/./src/components/form/form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst AttendantPanel = ({ currentOccurrence }) => {\r\n  if (!currentOccurrence) return <></>\r\n\r\n  const {\r\n    attendants,\r\n    attendant_limit: attendantLimit,\r\n    members_only: membersOnly,\r\n  } = currentOccurrence\r\n\r\n  return (\r\n    <div>\r\n      <h2>Deltagare</h2>\r\n      <p>Antal deltagare: {attendants.length}</p>\r\n      {attendantLimit !== 0 && <p>Deltagargräns: {attendantLimit}</p>}\r\n      <p>{membersOnly ? 'Endast för medlemmar' : 'Öppet för alla användare'}</p>\r\n      <ul>\r\n        {attendants.map(attendant => (\r\n          <li key={attendant.id}>{attendant.username}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttendantPanel\r\n","import React from 'react'\r\nimport AutoForm from '../form/form'\r\n\r\nconst AddOccurrence = ({ create }) => (\r\n  <AutoForm endpoint=\"/attendance/occurrences/\" customFetcher={create} />\r\n)\r\n\r\nexport default AddOccurrence\r\n","import React, { useState, useEffect } from 'react'\r\nimport useSWR from 'swr'\r\n\r\nimport AttendantPanel from './attendantPanel'\r\nimport DoorkeeperPanel from '../checkin/doorkeeperPanel'\r\nimport { GridContainer, GridItem } from '../ui/grid'\r\nimport BigPixels from '../layout/bigPixels'\r\nimport TitleChooser from '../ui/titleChooser'\r\nimport AddOccurrence from './addOccurrence'\r\nimport useModal, { useCloseModal } from '../modal/useModal'\r\nimport { post } from '../request'\r\n\r\nconst AttendancePage = ({ pageContext: { title } }) => {\r\n  const [currentOccurrence, setCurrentOccurrence] = useState(null)\r\n  const { data: unorderedOccurrences, mutate } = useSWR(\r\n    '/attendance/occurrences/'\r\n  )\r\n  const [openCreateModal] = useModal(AddOccurrence)\r\n  const closeModal = useCloseModal()\r\n\r\n  const create = async data => {\r\n    const { data: newOccurrence } = await post('/attendance/occurrences/', data)\r\n    mutate([...unorderedOccurrences, newOccurrence])\r\n  }\r\n\r\n  const occurrences = unorderedOccurrences\r\n    ? [...unorderedOccurrences].reverse()\r\n    : null\r\n\r\n  // sync currentOccurrence with updated occurrences\r\n  useEffect(\r\n    () => {\r\n      if (currentOccurrence)\r\n        setCurrentOccurrence(\r\n          unorderedOccurrences.find(m => m.id === currentOccurrence.id)\r\n        )\r\n    },\r\n    [unorderedOccurrences]\r\n  )\r\n\r\n  return (\r\n    <BigPixels>\r\n      <GridContainer>\r\n        <GridItem fullWidth>\r\n          <TitleChooser\r\n            title={title}\r\n            choice={currentOccurrence}\r\n            setChoice={setCurrentOccurrence}\r\n            choices={occurrences}\r\n            label=\"name\"\r\n            action={() => {\r\n              openCreateModal('Ny händelse', {\r\n                create: async data => {\r\n                  await create(data)\r\n                  closeModal()\r\n                },\r\n              })\r\n            }}\r\n            actionLabel=\"Ny händelse\"\r\n            noChoicesLabel=\"Det finns inga händelser just nu.\"\r\n          />\r\n        </GridItem>\r\n        {currentOccurrence && (\r\n          <>\r\n            <GridItem>\r\n              <AttendantPanel currentOccurrence={currentOccurrence} />\r\n            </GridItem>\r\n            <GridItem>\r\n              <DoorkeeperPanel event={currentOccurrence} />\r\n            </GridItem>\r\n          </>\r\n        )}\r\n      </GridContainer>\r\n    </BigPixels>\r\n  )\r\n}\r\n\r\nexport default AttendancePage\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { FiTrash2 } from 'react-icons/fi'\r\nimport { List, ListItem, ListButton } from '../ui/list'\r\nimport useSWR from 'swr'\r\nimport { post, del } from '../request'\r\n\r\nconst DoorkeeperPanel = ({ event }) => {\r\n  const [input, setInput] = useState('')\r\n\r\n  const { data: doorkeepers, mutate } = useSWR(\r\n    `/checkin/doorkeepers/?event_id=${event.id}`\r\n  )\r\n\r\n  const create = async data => {\r\n    const { data: newDoorkeeper } = await post('/checkin/doorkeepers/', data)\r\n    mutate([...doorkeepers, newDoorkeeper])\r\n    return newDoorkeeper\r\n  }\r\n\r\n  const destroy = async id => {\r\n    await del(`/checkin/doorkeepers/${id}/`)\r\n    mutate(doorkeepers.filter(d => d.id !== id))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dörrvakter</h2>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          setInput('')\r\n\r\n          create({\r\n            user_username: input,\r\n            event_id: event.id,\r\n          })\r\n        }}\r\n      >\r\n        <input\r\n          value={input}\r\n          placeholder=\"LiU-ID\"\r\n          onChange={e => setInput(e.target.value)}\r\n        />\r\n      </form>\r\n      <List>\r\n        {doorkeepers &&\r\n          doorkeepers.map(doorkeeper => (\r\n            <ListItem\r\n              title={doorkeeper.user.pretty_name}\r\n              key={doorkeeper.id}\r\n              buttons={[\r\n                <ListButton\r\n                  onClick={() => destroy(doorkeeper.id)}\r\n                  iconComponent={FiTrash2}\r\n                  text=\"Ta bort dörrvakt\"\r\n                  key=\"remove\"\r\n                />,\r\n              ]}\r\n            />\r\n          ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DoorkeeperPanel\r\n","// extracted by mini-css-extract-plugin\nexport var Label = \"form-module--Label--ab587\";\nexport var inputWrapper = \"form-module--inputWrapper--1111e\";\nexport var required = \"form-module--required--7063a\";","import React, { useState, useEffect } from 'react'\r\nimport DateTimePicker from './dateTimePicker'\r\n\r\nimport { Label, Required, inputWrapper } from '../../scss/form.module.scss'\r\n\r\nconst AutoInput = ({\r\n  value,\r\n  onChange,\r\n  type,\r\n  label,\r\n  required,\r\n  min_value,\r\n  max_value,\r\n  min_length,\r\n  max_length,\r\n}) => {\r\n  const change = e => {\r\n    onChange(e.target.value)\r\n  }\r\n\r\n  const map = {\r\n    datetime: <DateTimePicker value={value} onChange={onChange} />,\r\n    date: <input type=\"date\" value={value} onChange={change} />,\r\n    boolean: (\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={value}\r\n        onChange={e => {\r\n          onChange(e.target.checked)\r\n        }}\r\n      />\r\n    ),\r\n    integer: (\r\n      <input\r\n        type=\"number\"\r\n        value={value}\r\n        onChange={change}\r\n        max={max_value}\r\n        min={min_value}\r\n      />\r\n    ),\r\n  }\r\n\r\n  const component = Object.prototype.hasOwnProperty.call(map, type) ? (\r\n    map[type]\r\n  ) : (\r\n    <input\r\n      value={value}\r\n      onChange={change}\r\n      maxLength={max_length}\r\n      minLength={min_length}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <label className={Label}>\r\n      {`${label}`}\r\n      {required && <span className={Required}>*</span>}\r\n      <div className={inputWrapper}>{component}</div>\r\n    </label>\r\n  )\r\n}\r\nexport default AutoInput\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport request, { options } from '../request'\r\nimport AutoInput from './input'\r\nimport { Button } from '../ui/buttons'\r\n\r\nconst AutoForm = ({ endpoint, method, customFetcher, onSubmit, defaults }) => {\r\n  const [fields, setFields] = useState()\r\n  const [values, setValues] = useState(defaults)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const setValue = (field, value) => {\r\n    setValues(old => ({ ...old, [field]: value }))\r\n  }\r\n\r\n  const setError = (field, error) => {\r\n    setErrors(old => ({ ...old, [field]: error }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // request endpoint info from server\r\n    options(endpoint)\r\n      .then(res => {\r\n        const raw = res.data.actions.POST\r\n\r\n        // object to array\r\n        const arrayified = Object.keys(raw).map(key => ({\r\n          key,\r\n          ...raw[key],\r\n        }))\r\n        const editable = arrayified.filter(f => !f.read_only)\r\n\r\n        setFields(editable)\r\n      })\r\n      .catch(err => {})\r\n  }, endpoint)\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault()\r\n        onSubmit()\r\n        if (customFetcher) {\r\n          customFetcher(values).catch(err => {\r\n            if (err.response) {\r\n              setErrors(err.response.data)\r\n            }\r\n          })\r\n        } else {\r\n          request({ endpoint, method, data: values })\r\n        }\r\n      }}\r\n    >\r\n      {fields &&\r\n        fields.map(field => (\r\n          <React.Fragment key={field.key}>\r\n            <AutoInput\r\n              {...field}\r\n              onChange={newValue => {\r\n                setValue(field.key, newValue)\r\n              }}\r\n              value={values[field.key]}\r\n            />\r\n            {Object.prototype.hasOwnProperty.call(errors, field.key) && (\r\n              <div>{errors[field.key].join(', ')}</div>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      <Button type=\"submit\" onClick={() => {}}>\r\n        Submit\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAutoForm.defaultProps = {\r\n  method: 'POST',\r\n  customFetcher: null,\r\n  onSubmit: () => {},\r\n  defaults: {},\r\n}\r\n\r\nAutoForm.propTypes = {\r\n  method: PropTypes.string,\r\n  endpoint: PropTypes.string.isRequired,\r\n  customFetcher: PropTypes.func,\r\n  onSubmit: PropTypes.func,\r\n  defaults: PropTypes.object,\r\n}\r\n\r\nexport default AutoForm\r\n"],"names":["_ref","currentOccurrence","React","attendants","attendant_limit","attendantLimit","members_only","membersOnly","length","map","attendant","key","id","username","create","AutoForm","endpoint","customFetcher","pageContext","title","setCurrentOccurrence","useState","data","unorderedOccurrences","mutate","useSWR","openCreateModal","useModal","AddOccurrence","closeModal","useCloseModal","occurrences","_toConsumableArray","reverse","useEffect","find","m","BigPixels","GridContainer","GridItem","fullWidth","TitleChooser","choice","setChoice","choices","label","action","async","newOccurrence","post","concat","actionLabel","noChoicesLabel","AttendantPanel","DoorkeeperPanel","event","input","setInput","doorkeepers","onSubmit","e","preventDefault","newDoorkeeper","user_username","event_id","value","placeholder","onChange","target","List","doorkeeper","ListItem","user","pretty_name","buttons","ListButton","onClick","del","filter","d","destroy","iconComponent","FiTrash2","text","Label","inputWrapper","type","required","min_value","max_value","min_length","max_length","change","datetime","DateTimePicker","date","boolean","checked","integer","max","min","component","Object","prototype","hasOwnProperty","call","maxLength","minLength","className","Required","method","defaults","fields","setFields","values","setValues","errors","setErrors","options","then","res","raw","actions","POST","editable","keys","f","read_only","catch","err","response","request","field","AutoInput","assign","newValue","setValue","old","join","Button","defaultProps"],"sourceRoot":""}