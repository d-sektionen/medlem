{"version":3,"sources":["webpack:///./src/components/ui/titleChooser.js","webpack:///./src/components/ui/list.js","webpack:///./src/components/vote/speakerPanel.js","webpack:///./src/components/vote/meetingInfoPanel.js","webpack:///./src/components/vote/voteForm.js","webpack:///./src/components/vote/votePanel.js","webpack:///./src/components/vote/page.js"],"names":["TitleChooser","title","choices","choice","setChoice","label","action","actionLabel","className","style","titleChooser","actions","selectContainer","onChange","e","selectedValue","target","value","c","filter","i","id","map","key","hint","onClick","List","children","list","ListItem","subtitle","buttons","listText","listButtons","ListButton","href","iconComponent","Icon","text","shown","listButton","type","defaultProps","SpeakerPanel","meeting","data","speakers","mutate","useSWR","user","useContext","UserContext","errorMessage","attending","enable_speaker_requests","async","newSpeaker","post","meeting_id","prioritized","s","pretty_name","prioQS","del","x","FiTrash2","MeetingInfoPanel","currentMeeting","revalidate","name","description","whiteSpace","open_attendance","VoteForm","vote","checkedId","setCheckedId","useState","successfullyVoted","setSuccessfullyVoted","votingDisabled","buttonText","alreadyVotedText","question","has_voted","alternatives","checked","disabled","voteData","vote_id","alternative_id","VotePanel","votes","error","useEffect","length","VotePage","pageContext","setCurrentMeeting","meetings","find","m","fullWidth"],"mappings":"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","file":"component---src-components-vote-page-js-74b3c8d2a560280a6de2.js","sourcesContent":["import React from 'react'\n\nimport style from '../../scss/ui.module.scss'\nimport { Button } from './buttons'\n\nconst TitleChooser = ({\n  title,\n  choices,\n  choice,\n  setChoice,\n  label,\n  action,\n  actionLabel,\n}) => {\n  return (\n    <div className={style.titleChooser}>\n      <h1>{title}</h1>\n      <div className={style.actions}>\n        {choices && (\n          <div className={style.selectContainer}>\n            <select\n              onChange={e => {\n                const selectedValue = e.target.value\n                const c =\n                  selectedValue === ''\n                    ? null\n                    : choices.filter(i => `${i.id}` === selectedValue)[0]\n                setChoice(c)\n              }}\n              value={choice ? choice.id : ''}\n            >\n              <option value=\"\" />\n              {choices.map(c => (\n                <option value={c.id} key={c.id}>\n                  {c[label]}\n                </option>\n              ))}\n            </select>\n            {choice === null && (\n              <div className={style.hint}>Välj ett objekt</div>\n            )}\n          </div>\n        )}\n        {action && <Button onClick={action}>{actionLabel}</Button>}\n      </div>\n    </div>\n  )\n}\n\nexport default TitleChooser\n","import React from 'react'\n\nimport style from '../../scss/ui.module.scss'\n\nconst List = ({ children }) => <ul className={style.list}>{children}</ul>\n\nconst ListItem = ({ title, subtitle, buttons }) => (\n  <li>\n    <div className={style.listText}>\n      <h3>{title}</h3>\n      <p>{subtitle}</p>\n    </div>\n    <div className={style.listButtons}>{buttons}</div>\n  </li>\n)\n\nconst ListButton = ({ href, onClick, iconComponent: Icon, text, shown }) =>\n  shown ? (\n    <>\n      {href ? (\n        <a\n          className={style.listButton}\n          href={href}\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </a>\n      ) : (\n        <button\n          className={style.listButton}\n          type=\"button\"\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </button>\n      )}\n    </>\n  ) : (\n    <></>\n  )\n\nListButton.defaultProps = {\n  shown: true,\n}\n\nexport { List, ListItem, ListButton }\n","import React, { useState, useEffect, useContext } from 'react'\nimport useSWR from 'swr'\n\nimport { FiTrash2 } from 'react-icons/fi'\nimport { List, ListButton, ListItem } from '../ui/list'\nimport { Button, ButtonGroup } from '../ui/buttons'\nimport { UserContext } from '../layout/layout'\nimport { post, del } from '../request'\n\nconst SpeakerPanel = ({ meeting }) => {\n  const { data: speakers, mutate } = useSWR(\n    () => meeting && `/voting/speakers/?meeting_id=${meeting.id}`\n  )\n\n  const [user] = useContext(UserContext)\n\n  const errorMessage = meeting.attending\n    ? 'Talarlista är inaktiverad för mötet.'\n    : 'Du måste vara registrerad på mötet för att kunna skriva upp dig på talarlistan.'\n\n  return (\n    <div>\n      <h2>Talarlista</h2>\n      {meeting.attending && meeting.enable_speaker_requests ? (\n        <ButtonGroup>\n          <Button\n            onClick={async () => {\n              const { data: newSpeaker } = await post('/voting/speakers/', {\n                meeting_id: meeting.id,\n              })\n              mutate([...speakers, newSpeaker])\n            }}\n          >\n            Jag vill tala!\n          </Button>\n          <Button\n            onClick={async () => {\n              const { data: newSpeaker } = await post('/voting/speakers/', {\n                meeting_id: meeting.id,\n                prioritized: true,\n              })\n              mutate([...speakers, newSpeaker])\n            }}\n          >\n            Replik!\n          </Button>\n        </ButtonGroup>\n      ) : (\n        <p>{errorMessage}</p>\n      )}\n      <List>\n        {speakers &&\n          speakers.map(s => (\n            <ListItem\n              title={s.user.pretty_name}\n              subtitle={s.prioritized ? 'Replik' : null}\n              key={s.id}\n              buttons={[\n                <ListButton\n                  shown={user.id === s.user.id}\n                  onClick={async () => {\n                    const prioQS = s.prioritized ? '&prioritized' : ''\n                    await del(\n                      `/voting/speakers/?meeting_id=${meeting.id}${prioQS}`\n                    )\n                    mutate(speakers.filter(x => x.id !== s.id))\n                  }}\n                  iconComponent={FiTrash2}\n                  text=\"Lämna talarlista\"\n                  key=\"remove\"\n                />,\n              ]}\n            />\n          ))}\n      </List>\n    </div>\n  )\n}\n\nexport default SpeakerPanel\n","import React from 'react'\nimport { Button } from '../ui/buttons'\nimport { post, del } from '../request'\n\nconst MeetingInfoPanel = ({ currentMeeting, revalidate }) => (\n  <div>\n    <h2>Mötesinfo</h2>\n    <h3>{currentMeeting.name}</h3>\n    <p>\n      <strong>\n        {currentMeeting.attending\n          ? 'Du deltar på mötet.'\n          : 'Du är inte registrerad på mötet.'}\n      </strong>\n    </p>\n    {currentMeeting.description && (\n      <p style={{ whiteSpace: 'pre-line' }}>{currentMeeting.description}</p>\n    )}\n    {currentMeeting.open_attendance && (\n      <p>\n        {currentMeeting.attending ? (\n          <Button\n            onClick={async () => {\n              await del(`/voting/attend/?meeting_id=${currentMeeting.id}`)\n              revalidate()\n            }}\n          >\n            Lämna röstlängden\n          </Button>\n        ) : (\n          <Button\n            onClick={async () => {\n              await post('/voting/attend/', { meeting_id: currentMeeting.id })\n              revalidate()\n            }}\n          >\n            Gå med i röstlängden\n          </Button>\n        )}\n      </p>\n    )}\n  </div>\n)\n\nexport default MeetingInfoPanel\n","import React, { Component, useState } from 'react'\nimport { post } from '../request'\n\nconst VoteForm = ({ vote }) => {\n  const [checkedId, setCheckedId] = useState(-1)\n  const [successfullyVoted, setSuccessfullyVoted] = useState(false)\n\n  const placeVote = async () => {\n    const voteData = {\n      vote_id: vote.id,\n      alternative_id: checkedId,\n    }\n\n    await post('/voting/made_votes/', voteData)\n    setSuccessfullyVoted(true)\n  }\n  const votingDisabled = checkedId === -1\n  const buttonText = votingDisabled ? 'Välj ett alternativ' : 'Rösta'\n  const alreadyVotedText = successfullyVoted\n    ? 'Tack för din röst!'\n    : 'Du har röstat i omröstningen.'\n\n  return (\n    <div>\n      <strong>{vote.question}</strong>\n      {vote.has_voted || successfullyVoted ? (\n        <p>{alreadyVotedText}</p>\n      ) : (\n        <>\n          <ul>\n            {vote.alternatives.map(({ text, id }) => (\n              <li key={id}>\n                <label>\n                  <input\n                    type=\"radio\"\n                    checked={checkedId === id}\n                    onChange={() => setCheckedId(id)}\n                  />\n                  {` ${text}`}\n                </label>\n              </li>\n            ))}\n          </ul>\n          <button type=\"button\" disabled={votingDisabled} onClick={placeVote}>\n            {buttonText}\n          </button>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default VoteForm\n","import React, { useContext, useState, useEffect } from 'react'\nimport useSWR from 'swr'\nimport VoteForm from './voteForm'\n\n// import style from '../../scss/vote.module.scss'\n\nconst VotePanel = ({ meeting }) => {\n  const { data: votes, error, revalidate } = useSWR(\n    () => `/voting/votes/?meeting_id=${meeting.id}`\n  )\n\n  useEffect(\n    () => {\n      revalidate()\n    },\n    [meeting]\n  )\n  return (\n    <div>\n      <h2>Rösta</h2>\n      {votes && (\n        <>\n          {votes.length === 0 && <p>Det finns ingen aktiv omröstning</p>}\n          {votes.map(vote => (\n            <VoteForm key={vote.id} vote={vote} />\n          ))}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default VotePanel\n","import React, { useContext, useState, useEffect } from 'react'\nimport useSWR from 'swr'\n\nimport BigPixels from '../layout/bigPixels'\nimport { GridContainer, GridItem } from '../ui/grid'\nimport TitleChooser from '../ui/titleChooser'\nimport SpeakerPanel from './speakerPanel'\nimport MeetingInfoPanel from './meetingInfoPanel'\nimport VotePanel from './votePanel'\n\nconst VotePage = ({ pageContext: { title } }) => {\n  const [currentMeeting, setCurrentMeeting] = useState(null)\n  const { data: meetings, revalidate } = useSWR('/voting/meetings/')\n\n  // sync currentMeeting with updated meetings\n  useEffect(\n    () => {\n      if (currentMeeting)\n        setCurrentMeeting(meetings.find(m => m.id === currentMeeting.id))\n    },\n    [meetings]\n  )\n\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem fullWidth>\n          <TitleChooser\n            title={title}\n            choice={currentMeeting}\n            setChoice={setCurrentMeeting}\n            choices={meetings}\n            label=\"name\"\n          />\n        </GridItem>\n        {currentMeeting && (\n          <>\n            <GridItem>\n              <MeetingInfoPanel\n                currentMeeting={currentMeeting}\n                revalidate={revalidate}\n              />\n            </GridItem>\n            <GridItem>\n              <VotePanel meeting={currentMeeting} />\n            </GridItem>\n            {/* {currentMeeting.enable_speaker_requests && ( */}\n            <GridItem>\n              <SpeakerPanel meeting={currentMeeting} />\n            </GridItem>\n            {/* )} */}\n          </>\n        )}\n      </GridContainer>\n    </BigPixels>\n  )\n}\nexport default VotePage\n"],"sourceRoot":""}