{"version":3,"sources":["webpack:///./src/components/vote/voteForm.js","webpack:///./src/components/vote/activeVote.js","webpack:///./src/components/vote/index.js","webpack:///./src/components/vote/page.js"],"names":["VoteForm","props","_this","_Component","call","this","state","checkedId","onMessage","onAlternativeChecked","bind","assertThisInitialized_default","placeVote","showMessage","alternativeId","setState","_this$props","setLoading","vote","voteData","vote_id","id","alternative_id","post","then","catch","error","render","_this2","votingDisabled","buttonText","react_default","a","createElement","question","alternatives","map","_ref","text","key","type","checked","onChange","disabled","onClick","Component","ActiveVote","_useEndpoint","useEndpoint","endpoint","votes","Fragment","length","shownVote","has_voted","voteForm","Vote","useContext","LoadingContext","_useState","useState","message","setMessage","_useState2","displayReloadCloseText","setDisplayReloadCloseText","title","content","activeVote","drct","VotePage","bigPixels","grid","components_vote"],"mappings":"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","file":"component---src-components-vote-page-js-cb59423d84c4873be339.js","sourcesContent":["import React, { Component } from 'react'\nimport { post } from '../request'\n\nclass VoteForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      checkedId: -1,\n    }\n\n    const { onMessage } = this.props\n\n    this.onAlternativeChecked = this.onAlternativeChecked.bind(this)\n    this.placeVote = this.placeVote.bind(this)\n    this.showMessage = onMessage\n  }\n\n  onAlternativeChecked(alternativeId) {\n    this.setState({\n      checkedId: alternativeId,\n    })\n  }\n\n  placeVote() {\n    const { setLoading, vote } = this.props\n    const { checkedId } = this.state\n\n    const { showMessage } = this\n    const voteData = {\n      vote_id: vote.id,\n      alternative_id: checkedId,\n    }\n\n    setLoading(true)\n    post('/voting/made_votes/', voteData)\n      .then(() => {\n        setLoading(false)\n        showMessage('Tack!', 'Din röst har registrerats')\n      })\n      .catch(error => {\n        setLoading(false)\n        showMessage('Ett fel uppstod', error)\n      })\n  }\n\n  render() {\n    const { vote } = this.props\n    const { checkedId } = this.state\n\n    const votingDisabled = checkedId === -1\n    const buttonText = votingDisabled ? 'Välj ett alternativ' : 'Rösta'\n\n    return (\n      <div>\n        <strong>{vote.question}</strong>\n        <ul>\n          {vote.alternatives.map(({ text, id }) => (\n            <li key={id}>\n              <label>\n                <input\n                  type=\"radio\"\n                  checked={checkedId === id}\n                  onChange={() => this.onAlternativeChecked(id)}\n                />\n                {` ${text}`}\n              </label>\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          disabled={votingDisabled}\n          onClick={this.placeVote}\n        >\n          {buttonText}\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default VoteForm\n","import React from 'react'\nimport VoteForm from './voteForm'\nimport { useEndpoint } from '../request'\n\nconst ActiveVote = ({ showMessage, setLoading }) => {\n  const [votes, error] = useEndpoint({\n    endpoint: '/voting/votes/?current=true',\n  })\n\n  if (error) {\n    showMessage('Något gick fel', 'Logga ut eller refresha eller nåt.', true)\n  }\n\n  if (!votes) return <></>\n\n  if (votes.length === 0) return <div>Det finns ingen aktiv omröstning</div>\n\n  const shownVote = votes[0]\n\n  return shownVote.has_voted ? (\n    <p>Du har redan röstat i den nuvarande omröstningen.</p>\n  ) : (\n    <VoteForm\n      vote={shownVote}\n      onMessage={showMessage}\n      setLoading={setLoading}\n    />\n  )\n}\n\nexport default ActiveVote\n","import React, { useContext, useState } from 'react'\nimport ActiveVote from './activeVote'\nimport { Get, useEndpoint } from '../request'\nimport { LoadingContext } from '../layout/layout'\n\n// import style from '../../scss/vote.module.scss'\n\nconst Vote = () => {\n  const setLoading = useContext(LoadingContext)[1]\n  const [message, setMessage] = useState(null)\n  const [displayReloadCloseText, setDisplayReloadCloseText] = useState(false)\n\n  const showMessage = (title, content, drct) => {\n    setDisplayReloadCloseText(drct)\n    setMessage({\n      title,\n      content,\n    })\n  }\n\n  if (message !== null) {\n    const { title, content } = message\n    return (\n      <>\n        <h2>{title}</h2>\n        <p>{content}</p>\n        <button type=\"button\" onClick={() => setMessage(null)}>\n          {displayReloadCloseText ? 'Ladda om sidan' : 'Stäng'}\n        </button>\n      </>\n    )\n  }\n  return (\n    <>\n      <h1>D-cide</h1>\n      <ActiveVote showMessage={showMessage} setLoading={setLoading} />\n    </>\n  )\n}\n\nexport default Vote\n","import React, { useContext } from 'react'\nimport { LoadingContext } from '../layout/layout'\nimport Vote from '.'\nimport BigPixels from '../layout/bigPixels'\nimport { GridContainer, GridItem } from '../ui/grid'\n\nconst VotePage = () => {\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem>\n          <Vote />\n        </GridItem>\n      </GridContainer>\n    </BigPixels>\n  )\n}\nexport default VotePage\n"],"sourceRoot":""}