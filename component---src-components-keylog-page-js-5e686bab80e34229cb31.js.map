{"version":3,"sources":["webpack:///./src/components/keylogPage.js","webpack:///./src/components/ui/list.js"],"names":["KeylogPage","pageContext","data","keys","useSWR","title","map","key","name","subtitle","status","taken_by","pretty_name","buttons","iconComponent","FiInfo","text","onClick","id","color","List","children","className","style","list","ListItem","listItemColor","borderColor","listText","listButtons","defaultProps","ListButton","href","Icon","shown","listButton","type"],"mappings":"8FAAA,4FAqDeA,UA5CI,EAAGC,kBACpB,MAAQC,KAAMC,GAASC,YAAO,iBAO9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4BAAKH,EAAYI,OAEhBF,GACC,kBAAC,IAAD,KACGA,EAAKG,IAAIC,GACR,kBAAC,IAAD,CACEF,MAAOE,EAAIC,KACXC,SACEF,EAAIG,OACC,aAAYH,EAAIG,OAAOC,SAASC,eACjC,cAENC,QAAS,CACP,kBAAC,IAAD,CACEC,cAAeC,IACfC,KAAK,kBACLC,QAAS,OACTV,IAAI,gBAGRA,IAAKA,EAAIW,GACTC,MAAOZ,EAAIY,e,kCC1C7B,oJAIA,MAAMC,EAAO,EAAGC,cAAe,wBAAIC,UAAWC,IAAMC,MAAOH,GAErDI,EAAW,EAAGpB,QAAOI,WAAUI,UAASM,WAC5C,wBACEG,UAAWH,EAAQI,IAAMG,cAAgB,GACzCH,MAAO,CAAEI,YAAaR,IAEtB,yBAAKG,UAAWC,IAAMK,UACpB,4BAAKvB,GACL,2BAAII,IAEN,yBAAKa,UAAWC,IAAMM,aAAchB,IAIxCY,EAASK,aAAe,CACtBX,MAAO,MAGT,MAAMY,EAAa,EAAGC,OAAMf,UAASH,cAAemB,EAAMjB,OAAMkB,WAC9DA,EACE,oCACGF,EACC,uBACEV,UAAWC,IAAMY,WACjBH,KAAMA,EACNf,QAASA,EACTZ,MAAOW,GAEP,kBAACiB,EAAD,OAGF,4BACEX,UAAWC,IAAMY,WACjBC,KAAK,SACLnB,QAASA,EACTZ,MAAOW,GAEP,kBAACiB,EAAD,QAKN,qCAGJF,EAAWD,aAAe,CACxBI,OAAO","file":"component---src-components-keylog-page-js-5e686bab80e34229cb31.js","sourcesContent":["import React, { useState } from 'react'\nimport BigPixels from './layout/bigPixels'\nimport { GridContainer, GridItem } from './ui/grid'\nimport useSWR from 'swr'\n\nimport { List, ListItem, ListButton } from './ui/list'\n\nimport { FiTrash2, FiInfo, FiEdit } from 'react-icons/fi'\n\nconst KeylogPage = ({ pageContext }) => {\n  const { data: keys } = useSWR('/keylog/keys/')\n\n  //console.log(\"====================\");\n  //console.log(props);\n\n  //return(\"hej\");\n\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem>\n          <h1>{pageContext.title}</h1>\n\n          {keys && (\n            <List>\n              {keys.map(key => (\n                <ListItem\n                  title={key.name}\n                  subtitle={\n                    key.status\n                      ? `Upptagen (${key.status.taken_by.pretty_name})`\n                      : 'TillgÃ¤nglig'\n                  }\n                  buttons={[\n                    <ListButton\n                      iconComponent={FiInfo}\n                      text=\"Mer information\"\n                      onClick={() => {}}\n                      key=\"infobutton\"\n                    />,\n                  ]}\n                  key={key.id}\n                  color={key.color}\n                />\n              ))}\n            </List>\n          )}\n        </GridItem>\n      </GridContainer>\n    </BigPixels>\n  )\n}\n\nexport default KeylogPage\n","import React from 'react'\n\nimport style from '../../scss/ui.module.scss'\n\nconst List = ({ children }) => <ul className={style.list}>{children}</ul>\n\nconst ListItem = ({ title, subtitle, buttons, color }) => (\n  <li\n    className={color ? style.listItemColor : ''}\n    style={{ borderColor: color }}\n  >\n    <div className={style.listText}>\n      <h3>{title}</h3>\n      <p>{subtitle}</p>\n    </div>\n    <div className={style.listButtons}>{buttons}</div>\n  </li>\n)\n\nListItem.defaultProps = {\n  color: null,\n}\n\nconst ListButton = ({ href, onClick, iconComponent: Icon, text, shown }) =>\n  shown ? (\n    <>\n      {href ? (\n        <a\n          className={style.listButton}\n          href={href}\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </a>\n      ) : (\n        <button\n          className={style.listButton}\n          type=\"button\"\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </button>\n      )}\n    </>\n  ) : (\n    <></>\n  )\n\nListButton.defaultProps = {\n  shown: true,\n}\n\nexport { List, ListItem, ListButton }\n"],"sourceRoot":""}