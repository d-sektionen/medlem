{"version":3,"sources":["webpack:///./src/components/ui/titleChooser.js","webpack:///./src/components/ui/list.js","webpack:///./src/components/checkin/doorkeeperPanel.js","webpack:///./src/components/votingCounter/meetingPanel.js","webpack:///./src/components/votingCounter/voteStats.js","webpack:///./src/components/votingCounter/votePanel.js","webpack:///./src/components/votingCounter/attendantPanel.js","webpack:///./src/components/votingCounter/speakerPanel.js","webpack:///./src/components/votingCounter/page.js"],"names":["TitleChooser","title","choices","categorizedChoices","choice","setChoice","label","action","actionLabel","noChoicesLabel","allChoices","Object","keys","reduce","accumulator","category","className","style","titleChooser","actions","length","selectContainer","onChange","e","selectedValue","target","value","c","filter","i","id","hidden","sort","map","key","hint","onClick","defaultProps","List","children","list","ListItem","subtitle","buttons","color","listItemColor","borderColor","listText","listButtons","ListButton","href","iconComponent","Icon","text","shown","listButton","type","DoorkeeperPanel","event","input","setInput","useState","data","doorkeepers","mutate","useSWR","onSubmit","preventDefault","async","newDoorkeeper","post","create","user_username","event_id","doorkeeper","user","pretty_name","del","d","destroy","FiTrash2","MeetingPanel","currentMeeting","updatePatch","name","description","whiteSpace","enable_speaker_requests","open_attendance","clear_data","VoteStats","voteId","voteSum","alternatives","alt","num_votes","a","b","Math","round","VotePanel","votes","openChartModal","useModal","closeModal","useCloseModal","useEffect","vote","meeting","question","open","undefined","FiBarChart2","AttendantPanel","attendants","refreshInterval","attendant","has_voting_rights","getMemberAttendants","SpeakerPanel","VotingAdminPage","pageContext","setCurrentMeeting","unorderedMeetings","meetings","reverse","find","m","fullWidth","updatedMeeting","patch"],"mappings":"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","file":"component---src-components-voting-counter-page-js-7283fb08173829c04fab.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport style from '../../scss/ui.module.scss'\nimport { Button } from './buttons'\n\nconst TitleChooser = ({\n  title,\n  choices,\n  categorizedChoices,\n  choice,\n  setChoice,\n  label,\n  action,\n  actionLabel,\n  noChoicesLabel,\n}) => {\n  const allChoices = [\n    ...(choices || []),\n    // merge all categorized choices to single array.\n    ...Object.keys(categorizedChoices).reduce(\n      (accumulator, category) => [\n        ...accumulator,\n        ...categorizedChoices[category],\n      ],\n      []\n    ),\n  ]\n  return (\n    <div className={style.titleChooser}>\n      <h1>{title}</h1>\n      <div className={style.actions}>\n        {allChoices.length ? (\n          <div className={style.selectContainer}>\n            <select\n              onChange={e => {\n                const selectedValue = e.target.value\n                const c =\n                  selectedValue === ''\n                    ? null\n                    : allChoices.filter(i => `${i.id}` === selectedValue)[0]\n                setChoice(c)\n              }}\n              value={choice ? choice.id : ''}\n            >\n              <option hidden value=\"\" />\n              {choices.sort().map(c => (\n                <option value={c.id} key={c.id}>\n                  {c[label]}\n                </option>\n              ))}\n              {Object.keys(categorizedChoices)\n                .sort()\n                .map(key => (\n                  <optgroup label={key} key={key}>\n                    {categorizedChoices[key].sort().map(c => (\n                      <option value={c.id} key={c.id}>\n                        {c[label]}\n                      </option>\n                    ))}\n                  </optgroup>\n                ))}\n            </select>\n            {choice === null && (\n              <div className={style.hint}>VÃ¤lj ett objekt</div>\n            )}\n          </div>\n        ) : (\n          <span>{noChoicesLabel}</span>\n        )}\n\n        {action && <Button onClick={action}>{actionLabel}</Button>}\n      </div>\n    </div>\n  )\n}\nTitleChooser.defaultProps = {\n  categorizedChoices: {},\n  choices: [],\n  action: null,\n  actionLabel: '',\n  choice: null,\n  noChoicesLabel: '',\n  setChoice: () => {},\n  label: '',\n}\n\nTitleChooser.propTypes = {\n  title: PropTypes.string.isRequired,\n  choices: PropTypes.array,\n  categorizedChoices: PropTypes.object,\n  choice: PropTypes.object,\n  setChoice: PropTypes.func,\n  label: PropTypes.string,\n  action: PropTypes.func,\n  actionLabel: PropTypes.string,\n  noChoicesLabel: PropTypes.string,\n}\n\nexport default TitleChooser\n","import React from 'react'\n\nimport style from '../../scss/ui.module.scss'\n\nconst List = ({ children }) => <ul className={style.list}>{children}</ul>\n\nconst ListItem = ({ title, subtitle, buttons, color }) => (\n  <li\n    className={color ? style.listItemColor : ''}\n    style={{ borderColor: color }}\n  >\n    <div className={style.listText}>\n      <h3>{title}</h3>\n      <p>{subtitle}</p>\n    </div>\n    <div className={style.listButtons}>{buttons}</div>\n  </li>\n)\n\nListItem.defaultProps = {\n  color: null,\n}\n\nconst ListButton = ({ href, onClick, iconComponent: Icon, text, shown }) =>\n  shown ? (\n    <>\n      {href ? (\n        <a\n          className={style.listButton}\n          href={href}\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </a>\n      ) : (\n        <button\n          className={style.listButton}\n          type=\"button\"\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </button>\n      )}\n    </>\n  ) : (\n    <></>\n  )\n\nListButton.defaultProps = {\n  shown: true,\n}\n\nexport { List, ListItem, ListButton }\n","import React, { useState, useEffect } from 'react'\n\nimport { FiTrash2 } from 'react-icons/fi'\nimport { List, ListItem, ListButton } from '../ui/list'\nimport useSWR from 'swr'\nimport { post, del } from '../request'\n\nconst DoorkeeperPanel = ({ event }) => {\n  const [input, setInput] = useState('')\n\n  const { data: doorkeepers, mutate } = useSWR(\n    `/checkin/doorkeepers/?event_id=${event.id}`\n  )\n\n  const create = async data => {\n    const { data: newDoorkeeper } = await post('/checkin/doorkeepers/', data)\n    mutate([...doorkeepers, newDoorkeeper])\n    return newDoorkeeper\n  }\n\n  const destroy = async id => {\n    await del(`/checkin/doorkeepers/${id}/`)\n    mutate(doorkeepers.filter(d => d.id !== id))\n  }\n\n  return (\n    <div>\n      <h2>DÃ¶rrvakter</h2>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          setInput('')\n\n          create({\n            user_username: input,\n            event_id: event.id,\n          })\n        }}\n      >\n        <input value={input} onChange={e => setInput(e.target.value)} />\n      </form>\n      <List>\n        {doorkeepers &&\n          doorkeepers.map(doorkeeper => (\n            <ListItem\n              title={doorkeeper.user.pretty_name}\n              key={doorkeeper.id}\n              buttons={[\n                <ListButton\n                  onClick={() => destroy(doorkeeper.id)}\n                  iconComponent={FiTrash2}\n                  text=\"Ta bort dÃ¶rrvakt\"\n                  key=\"remove\"\n                />,\n              ]}\n            />\n          ))}\n      </List>\n    </div>\n  )\n}\n\nexport default DoorkeeperPanel\n","import React from 'react'\nimport { ButtonGroup, Button } from '../ui/buttons'\nimport { patch } from '../request'\n\nconst MeetingPanel = ({ currentMeeting, updatePatch }) => (\n  <div>\n    <h2>MÃ¶tesinfo</h2>\n    <h3>{currentMeeting.name}</h3>\n    {currentMeeting.description && (\n      <p style={{ whiteSpace: 'pre-line' }}>{currentMeeting.description}</p>\n    )}\n    <h3>Detaljer</h3>\n    <ul>\n      <li>\n        {currentMeeting.enable_speaker_requests\n          ? 'Talarlista aktiverad'\n          : 'Talarlista inaktiverad'}\n      </li>\n      <li>\n        {currentMeeting.open_attendance\n          ? 'Ãppen incheckning'\n          : 'StÃ¤ngd incheckning'}\n      </li>\n      <li>{`MÃ¶tesdata rensas: ${currentMeeting.clear_data}`}</li>\n    </ul>\n  </div>\n)\n\nexport default MeetingPanel\n","import React, { useRef, useEffect } from 'react'\nimport useSWR from 'swr'\n\nconst VoteStats = ({ currentMeeting, voteId }) => {\n  const { data } = useSWR(() => voteId && `/voting/admin-votes/${voteId}/`)\n\n  const voteSum = (data\n    ? data.alternatives.map(alt => alt.num_votes)\n    : []\n  ).reduce((a, b) => a + b, 0)\n\n  return (\n    <div>\n      <ul>\n        {data &&\n          data.alternatives.map(alt => (\n            <li key={alt.text}>\n              {`${alt.text}: ${alt.num_votes}`}\n              {voteSum\n                ? ` (${\n                    alt.num_votes\n                      ? Math.round((1000 * alt.num_votes) / voteSum) / 10\n                      : 0\n                  }%)`\n                : ''}\n            </li>\n          ))}\n      </ul>\n      <p>\n        {'Summa: '}\n        {voteSum}\n      </p>\n    </div>\n  )\n}\n\nexport default VoteStats\n","import React, { useEffect } from 'react'\nimport useSWR from 'swr'\nimport { FiBarChart2, FiEdit2 } from 'react-icons/fi'\n\nimport useModal, { useCloseModal } from '../modal/useModal'\nimport VoteStats from './voteStats'\nimport { List, ListItem, ListButton } from '../ui/list'\nimport { Button } from '../ui/buttons'\nimport { post, put } from '../request'\n\nconst VotePanel = ({ currentMeeting }) => {\n  const { data: votes, mutate } = useSWR(\n    `/voting/admin-votes/?event_id=${currentMeeting.id}`\n  )\n\n  const create = async data => {\n    const { data: newVote } = await post('/voting/admin-votes/', data)\n    mutate([...votes, newVote])\n    return newVote\n  }\n\n  const update = async (id, data) => {\n    const { data: updatedVote } = await put(`/voting/admin-votes/${id}/`, data)\n    mutate([...votes.filter(v => v.id !== id), updatedVote])\n    return updatedVote\n  }\n\n  const [openChartModal] = useModal(VoteStats)\n  const closeModal = useCloseModal()\n\n  // Close modal when a vote is created\n  useEffect(closeModal, [votes])\n\n  // if (votes === null) return <></>\n\n  return (\n    <div>\n      <h2>OmrÃ¶stningar</h2>\n      <List>\n        {votes &&\n          votes\n            .filter(vote => vote.meeting === currentMeeting.id)\n            .map(vote => (\n              <ListItem\n                title={vote.question}\n                subtitle={vote.open ? 'Active' : undefined}\n                key={vote.id}\n                buttons={[\n                  <ListButton\n                    onClick={() =>\n                      openChartModal(`Resultat av \"${vote.question}\"`, {\n                        voteId: vote.id,\n                      })\n                    }\n                    iconComponent={FiBarChart2}\n                    text=\"Resultat\"\n                    key=\"results\"\n                  />,\n                ]}\n              />\n            ))}\n      </List>\n    </div>\n  )\n}\n\nexport default VotePanel\n","import React, { useState, useEffect } from 'react'\nimport { FiTrash2 } from 'react-icons/fi'\n\nimport { List, ListButton, ListItem } from '../ui/list'\nimport { Button, ButtonGroup } from '../ui/buttons'\nimport { del, post } from '../request'\nimport useSWR from 'swr'\n\nconst getMemberAttendants = attendants => {\n  const memberAttendants = attendants.filter(\n    attendant => attendant.has_voting_rights\n  )\n  return memberAttendants\n}\n\nconst AttendantPanel = ({ currentMeeting }) => {\n  const [input, setInput] = useState('')\n\n  const { data: attendants, mutate } = useSWR(\n    () => `/voting/attendants/?meeting_id=${currentMeeting.id}`,\n    { refreshInterval: 4000 }\n  )\n\n  if (attendants === null) return <></>\n\n  return (\n    <div>\n      <h2>Deltagare</h2>\n\n      <div>\n        <p>{`RÃ¶stlÃ¤ngd: ${\n          attendants ? getMemberAttendants(attendants).length : 0\n        }`}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default AttendantPanel\n","import React, { useState, useEffect, useContext } from 'react'\nimport useSWR from 'swr'\n\nimport { FiTrash2 } from 'react-icons/fi'\nimport { List, ListButton, ListItem } from '../ui/list'\nimport { Button } from '../ui/buttons'\nimport { UserContext } from '../layout/layout'\nimport { post, del } from '../request'\n\nconst SpeakerPanel = ({ meeting }) => {\n  const { data: speakers, mutate } = useSWR(\n    () => meeting && `/voting/speakers/?meeting_id=${meeting.id}`,\n    { refreshInterval: 4000 }\n  )\n\n  return (\n    <div>\n      <h2>Talarlista</h2>\n      <List>\n        {speakers &&\n          speakers.map(s => (\n            <ListItem\n              title={s.user.pretty_name}\n              subtitle={s.prioritized ? 'Replik' : null}\n              key={s.id}\n              buttons={[\n                <ListButton\n                  onClick={async () => {\n                    await del(`/voting/speakers/${s.id}`)\n                    mutate(speakers.filter(x => x.id !== s.id))\n                  }}\n                  iconComponent={FiTrash2}\n                  text=\"Ta bort frÃ¥n talarlista\"\n                  key=\"remove\"\n                />,\n              ]}\n            />\n          ))}\n      </List>\n    </div>\n  )\n}\n\nexport default SpeakerPanel\n","import React, { useState, useEffect } from 'react'\nimport useSWR from 'swr'\n\nimport MeetingPanel from './meetingPanel'\nimport DoorkeeperPanel from '../checkin/doorkeeperPanel'\nimport VotePanel from './votePanel'\nimport AttendantPanel from './attendantPanel'\nimport { GridContainer, GridItem } from '../ui/grid'\nimport SpeakerPanel from './speakerPanel'\nimport TitleChooser from '../ui/titleChooser'\nimport useModal, { useCloseModal } from '../modal/useModal'\nimport { post, patch } from '../request'\nimport BigPixels from '../layout/bigPixels'\n\nconst VotingAdminPage = ({ pageContext: { title } }) => {\n  const [currentMeeting, setCurrentMeeting] = useState(null)\n  const { data: unorderedMeetings, mutate } = useSWR('/voting/admin-meetings/')\n  const closeModal = useCloseModal()\n\n  const create = async data => {\n    const { data: newMeeting } = await post('/voting/admin-meetings/', data)\n    mutate([...unorderedMeetings, newMeeting])\n  }\n\n  const updatePatch = async data => {\n    const { data: updatedMeeting } = await patch(\n      `/voting/admin-meetings/${currentMeeting.id}/`,\n      data\n    )\n    mutate([\n      ...unorderedMeetings.filter(meeting => meeting.id !== currentMeeting.id),\n      updatedMeeting,\n    ])\n  }\n\n  const meetings = unorderedMeetings ? [...unorderedMeetings].reverse() : null\n\n  // sync currentMeeting with updated meetings\n  useEffect(\n    () => {\n      if (currentMeeting)\n        setCurrentMeeting(meetings.find(m => m.id === currentMeeting.id))\n    },\n    [meetings]\n  )\n\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem fullWidth>\n          <TitleChooser\n            title={title}\n            choice={currentMeeting}\n            setChoice={setCurrentMeeting}\n            choices={meetings}\n            label=\"name\"\n            noChoicesLabel=\"Det finns inga mÃ¶ten just nu.\"\n          />\n        </GridItem>\n        {currentMeeting && (\n          <>\n            <GridItem>\n              <MeetingPanel\n                currentMeeting={currentMeeting}\n                updatePatch={updatePatch}\n              />\n            </GridItem>\n            <GridItem>\n              <VotePanel currentMeeting={currentMeeting} />\n            </GridItem>\n            <GridItem>\n              <AttendantPanel currentMeeting={currentMeeting} />\n            </GridItem>\n          </>\n        )}\n      </GridContainer>\n    </BigPixels>\n  )\n}\n\nexport default VotingAdminPage\n"],"sourceRoot":""}