{"version":3,"sources":["webpack:///./src/components/checkin/textField.js","webpack:///./src/components/iconMap.js","webpack:///./src/components/checkin/qrScanner.js","webpack:///./src/components/checkin/index.js","webpack:///./src/components/checkin/useFeedback.js","webpack:///./src/components/useLocalStorage.js","webpack:///./src/components/useKeyPress.js","webpack:///./src/components/checkin/registerUser.js","webpack:///./src/components/checkin/page.js"],"names":["TextField","_ref","onSubmit","elem","useRef","text","onEnter","_useState","useState","setText","regex","RegExp","downHandler","e","keyChar","String","fromCharCode","keyCode","key","prev","shift","shiftKey","slice","test","length","useEffect","current","addEventListener","removeEventListener","useTextField","react_default","a","createElement","ref","tabIndex","className","style","textField","CompatibilityTextField","_ref2","_useState2","value","setValue","onChange","target","onKeyDown","iconMap","FiUserCheck","FiUserX","QrScanner","videoElement","close","useCloseModal","codeReader","BrowserQRCodeReader","decodeFromInputVideoDevice","undefined","then","result","catch","err","console","error","reset","muted","display","Checkin","events","currentEvent","setCurrentEvent","currentAction","setCurrentAction","_useFeedback","feedback","setFeedback","timeout","clearTimeout","f","setTimeout","useFeedback","_useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","parse","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","compatibilityMode","setCompatibilityMode","targetKey","keyPressed","setKeyPressed","upHandler","useKeyPress","action","actions","textFieldOnSubmit","eventId","identifier","setFeedbackExtended","icon","defaultIcon","fi","Icon","class","fail","success","post","event","res","detail","data","_res$data","response","_err$response$data","registerUser","id","openModal","useModal","container","type","checked","buttons","iconComponent","FiVideo","onClick","noPadding","controlContainer","filter","map","name","textField_CompatibilityTextField","textField_TextField","parseInt","disabled","i","CheckinPage","useEndpoint","endpoint","checkin","reverse"],"mappings":"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","file":"component---src-components-checkin-page-js-1f9cf72f4e5cbbc879ac.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport qs from 'querystring'\nimport { useEndpoint, post, del } from '../request'\nimport useKeyPress from '../useKeyPress'\n\nimport style from '../../scss/checkin.module.scss'\n\nconst useTextField = (onEnter, elem) => {\n  // State for keeping track of whether key is pressed\n  const [text, setText] = useState('')\n  const regex = RegExp('^[A-Za-z0-9]+$')\n\n  // If pressed key is our target key then set to true\n  const downHandler = e => {\n    const keyChar = String.fromCharCode(e.keyCode)\n    if (e.key === 'Enter') {\n      setText(prev => {\n        if (prev !== '') onEnter({ text: prev, shift: e.shiftKey })\n        return ''\n      })\n      // Remove event listeners on cleanup\n    } else if (e.key === 'Backspace') {\n      setText(prev => prev.slice(0, -1))\n    } else if (regex.test(keyChar)) {\n      // console.log(keyCode + ' - ' + key + ' - ' + String.fromCharCode(keyCode))\n      setText(prev => (prev.length > 20 ? prev : `${prev}${keyChar}`))\n    }\n  }\n\n  // Add event listeners\n  useEffect(\n    () => {\n      if (elem) {\n        elem.current.addEventListener('keydown', downHandler)\n        // Remove event listeners on cleanup\n        return () => {\n          elem.current.removeEventListener('keydown', downHandler)\n        }\n      }\n      return () => {}\n    },\n    [onEnter, elem]\n  ) // Empty array ensures that effect is only run on mount and unmount\n\n  return text\n}\n\nconst TextField = ({ onSubmit }) => {\n  const elem = useRef(null)\n  const text = useTextField(onSubmit, elem)\n\n  return (\n    <div ref={elem} tabIndex={0} className={style.textField}>\n      {text}\n    </div>\n  )\n}\n\nconst CompatibilityTextField = ({ onSubmit }) => {\n  const [value, setValue] = useState('')\n\n  return (\n    <input\n      className={style.textField}\n      onChange={e => {\n        setValue(e.target.value)\n      }}\n      onKeyDown={e => {\n        if (e.key === 'Enter') {\n          setValue(prev => {\n            if (prev !== '') onSubmit({ text: prev })\n            return ''\n          })\n        }\n      }}\n      value={value}\n    />\n  )\n}\n\nexport { TextField, CompatibilityTextField }\n","import { FiUserCheck, FiUserX } from 'react-icons/fi'\n\n// Maps strings to icons\nexport default {\n  FiUserCheck,\n  FiUserX,\n}\n","import React, { useState, useRef, useEffect } from 'react'\n\nimport { BrowserQRCodeReader } from '@zxing/library'\nimport { useCloseModal } from '../modal/useModal'\n\nconst QrScanner = ({ onSubmit }) => {\n  const videoElement = useRef(null)\n  const close = useCloseModal()\n  const codeReader = new BrowserQRCodeReader()\n\n  useEffect(() => {\n    codeReader\n      .decodeFromInputVideoDevice(undefined, videoElement.current)\n      .then(result => {\n        onSubmit({ text: result.text })\n        close()\n      })\n      .catch(err => console.error(err))\n\n    return () => codeReader.reset()\n  }, [])\n  return <video ref={videoElement} muted style={{ display: 'block' }} />\n}\n\nexport default QrScanner\n","import React, { useState, useRef, useEffect } from 'react'\nimport { FiVideo } from 'react-icons/fi'\n\nimport { TextField, CompatibilityTextField } from './textField'\nimport style from '../../scss/checkin.module.scss'\nimport useFeedback from './useFeedback'\nimport registerUser from './registerUser'\nimport useModal from '../modal/useModal'\nimport QrScanner from './qrScanner'\nimport { IconButton } from '../ui/buttons'\nimport useLocalStorage from '../useLocalStorage'\nimport useKeyPress from '../useKeyPress'\n\nconst Checkin = ({ events }) => {\n  const [currentEvent, setCurrentEvent] = useState(events[0])\n  const [currentAction, setCurrentAction] = useState(0)\n  const [feedback, setFeedback] = useFeedback()\n  const [compatibilityMode, setCompatibilityMode] = useLocalStorage(\n    'checkin-compatibility-mode',\n    false\n  )\n  const shift = useKeyPress('Shift')\n\n  // shift feature only available in non compatibility mode.\n  const shiftDown = compatibilityMode ? false : shift\n\n  const action = shiftDown\n    ? (currentAction + 1) % currentEvent.actions.length\n    : currentAction\n\n  const textFieldOnSubmit = ({ text }) => {\n    registerUser(setFeedback, currentEvent.id, text, action)\n  }\n\n  const [openModal] = useModal(QrScanner)\n\n  if (!currentEvent) {\n    return 'Du är inte dörrvakt på något evenemang.'\n  }\n\n  return (\n    <div className={`${style.container} ${feedback && feedback.class}`}>\n      <h1>Bleep Bloop</h1>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={compatibilityMode}\n          onChange={() => setCompatibilityMode(prev => !prev)}\n        />\n        Kompatibilitetsläge\n      </label>\n      <IconButton\n        iconComponent={FiVideo}\n        text=\"QR\"\n        onClick={() =>\n          openModal(\n            'QR-registrering',\n            { onSubmit: textFieldOnSubmit },\n            { noPadding: true }\n          )\n        }\n      />\n      <div className={style.controlContainer}>\n        <select\n          onChange={e => {\n            setCurrentEvent(\n              events.filter(event => `${event.id}` === e.target.value)[0]\n            )\n          }}\n          value={currentEvent.id}\n        >\n          {events.map(event => (\n            <option key={event.id} value={event.id}>\n              {event.name}\n            </option>\n          ))}\n        </select>\n        {compatibilityMode ? (\n          <CompatibilityTextField onSubmit={textFieldOnSubmit} />\n        ) : (\n          <TextField onSubmit={textFieldOnSubmit} />\n        )}\n        {currentEvent.actions.length > 0 && (\n          <select\n            onChange={e => {\n              setCurrentAction(parseInt(e.target.value, 10))\n            }}\n            value={action}\n            disabled={currentEvent.actions.length < 2}\n          >\n            {currentEvent.actions.map((a, i) => (\n              <option key={a} value={i}>\n                {a}\n              </option>\n            ))}\n          </select>\n        )}\n      </div>\n\n      {currentEvent.actions.length > 1 && !compatibilityMode && (\n        <p>Håll ner shift för att temporärt byta funktion.</p>\n      )}\n\n      <div className={style.feedback}>\n        {feedback && feedback.icon}\n        <p>{feedback && feedback.text}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Checkin\n","import { useEffect, useState } from 'react'\n\nexport default function useFeedback() {\n  // State for keeping track of whether key is pressed\n  const [feedback, setFeedback] = useState(null)\n\n  let timeout = null\n\n  // Remove event listeners on cleanup\n  // Empty array ensures that effect is only run on mount and unmount\n  useEffect(\n    () => () => {\n      clearTimeout(timeout)\n    },\n    []\n  )\n\n  return [\n    feedback,\n    f => {\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        setFeedback(null)\n      }, 1500)\n      setFeedback(f)\n    },\n  ]\n}\n","import { useState } from 'react'\n\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key)\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error)\n      return initialValue\n    }\n  })\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value\n      // Save state\n      setStoredValue(valueToStore)\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore))\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [storedValue, setValue]\n}\n","import { useEffect, useState } from 'react'\n\nexport default function useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false)\n\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true)\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false)\n    }\n  }\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed\n}\n","import React from 'react'\nimport { FiCheck, FiX } from 'react-icons/fi'\nimport { post } from '../request'\nimport style from '../../scss/checkin.module.scss'\nimport iconMap from '../iconMap'\n\nexport default (setFeedback, eventId, identifier, action) => {\n  const setFeedbackExtended = (text, icon, error) => {\n    const defaultIcon = error ? <FiX /> : <FiCheck />\n    const defaultText = error\n      ? 'Okänt fel.'\n      : 'Allt gick väl, men det är oklart vad som faktiskt hände.'\n\n    const Icon = iconMap[icon]\n\n    setFeedback({\n      text: text || defaultText,\n      icon: Icon ? <Icon /> : defaultIcon,\n      class: error ? style.fail : style.success,\n    })\n  }\n\n  post('/checkin/register/', {\n    event: eventId,\n    identifier,\n    action,\n  })\n    .then(res => {\n      let detail\n      let icon\n\n      if (res.data) ({ detail, icon } = res.data)\n\n      setFeedbackExtended(detail, icon, false)\n    })\n    .catch(err => {\n      let detail\n      let icon\n\n      if (err.response && err.response.data)\n        ({ detail, icon } = err.response.data)\n\n      setFeedbackExtended(detail, icon, true)\n    })\n}\n","import React from 'react'\nimport Checkin from '.'\nimport { useEndpoint } from '../request'\n\nconst CheckinPage = () => {\n  const [events] = useEndpoint({ endpoint: '/checkin/events/' })\n\n  return events ? <Checkin events={events.reverse()} /> : null\n}\n\nexport default CheckinPage\n"],"sourceRoot":""}