{"version":3,"sources":["webpack:///./src/components/keylogPage.js","webpack:///./src/components/ui/list.js"],"names":["KeylogPage","pageContext","data","keys","useSWR","title","map","key","name","subtitle","status","taken_by","pretty_name","buttons","iconComponent","FiInfo","text","onClick","id","color","List","children","className","style","list","ListItem","listItemColor","borderColor","listText","listButtons","defaultProps","ListButton","href","Icon","shown","listButton","type"],"mappings":"8FAAA,4FAqDeA,UA5CI,EAAGC,kBACpB,MAAQC,KAAMC,GAASC,YAAO,iBAO9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4BAAKH,EAAYI,OAEhBF,GACC,kBAAC,IAAD,KACGA,EAAKG,IAAIC,GACR,kBAAC,IAAD,CACEF,MAAOE,EAAIC,KACXC,SACEF,EAAIG,OACC,aAAYH,EAAIG,OAAOC,SAASC,eACjC,cAENC,QAAS,CACP,kBAAC,IAAD,CACEC,cAAeC,IACfC,KAAK,kBACLC,QAAS,OACTV,IAAI,gBAGRA,IAAKA,EAAIW,GACTC,MAAOZ,EAAIY,e,kCC1C7B,oJAIA,MAAMC,EAAO,EAAGC,cAAe,wBAAIC,UAAWC,IAAMC,MAAOH,GAErDI,EAAW,EAAGpB,QAAOI,WAAUI,UAASM,WAC5C,wBACEG,UAAWH,EAAQI,IAAMG,cAAgB,GACzCH,MAAO,CAAEI,YAAaR,IAEtB,yBAAKG,UAAWC,IAAMK,UACpB,4BAAKvB,GACL,2BAAII,IAEN,yBAAKa,UAAWC,IAAMM,aAAchB,IAIxCY,EAASK,aAAe,CACtBX,MAAO,MAGT,MAAMY,EAAa,EAAGC,OAAMf,UAASH,cAAemB,EAAMjB,OAAMkB,WAC9DA,EACE,oCACGF,EACC,uBACEV,UAAWC,IAAMY,WACjBH,KAAMA,EACNf,QAASA,EACTZ,MAAOW,GAEP,kBAACiB,EAAD,OAGF,4BACEX,UAAWC,IAAMY,WACjBC,KAAK,SACLnB,QAASA,EACTZ,MAAOW,GAEP,kBAACiB,EAAD,QAKN,qCAGJF,EAAWD,aAAe,CACxBI,OAAO","file":"component---src-components-keylog-page-js-c9e1fe353b036aef3e79.js","sourcesContent":["import React, { useState } from 'react'\r\nimport BigPixels from './layout/bigPixels'\r\nimport { GridContainer, GridItem } from './ui/grid'\r\nimport useSWR from 'swr'\r\n\r\nimport { List, ListItem, ListButton } from './ui/list'\r\n\r\nimport { FiTrash2, FiInfo, FiEdit } from 'react-icons/fi'\r\n\r\nconst KeylogPage = ({ pageContext }) => {\r\n  const { data: keys } = useSWR('/keylog/keys/')\r\n\r\n  //console.log(\"====================\");\r\n  //console.log(props);\r\n\r\n  //return(\"hej\");\r\n\r\n  return (\r\n    <BigPixels>\r\n      <GridContainer>\r\n        <GridItem>\r\n          <h1>{pageContext.title}</h1>\r\n\r\n          {keys && (\r\n            <List>\r\n              {keys.map(key => (\r\n                <ListItem\r\n                  title={key.name}\r\n                  subtitle={\r\n                    key.status\r\n                      ? `Upptagen (${key.status.taken_by.pretty_name})`\r\n                      : 'TillgÃ¤nglig'\r\n                  }\r\n                  buttons={[\r\n                    <ListButton\r\n                      iconComponent={FiInfo}\r\n                      text=\"Mer information\"\r\n                      onClick={() => {}}\r\n                      key=\"infobutton\"\r\n                    />,\r\n                  ]}\r\n                  key={key.id}\r\n                  color={key.color}\r\n                />\r\n              ))}\r\n            </List>\r\n          )}\r\n        </GridItem>\r\n      </GridContainer>\r\n    </BigPixels>\r\n  )\r\n}\r\n\r\nexport default KeylogPage\r\n","import React from 'react'\r\n\r\nimport style from '../../scss/ui.module.scss'\r\n\r\nconst List = ({ children }) => <ul className={style.list}>{children}</ul>\r\n\r\nconst ListItem = ({ title, subtitle, buttons, color }) => (\r\n  <li\r\n    className={color ? style.listItemColor : ''}\r\n    style={{ borderColor: color }}\r\n  >\r\n    <div className={style.listText}>\r\n      <h3>{title}</h3>\r\n      <p>{subtitle}</p>\r\n    </div>\r\n    <div className={style.listButtons}>{buttons}</div>\r\n  </li>\r\n)\r\n\r\nListItem.defaultProps = {\r\n  color: null,\r\n}\r\n\r\nconst ListButton = ({ href, onClick, iconComponent: Icon, text, shown }) =>\r\n  shown ? (\r\n    <>\r\n      {href ? (\r\n        <a\r\n          className={style.listButton}\r\n          href={href}\r\n          onClick={onClick}\r\n          title={text}\r\n        >\r\n          <Icon />\r\n        </a>\r\n      ) : (\r\n        <button\r\n          className={style.listButton}\r\n          type=\"button\"\r\n          onClick={onClick}\r\n          title={text}\r\n        >\r\n          <Icon />\r\n        </button>\r\n      )}\r\n    </>\r\n  ) : (\r\n    <></>\r\n  )\r\n\r\nListButton.defaultProps = {\r\n  shown: true,\r\n}\r\n\r\nexport { List, ListItem, ListButton }\r\n"],"sourceRoot":""}