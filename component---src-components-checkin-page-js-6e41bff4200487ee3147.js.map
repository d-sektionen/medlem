{"version":3,"sources":["webpack:///./src/components/checkin/textField.js","webpack:///./src/components/iconMap.js","webpack:///./src/components/checkin/qrScanner.js","webpack:///./src/components/checkin/index.js","webpack:///./src/components/checkin/useFeedback.js","webpack:///./src/components/checkin/registerUser.js","webpack:///./src/components/checkin/page.js","webpack:///./src/components/useKeyPress.js"],"names":["TextField","_ref","text","onEnter","_useState","useState","setText","regex","RegExp","downHandler","e","keyChar","String","fromCharCode","keyCode","key","prev","shift","shiftKey","slice","test","length","useEffect","window","addEventListener","removeEventListener","useTextField","onSubmit","react_default","a","createElement","className","style","textField","iconMap","FiUserCheck","FiUserX","QrScanner","videoElement","useRef","close","useCloseModal","codeReader","BrowserQRCodeReader","decodeFromInputVideoDevice","undefined","current","then","result","catch","err","console","error","reset","ref","muted","display","Checkin","events","shiftDown","currentEvent","setCurrentEvent","_useState2","currentAction","setCurrentAction","_useFeedback","feedback","setFeedback","timeout","clearTimeout","f","setTimeout","useFeedback","action","actions","textFieldOnSubmit","_ref2","eventId","identifier","setFeedbackExtended","icon","defaultIcon","fi","Icon","class","fail","success","post","event","res","detail","data","_res$data","response","_err$response$data","registerUser","id","openModal","useModal","container","buttons","iconComponent","FiVideo","onClick","noPadding","controlContainer","onChange","filter","target","value","map","name","disabled","i","CheckinPage","useEndpoint","endpoint","targetKey","keyPressed","setKeyPressed","upHandler","useKeyPress","checkin","reverse"],"mappings":"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","file":"component---src-components-checkin-page-js-6e41bff4200487ee3147.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport qs from 'querystring'\nimport { useEndpoint, post, del } from '../request'\nimport useKeyPress from '../useKeyPress'\n\nimport style from '../../scss/checkin.module.scss'\n\nconst useTextField = onEnter => {\n  // State for keeping track of whether key is pressed\n  const [text, setText] = useState('')\n  const regex = RegExp('^[A-Za-z0-9]+$')\n\n  // If pressed key is our target key then set to true\n  const downHandler = e => {\n    const keyChar = String.fromCharCode(e.keyCode)\n    if (e.key === 'Enter') {\n      setText(prev => {\n        if (prev !== '') onEnter({ text: prev, shift: e.shiftKey })\n        return ''\n      })\n      // Remove event listeners on cleanup\n    } else if (e.key === 'Backspace') {\n      setText(prev => prev.slice(0, -1))\n    } else if (regex.test(keyChar)) {\n      // console.log(keyCode + ' - ' + key + ' - ' + String.fromCharCode(keyCode))\n      setText(prev => (prev.length > 16 ? prev : `${prev}${keyChar}`))\n    }\n  }\n\n  // Add event listeners\n  useEffect(\n    () => {\n      window.addEventListener('keydown', downHandler)\n      // Remove event listeners on cleanup\n      return () => {\n        window.removeEventListener('keydown', downHandler)\n      }\n    },\n    [onEnter]\n  ) // Empty array ensures that effect is only run on mount and unmount\n\n  return text\n}\n\nconst TextField = ({ onSubmit }) => {\n  const text = useTextField(onSubmit)\n\n  return <div className={style.textField}>{text}</div>\n}\n\nexport default TextField\n","import { FiUserCheck, FiUserX } from 'react-icons/fi'\n\n// Maps strings to icons\nexport default {\n  FiUserCheck,\n  FiUserX,\n}\n","import React, { useState, useRef, useEffect } from 'react'\n\nimport { BrowserQRCodeReader } from '@zxing/library'\nimport { useCloseModal } from '../modal/useModal'\n\nconst QrScanner = ({ onSubmit }) => {\n  const videoElement = useRef(null)\n  const close = useCloseModal()\n  const codeReader = new BrowserQRCodeReader()\n\n  useEffect(() => {\n    codeReader\n      .decodeFromInputVideoDevice(undefined, videoElement.current)\n      .then(result => {\n        onSubmit({ text: result.text })\n        close()\n      })\n      .catch(err => console.error(err))\n\n    return () => codeReader.reset()\n  }, [])\n  return <video ref={videoElement} muted style={{ display: 'block' }} />\n}\n\nexport default QrScanner\n","import React, { useState, useRef, useEffect } from 'react'\nimport { FiVideo } from 'react-icons/fi'\n\nimport TextField from './textField'\nimport style from '../../scss/checkin.module.scss'\nimport useFeedback from './useFeedback'\nimport registerUser from './registerUser'\nimport useModal from '../modal/useModal'\nimport QrScanner from './qrScanner'\nimport { IconButton } from '../ui/buttons'\n\nconst Checkin = ({ events, shiftDown }) => {\n  const [currentEvent, setCurrentEvent] = useState(events[0])\n  const [currentAction, setCurrentAction] = useState(0)\n  const [feedback, setFeedback] = useFeedback()\n\n  const action = shiftDown\n    ? (currentAction + 1) % currentEvent.actions.length\n    : currentAction\n\n  const textFieldOnSubmit = ({ text }) => {\n    registerUser(setFeedback, currentEvent.id, text, action)\n  }\n\n  const [openModal] = useModal(QrScanner)\n\n  if (!currentEvent) {\n    return 'Du är inte dörrvakt på något evenemang.'\n  }\n\n  return (\n    <div className={`${style.container} ${feedback && feedback.class}`}>\n      <h1>Bleep Bloop</h1>\n      <IconButton\n        iconComponent={FiVideo}\n        text=\"QR\"\n        onClick={() =>\n          openModal(\n            'QR-registrering',\n            { onSubmit: textFieldOnSubmit },\n            { noPadding: true }\n          )\n        }\n      />\n      <div className={style.controlContainer}>\n        <select\n          onChange={e => {\n            setCurrentEvent(\n              events.filter(event => `${event.id}` === e.target.value)[0]\n            )\n          }}\n          value={currentEvent.id}\n        >\n          {events.map(event => (\n            <option key={event.id} value={event.id}>\n              {event.name}\n            </option>\n          ))}\n        </select>\n        <TextField onSubmit={textFieldOnSubmit} />\n        {currentEvent.actions.length > 0 && (\n          <select\n            onChange={e => {\n              setCurrentAction(e.target.value)\n            }}\n            value={action}\n            disabled={currentEvent.actions.length < 2}\n          >\n            {currentEvent.actions.map((a, i) => (\n              <option key={a} value={i}>\n                {a}\n              </option>\n            ))}\n          </select>\n        )}\n      </div>\n\n      {currentEvent.actions.length > 1 && (\n        <p>Håll ner shift för att temporärt byta funktion.</p>\n      )}\n\n      <div className={style.feedback}>\n        {feedback && feedback.icon}\n        <p>{feedback && feedback.text}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Checkin\n","import { useEffect, useState } from 'react'\n\nexport default function useFeedback() {\n  // State for keeping track of whether key is pressed\n  const [feedback, setFeedback] = useState(null)\n\n  let timeout = null\n\n  // Remove event listeners on cleanup\n  // Empty array ensures that effect is only run on mount and unmount\n  useEffect(\n    () => () => {\n      clearTimeout(timeout)\n    },\n    []\n  )\n\n  return [\n    feedback,\n    f => {\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        setFeedback(null)\n      }, 1500)\n      setFeedback(f)\n    },\n  ]\n}\n","import React from 'react'\nimport { FiCheck, FiX } from 'react-icons/fi'\nimport { post } from '../request'\nimport style from '../../scss/checkin.module.scss'\nimport iconMap from '../iconMap'\n\nexport default (setFeedback, eventId, identifier, action) => {\n  const setFeedbackExtended = (text, icon, error) => {\n    const defaultIcon = error ? <FiX /> : <FiCheck />\n    const defaultText = error\n      ? 'Okänt fel.'\n      : 'Allt gick väl, men det är oklart vad som faktiskt hände.'\n\n    const Icon = iconMap[icon]\n\n    setFeedback({\n      text: text || defaultText,\n      icon: Icon ? <Icon /> : defaultIcon,\n      class: error ? style.fail : style.success,\n    })\n  }\n\n  post('/checkin/register/', {\n    event: eventId,\n    identifier,\n    action,\n  })\n    .then(res => {\n      let detail\n      let icon\n\n      if (res.data) ({ detail, icon } = res.data)\n\n      setFeedbackExtended(detail, icon, false)\n    })\n    .catch(err => {\n      let detail\n      let icon\n\n      if (err.response && err.response.data)\n        ({ detail, icon } = err.response.data)\n\n      setFeedbackExtended(detail, icon, true)\n    })\n}\n","import React from 'react'\nimport Checkin from '.'\nimport useKeyPress from '../useKeyPress'\nimport { useEndpoint } from '../request'\n\nconst CheckinPage = () => {\n  const [events] = useEndpoint({ endpoint: '/checkin/events/' })\n  const shiftDown = useKeyPress('Shift')\n\n  return events ? (\n    <Checkin events={events.reverse()} shiftDown={shiftDown} />\n  ) : null\n}\n\nexport default CheckinPage\n","import { useEffect, useState } from 'react'\n\nexport default function useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false)\n\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    if (key === targetKey) {\n      setKeyPressed(true)\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false)\n    }\n  }\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed\n}\n"],"sourceRoot":""}