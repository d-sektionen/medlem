{"version":3,"file":"component---src-components-voting-counter-page-js-4fe37456302c75989cf7.js","mappings":"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","sources":["webpack://medlem/./src/components/checkin/doorkeeperPanel.js","webpack://medlem/./src/components/ui/list.js","webpack://medlem/./src/components/ui/titleChooser.js","webpack://medlem/./src/components/votingCounter/meetingPanel.js","webpack://medlem/./src/components/votingCounter/voteStats.js","webpack://medlem/./src/components/votingCounter/votePanel.js","webpack://medlem/./src/components/votingCounter/attendantPanel.js","webpack://medlem/./src/components/votingCounter/speakerPanel.js","webpack://medlem/./src/components/votingCounter/page.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { FiTrash2 } from 'react-icons/fi'\nimport { List, ListItem, ListButton } from '../ui/list'\nimport useSWR from 'swr'\nimport { post, del } from '../request'\n\nconst DoorkeeperPanel = ({ event }) => {\n  const [input, setInput] = useState('')\n\n  const { data: doorkeepers, mutate } = useSWR(\n    `/checkin/doorkeepers/?event_id=${event.id}`\n  )\n\n  const create = async data => {\n    const { data: newDoorkeeper } = await post('/checkin/doorkeepers/', data)\n    mutate([...doorkeepers, newDoorkeeper])\n    return newDoorkeeper\n  }\n\n  const destroy = async id => {\n    await del(`/checkin/doorkeepers/${id}/`)\n    mutate(doorkeepers.filter(d => d.id !== id))\n  }\n\n  return (\n    <div>\n      <h2>Dörrvakter</h2>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          setInput('')\n\n          create({\n            user_username: input,\n            event_id: event.id,\n          })\n        }}\n      >\n        <input\n          value={input}\n          placeholder=\"LiU-ID\"\n          onChange={e => setInput(e.target.value)}\n        />\n      </form>\n      <List>\n        {doorkeepers &&\n          doorkeepers.map(doorkeeper => (\n            <ListItem\n              title={doorkeeper.user.pretty_name}\n              key={doorkeeper.id}\n              buttons={[\n                <ListButton\n                  onClick={() => destroy(doorkeeper.id)}\n                  iconComponent={FiTrash2}\n                  text=\"Ta bort dörrvakt\"\n                  key=\"remove\"\n                />,\n              ]}\n            />\n          ))}\n      </List>\n    </div>\n  )\n}\n\nexport default DoorkeeperPanel\n","import React from 'react'\n\nimport {listItemColor, listText, listButtons, list, listButton} from '../../scss/ui.module.scss'\n\nconst List = ({ children }) => <ul className={list}>{children}</ul>\n\nconst ListItem = ({ title, subtitle, buttons, color }) => (\n  <li\n    className={color ? listItemColor : ''}\n    style={{ borderColor: color }}\n  >\n    <div className={listText}>\n      <h3>{title}</h3>\n      <p>{subtitle}</p>\n    </div>\n    <div className={listButtons}>{buttons}</div>\n  </li>\n)\n\nListItem.defaultProps = {\n  color: null,\n}\n\nconst ListButton = ({ href, onClick, iconComponent: Icon, text, shown }) =>\n  shown ? (\n    <>\n      {href ? (\n        <a\n          className={listButton}\n          href={href}\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </a>\n      ) : (\n        <button\n          className={listButton}\n          type=\"button\"\n          onClick={onClick}\n          title={text}\n        >\n          <Icon />\n        </button>\n      )}\n    </>\n  ) : (\n    <></>\n  )\n\nListButton.defaultProps = {\n  shown: true,\n}\n\nexport { List, ListItem, ListButton }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {actions, titleChooser, selectContainer, hint} from '../../scss/ui.module.scss'\nimport { Button } from './buttons'\n\nconst TitleChooser = ({\n  title,\n  choices,\n  categorizedChoices,\n  choice,\n  setChoice,\n  label,\n  action,\n  actionLabel,\n  noChoicesLabel,\n}) => {\n  const allChoices = [\n    ...(choices || []),\n    // merge all categorized choices to single array.\n    ...Object.keys(categorizedChoices).reduce(\n      (accumulator, category) => [\n        ...accumulator,\n        ...categorizedChoices[category],\n      ],\n      []\n    ),\n  ]\n  return (\n    <div className={titleChooser}>\n      <h1>{title}</h1>\n      <div className={actions}>\n        {allChoices.length ? (\n          <div className={selectContainer}>\n            <select\n              onChange={e => {\n                const selectedValue = e.target.value\n                const c =\n                  selectedValue === ''\n                    ? null\n                    : allChoices.filter(i => `${i.id}` === selectedValue)[0]\n                setChoice(c)\n              }}\n              value={choice ? choice.id : ''}\n            >\n              <option hidden value=\"\" />\n              {choices.sort().map(c => (\n                <option value={c.id} key={c.id}>\n                  {c[label]}\n                </option>\n              ))}\n              {Object.keys(categorizedChoices)\n                .sort()\n                .map(key => (\n                  <optgroup label={key} key={key}>\n                    {categorizedChoices[key].sort().map(c => (\n                      <option value={c.id} key={c.id}>\n                        {c[label]}\n                      </option>\n                    ))}\n                  </optgroup>\n                ))}\n            </select>\n            {choice === null && (\n              <div className={hint}>Välj ett objekt</div>\n            )}\n          </div>\n        ) : (\n          <span>{noChoicesLabel}</span>\n        )}\n\n        {action && <Button onClick={action}>{actionLabel}</Button>}\n      </div>\n    </div>\n  )\n}\nTitleChooser.defaultProps = {\n  categorizedChoices: {},\n  choices: [],\n  action: null,\n  actionLabel: '',\n  choice: null,\n  noChoicesLabel: '',\n  setChoice: () => {},\n  label: '',\n}\n\nTitleChooser.propTypes = {\n  title: PropTypes.string.isRequired,\n  choices: PropTypes.array,\n  categorizedChoices: PropTypes.object,\n  choice: PropTypes.object,\n  setChoice: PropTypes.func,\n  label: PropTypes.string,\n  action: PropTypes.func,\n  actionLabel: PropTypes.string,\n  noChoicesLabel: PropTypes.string,\n}\n\nexport default TitleChooser\n","import React from 'react'\nimport { ButtonGroup, Button } from '../ui/buttons'\nimport { patch } from '../request'\n\nconst MeetingPanel = ({ currentMeeting, updatePatch }) => (\n  <div>\n    <h2>Mötesinfo</h2>\n    <h3>{currentMeeting.name}</h3>\n    {currentMeeting.description && (\n      <p style={{ whiteSpace: 'pre-line' }}>{currentMeeting.description}</p>\n    )}\n    <h3>Detaljer</h3>\n    <ul>\n      <li>\n        {currentMeeting.enable_speaker_requests\n          ? 'Talarlista aktiverad'\n          : 'Talarlista inaktiverad'}\n      </li>\n      <li>\n        {currentMeeting.open_attendance\n          ? 'Öppen incheckning'\n          : 'Stängd incheckning'}\n      </li>\n      <li>{`Mötesdata rensas: ${currentMeeting.clear_data}`}</li>\n    </ul>\n  </div>\n)\n\nexport default MeetingPanel\n","import React, { useRef, useEffect } from 'react'\nimport useSWR from 'swr'\n\nconst VoteStats = ({ currentMeeting, voteId }) => {\n  const { data } = useSWR(() => voteId && `/voting/admin-votes/${voteId}/`)\n\n  const voteSum = (data\n    ? data.alternatives.map(alt => alt.num_votes)\n    : []\n  ).reduce((a, b) => a + b, 0)\n\n  return (\n    <div>\n      <ul>\n        {data &&\n          data.alternatives.map(alt => (\n            <li key={alt.text}>\n              {`${alt.text}: ${alt.num_votes}`}\n              {voteSum\n                ? ` (${\n                    alt.num_votes\n                      ? Math.round((1000 * alt.num_votes) / voteSum) / 10\n                      : 0\n                  }%)`\n                : ''}\n            </li>\n          ))}\n      </ul>\n      <p>\n        {'Summa: '}\n        {voteSum}\n      </p>\n    </div>\n  )\n}\n\nexport default VoteStats\n","import React, { useEffect } from 'react'\nimport useSWR from 'swr'\nimport { FiBarChart2, FiEdit2 } from 'react-icons/fi'\n\nimport useModal, { useCloseModal } from '../modal/useModal'\nimport VoteStats from './voteStats'\nimport { List, ListItem, ListButton } from '../ui/list'\nimport { Button } from '../ui/buttons'\nimport { post, put } from '../request'\n\nconst VotePanel = ({ currentMeeting }) => {\n  const { data: votes, mutate } = useSWR(\n    `/voting/admin-votes/?event_id=${currentMeeting.id}`\n  )\n\n  const create = async data => {\n    const { data: newVote } = await post('/voting/admin-votes/', data)\n    mutate([...votes, newVote])\n    return newVote\n  }\n\n  const update = async (id, data) => {\n    const { data: updatedVote } = await put(`/voting/admin-votes/${id}/`, data)\n    mutate([...votes.filter(v => v.id !== id), updatedVote])\n    return updatedVote\n  }\n\n  const [openChartModal] = useModal(VoteStats)\n  const closeModal = useCloseModal()\n\n  // Close modal when a vote is created\n  useEffect(closeModal, [votes])\n\n  // if (votes === null) return <></>\n\n  return (\n    <div>\n      <h2>Omröstningar</h2>\n      <List>\n        {votes &&\n          votes\n            .filter(vote => vote.meeting === currentMeeting.id)\n            .map(vote => (\n              <ListItem\n                title={vote.question}\n                subtitle={vote.open ? 'Active' : undefined}\n                key={vote.id}\n                buttons={[\n                  <ListButton\n                    onClick={() =>\n                      openChartModal(`Resultat av \"${vote.question}\"`, {\n                        voteId: vote.id,\n                      })\n                    }\n                    iconComponent={FiBarChart2}\n                    text=\"Resultat\"\n                    key=\"results\"\n                  />,\n                ]}\n              />\n            ))}\n      </List>\n    </div>\n  )\n}\n\nexport default VotePanel\n","import React, { useState, useEffect } from 'react'\nimport { FiTrash2 } from 'react-icons/fi'\n\nimport { List, ListButton, ListItem } from '../ui/list'\nimport { Button, ButtonGroup } from '../ui/buttons'\nimport { del, post } from '../request'\nimport useSWR from 'swr'\n\nconst getMemberAttendants = attendants => {\n  const memberAttendants = attendants.filter(\n    attendant => attendant.has_voting_rights\n  )\n  return memberAttendants\n}\n\nconst AttendantPanel = ({ currentMeeting }) => {\n  const [input, setInput] = useState('')\n\n  const { data: attendants, mutate } = useSWR(\n    () => `/voting/attendants/?meeting_id=${currentMeeting.id}`,\n    { refreshInterval: 4000 }\n  )\n\n  if (attendants === null) return <></>\n\n  return (\n    <div>\n      <h2>Deltagare</h2>\n\n      <div>\n        <p>{`Röstlängd: ${\n          attendants ? getMemberAttendants(attendants).length : 0\n        }`}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default AttendantPanel\n","import React, { useState, useEffect, useContext } from 'react'\nimport useSWR from 'swr'\n\nimport { FiTrash2 } from 'react-icons/fi'\nimport { List, ListButton, ListItem } from '../ui/list'\nimport { Button } from '../ui/buttons'\nimport { UserContext } from '../layout/layout'\nimport { post, del } from '../request'\n\nconst SpeakerPanel = ({ meeting }) => {\n  const { data: speakers, mutate } = useSWR(\n    () => meeting && `/voting/speakers/?meeting_id=${meeting.id}`,\n    { refreshInterval: 4000 }\n  )\n\n  return (\n    <div>\n      <h2>Talarlista</h2>\n      <List>\n        {speakers &&\n          speakers.map(s => (\n            <ListItem\n              title={s.user.pretty_name}\n              subtitle={s.prioritized ? 'Replik' : null}\n              key={s.id}\n              buttons={[\n                <ListButton\n                  onClick={async () => {\n                    await del(`/voting/speakers/${s.id}`)\n                    mutate(speakers.filter(x => x.id !== s.id))\n                  }}\n                  iconComponent={FiTrash2}\n                  text=\"Ta bort från talarlista\"\n                  key=\"remove\"\n                />,\n              ]}\n            />\n          ))}\n      </List>\n    </div>\n  )\n}\n\nexport default SpeakerPanel\n","import React, { useState, useEffect } from 'react'\nimport useSWR from 'swr'\n\nimport MeetingPanel from './meetingPanel'\nimport DoorkeeperPanel from '../checkin/doorkeeperPanel'\nimport VotePanel from './votePanel'\nimport AttendantPanel from './attendantPanel'\nimport { GridContainer, GridItem } from '../ui/grid'\nimport SpeakerPanel from './speakerPanel'\nimport TitleChooser from '../ui/titleChooser'\nimport useModal, { useCloseModal } from '../modal/useModal'\nimport { post, patch } from '../request'\nimport BigPixels from '../layout/bigPixels'\n\nconst VotingAdminPage = ({ pageContext: { title } }) => {\n  const [currentMeeting, setCurrentMeeting] = useState(null)\n  const { data: unorderedMeetings, mutate } = useSWR('/voting/admin-meetings/')\n  const closeModal = useCloseModal()\n\n  const create = async data => {\n    const { data: newMeeting } = await post('/voting/admin-meetings/', data)\n    mutate([...unorderedMeetings, newMeeting])\n  }\n\n  const updatePatch = async data => {\n    const { data: updatedMeeting } = await patch(\n      `/voting/admin-meetings/${currentMeeting.id}/`,\n      data\n    )\n    mutate([\n      ...unorderedMeetings.filter(meeting => meeting.id !== currentMeeting.id),\n      updatedMeeting,\n    ])\n  }\n\n  const meetings = unorderedMeetings ? [...unorderedMeetings].reverse() : null\n\n  // sync currentMeeting with updated meetings\n  useEffect(\n    () => {\n      if (currentMeeting)\n        setCurrentMeeting(meetings.find(m => m.id === currentMeeting.id))\n    },\n    [meetings]\n  )\n\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem fullWidth>\n          <TitleChooser\n            title={title}\n            choice={currentMeeting}\n            setChoice={setCurrentMeeting}\n            choices={meetings}\n            label=\"name\"\n            noChoicesLabel=\"Det finns inga möten just nu.\"\n          />\n        </GridItem>\n        {currentMeeting && (\n          <>\n            <GridItem>\n              <MeetingPanel\n                currentMeeting={currentMeeting}\n                updatePatch={updatePatch}\n              />\n            </GridItem>\n            <GridItem>\n              <VotePanel currentMeeting={currentMeeting} />\n            </GridItem>\n            <GridItem>\n              <AttendantPanel currentMeeting={currentMeeting} />\n            </GridItem>\n          </>\n        )}\n      </GridContainer>\n    </BigPixels>\n  )\n}\n\nexport default VotingAdminPage\n"],"names":["_ref","event","input","setInput","useState","data","doorkeepers","mutate","useSWR","id","React","onSubmit","e","preventDefault","async","newDoorkeeper","post","concat","_toConsumableArray","create","user_username","event_id","value","placeholder","onChange","target","List","map","doorkeeper","ListItem","title","user","pretty_name","key","buttons","ListButton","onClick","del","filter","d","destroy","iconComponent","FiTrash2","text","children","className","list","_ref2","subtitle","color","listItemColor","style","borderColor","listText","listButtons","defaultProps","_ref3","href","Icon","shown","listButton","type","TitleChooser","choices","categorizedChoices","choice","setChoice","label","action","actionLabel","noChoicesLabel","allChoices","Object","keys","reduce","accumulator","category","titleChooser","actions","length","selectContainer","selectedValue","c","i","hidden","sort","hint","Button","currentMeeting","updatePatch","name","description","whiteSpace","enable_speaker_requests","open_attendance","clear_data","voteId","voteSum","alternatives","alt","num_votes","a","b","Math","round","votes","openChartModal","useModal","VoteStats","closeModal","useCloseModal","useEffect","vote","meeting","question","open","undefined","FiBarChart2","attendants","refreshInterval","attendant","has_voting_rights","getMemberAttendants","pageContext","setCurrentMeeting","unorderedMeetings","meetings","reverse","find","m","BigPixels","GridContainer","GridItem","fullWidth","MeetingPanel","updatedMeeting","patch","VotePanel","AttendantPanel"],"sourceRoot":""}