{"version":3,"file":"component---src-components-vote-page-js-a222664da28e74c9e4a7.js","mappings":"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","sources":["webpack://medlem/./src/components/ui/list.js","webpack://medlem/./src/components/ui/titleChooser.js","webpack://medlem/./src/components/vote/speakerPanel.js","webpack://medlem/./src/components/vote/meetingInfoPanel.js","webpack://medlem/./src/components/vote/voteForm.js","webpack://medlem/./src/components/vote/votePanel.js","webpack://medlem/./src/scss/vote.module.scss","webpack://medlem/./src/components/vote/page.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport {listItemColor, listText, listButtons, list, listButton} from '../../scss/ui.module.scss'\r\n\r\nconst List = ({ children }) => <ul className={list}>{children}</ul>\r\n\r\nconst ListItem = ({ title, subtitle, buttons, color }) => (\r\n  <li\r\n    className={color ? listItemColor : ''}\r\n    style={{ borderColor: color }}\r\n  >\r\n    <div className={listText}>\r\n      <h3>{title}</h3>\r\n      <p>{subtitle}</p>\r\n    </div>\r\n    <div className={listButtons}>{buttons}</div>\r\n  </li>\r\n)\r\n\r\nListItem.defaultProps = {\r\n  color: null,\r\n}\r\n\r\nconst ListButton = ({ href, onClick, iconComponent: Icon, text, shown }) =>\r\n  shown ? (\r\n    <>\r\n      {href ? (\r\n        <a\r\n          className={listButton}\r\n          href={href}\r\n          onClick={onClick}\r\n          title={text}\r\n        >\r\n          <Icon />\r\n        </a>\r\n      ) : (\r\n        <button\r\n          className={listButton}\r\n          type=\"button\"\r\n          onClick={onClick}\r\n          title={text}\r\n        >\r\n          <Icon />\r\n        </button>\r\n      )}\r\n    </>\r\n  ) : (\r\n    <></>\r\n  )\r\n\r\nListButton.defaultProps = {\r\n  shown: true,\r\n}\r\n\r\nexport { List, ListItem, ListButton }\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {actions, titleChooser, selectContainer, hint} from '../../scss/ui.module.scss'\r\nimport { Button } from './buttons'\r\n\r\nconst TitleChooser = ({\r\n  title,\r\n  choices,\r\n  categorizedChoices,\r\n  choice,\r\n  setChoice,\r\n  label,\r\n  action,\r\n  actionLabel,\r\n  noChoicesLabel,\r\n  onChange,\r\n}) => {\r\n  const allChoices = [\r\n    ...(choices || []),\r\n    // merge all categorized choices to single array.\r\n    ...Object.keys(categorizedChoices).reduce(\r\n      (accumulator, category) => [\r\n        ...accumulator,\r\n        ...categorizedChoices[category],\r\n      ],\r\n      []\r\n    ),\r\n  ]\r\n\r\n  // Re-select the previously selected choice if there is one\r\n  useEffect(() => {\r\n    const savedChoice = sessionStorage.getItem(`${title}-selectedItem`)\r\n    if (!savedChoice) {\r\n      return;\r\n    }\r\n\r\n    const selectedItem = allChoices.find((item) => `${item.id}` === savedChoice)\r\n    if (selectedItem) {\r\n      setChoice(selectedItem)\r\n    }\r\n\r\n  }, [choices, categorizedChoices])\r\n\r\n  return (\r\n    <div className={titleChooser}>\r\n      <h1>{title}</h1>\r\n      <div className={actions}>\r\n        {allChoices.length ? (\r\n          <div className={selectContainer}>\r\n            <select\r\n              onChange={e => {\r\n                const selectedValue = e.target.value\r\n                const selectedItem =\r\n                  selectedValue === ''\r\n                    ? null\r\n                    : allChoices.filter(i => `${i.id}` === selectedValue)[0]\r\n                setChoice(selectedItem)\r\n                onChange(e)\r\n\r\n                // Save the selected item for refresh re-select\r\n                if (selectedItem) {\r\n                  sessionStorage.setItem(`${title}-selectedItem`, selectedItem.id)\r\n                } else {\r\n                  sessionStorage.removeItem(`${title}-selectedItem`)\r\n                }\r\n              }}\r\n              value={choice ? choice.id : ''}\r\n            >\r\n              <option hidden value=\"\" />\r\n              {choices.sort().map(c => (\r\n                <option value={c.id} key={c.id}>\r\n                  {c[label]}\r\n                </option>\r\n              ))}\r\n              {Object.keys(categorizedChoices)\r\n                .sort()\r\n                .map(key => (\r\n                  <optgroup label={key} key={key}>\r\n                    {categorizedChoices[key].sort().map(c => (\r\n                      <option value={c.id} key={c.id}>\r\n                        {c[label]}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                ))}\r\n            </select>\r\n            {choice === null && (\r\n              <div className={hint}>Välj ett objekt</div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <span>{noChoicesLabel}</span>\r\n        )}\r\n\r\n        {action && <Button onClick={action}>{actionLabel}</Button>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nTitleChooser.defaultProps = {\r\n  categorizedChoices: {},\r\n  choices: [],\r\n  action: null,\r\n  actionLabel: '',\r\n  choice: null,\r\n  noChoicesLabel: '',\r\n  setChoice: () => {},\r\n  label: '',\r\n  onChange: () => {},\r\n}\r\n\r\nTitleChooser.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  choices: PropTypes.array,\r\n  categorizedChoices: PropTypes.object,\r\n  choice: PropTypes.object,\r\n  setChoice: PropTypes.func,\r\n  label: PropTypes.string,\r\n  action: PropTypes.func,\r\n  actionLabel: PropTypes.string,\r\n  noChoicesLabel: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n}\r\n\r\nexport default TitleChooser\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport useSWR from 'swr'\r\n\r\nimport { FiTrash2 } from 'react-icons/fi'\r\nimport { List, ListButton, ListItem } from '../ui/list'\r\nimport { Button, ButtonGroup } from '../ui/buttons'\r\nimport { UserContext } from '../layout/layout'\r\nimport { post, del } from '../request'\r\n\r\nconst SpeakerPanel = ({ meeting }) => {\r\n  const { data: speakers, mutate } = useSWR(\r\n    () => meeting && `/voting/speakers/?meeting_id=${meeting.id}`\r\n  )\r\n\r\n  const [user] = useContext(UserContext)\r\n\r\n  const errorMessage = meeting.attending\r\n    ? 'Talarlista är inaktiverad för mötet.'\r\n    : 'Du måste vara registrerad på mötet för att kunna skriva upp dig på talarlistan.'\r\n\r\n  return (\r\n    <div>\r\n      <h2>Talarlista</h2>\r\n      {meeting.attending && meeting.enable_speaker_requests ? (\r\n        <ButtonGroup>\r\n          <Button\r\n            onClick={async () => {\r\n              const { data: newSpeaker } = await post('/voting/speakers/', {\r\n                meeting_id: meeting.id,\r\n              })\r\n              mutate([...speakers, newSpeaker])\r\n            }}\r\n          >\r\n            Jag vill tala!\r\n          </Button>\r\n          <Button\r\n            onClick={async () => {\r\n              const { data: newSpeaker } = await post('/voting/speakers/', {\r\n                meeting_id: meeting.id,\r\n                prioritized: true,\r\n              })\r\n              mutate([...speakers, newSpeaker])\r\n            }}\r\n          >\r\n            Replik!\r\n          </Button>\r\n        </ButtonGroup>\r\n      ) : (\r\n        <p>{errorMessage}</p>\r\n      )}\r\n      <List>\r\n        {speakers &&\r\n          speakers.map(s => (\r\n            <ListItem\r\n              title={s.user.pretty_name}\r\n              subtitle={s.prioritized ? 'Replik' : null}\r\n              key={s.id}\r\n              buttons={[\r\n                <ListButton\r\n                  shown={user.id === s.user.id}\r\n                  onClick={async () => {\r\n                    const prioQS = s.prioritized ? '&prioritized' : ''\r\n                    await del(\r\n                      `/voting/speakers/?meeting_id=${meeting.id}${prioQS}`\r\n                    )\r\n                    mutate(speakers.filter(x => x.id !== s.id))\r\n                  }}\r\n                  iconComponent={FiTrash2}\r\n                  text=\"Lämna talarlista\"\r\n                  key=\"remove\"\r\n                />,\r\n              ]}\r\n            />\r\n          ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpeakerPanel\r\n","import React from 'react'\r\nimport { Button } from '../ui/buttons'\r\nimport { post, del } from '../request'\r\n\r\nconst MeetingInfoPanel = ({ currentMeeting, revalidate }) => (\r\n  <div>\r\n    <h2>Mötesinfo</h2>\r\n    <h3>{currentMeeting.name}</h3>\r\n    <p>\r\n      <strong>\r\n        {currentMeeting.attending\r\n          ? 'Du deltar på mötet.'\r\n          : 'Du är inte registrerad på mötet.'}\r\n      </strong>\r\n    </p>\r\n    {currentMeeting.description && (\r\n      <p style={{ whiteSpace: 'pre-line' }}>{currentMeeting.description}</p>\r\n    )}\r\n    {currentMeeting.open_attendance && (\r\n      <p>\r\n        {currentMeeting.attending ? (\r\n          <Button\r\n            onClick={async () => {\r\n              await del(`/voting/attend/?meeting_id=${currentMeeting.id}`)\r\n              revalidate()\r\n            }}\r\n          >\r\n            Lämna röstlängden\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={async () => {\r\n              await post('/voting/attend/', { meeting_id: currentMeeting.id })\r\n              revalidate()\r\n            }}\r\n          >\r\n            Gå med i röstlängden\r\n          </Button>\r\n        )}\r\n      </p>\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default MeetingInfoPanel\r\n","import React, { Component, useState } from 'react'\r\nimport { post } from '../request'\r\n\r\nconst VoteForm = ({ vote, setErrors }) => {\r\n  const [checkedId, setCheckedId] = useState(-1)\r\n  const [successfullyVoted, setSuccessfullyVoted] = useState(false)\r\n\r\n  const placeVote = async () => {\r\n    setErrors({})\r\n\r\n    const voteData = {\r\n      vote_id: vote.id,\r\n      alternative_id: checkedId,\r\n    }\r\n\r\n    await post('/voting/made_votes/', voteData)\r\n      .then(() => setSuccessfullyVoted(true))\r\n      .catch(err => {\r\n        setErrors({ voteError: err.response.data.error })\r\n      })\r\n  }\r\n  const votingDisabled = checkedId === -1\r\n  const buttonText = votingDisabled ? 'Välj ett alternativ' : 'Rösta'\r\n  const alreadyVotedText = successfullyVoted\r\n    ? 'Tack för din röst!'\r\n    : 'Du har röstat i omröstningen.'\r\n\r\n  return (\r\n    <div>\r\n      <strong>{vote.question}</strong>\r\n      {vote.has_voted || successfullyVoted ? (\r\n        <p>{alreadyVotedText}</p>\r\n      ) : (\r\n        <>\r\n          <ul>\r\n            {vote.alternatives.map(({ text, id }) => (\r\n              <li key={id}>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    checked={checkedId === id}\r\n                    onChange={() => setCheckedId(id)}\r\n                  />\r\n                  {` ${text}`}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button type=\"button\" disabled={votingDisabled} onClick={placeVote}>\r\n            {buttonText}\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoteForm\r\n","import React, { useState } from 'react'\r\nimport useSWR from 'swr'\r\nimport VoteForm from './voteForm'\r\nimport { formError } from '../../scss/vote.module.scss'\r\n\r\nconst VotePanel = ({ meeting }) => {\r\n  const { data: votes } = useSWR(\r\n    () => `/voting/votes/?meeting_id=${meeting.id}`\r\n  )\r\n  const [errors, setErrors] = useState({})\r\n  const setFormErrors = errors => {\r\n    setErrors(errors)\r\n    setTimeout(() => setErrors({}), 3000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Rösta</h2>\r\n      {errors && <div className={formError}>{errors.voteError}</div>}\r\n      {votes && (\r\n        <>\r\n          {votes.length === 0 && <p>Det finns ingen aktiv omröstning</p>}\r\n          {votes.map(vote => (\r\n            <VoteForm key={vote.id} vote={vote} setErrors={setFormErrors} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VotePanel\r\n","// extracted by mini-css-extract-plugin\nexport var formError = \"vote-module--formError--40ff7\";","import React, { useContext, useState, useEffect } from 'react'\r\nimport useSWR from 'swr'\r\n\r\nimport BigPixels from '../layout/bigPixels'\r\nimport { GridContainer, GridItem } from '../ui/grid'\r\nimport TitleChooser from '../ui/titleChooser'\r\nimport SpeakerPanel from './speakerPanel'\r\nimport MeetingInfoPanel from './meetingInfoPanel'\r\nimport VotePanel from './votePanel'\r\n\r\nconst VotePage = ({ pageContext: { title } }) => {\r\n  const [currentMeeting, setCurrentMeeting] = useState(null)\r\n  const { data: meetings, revalidate } = useSWR('/voting/meetings/')\r\n\r\n  // sync currentMeeting with updated meetings\r\n  useEffect(\r\n    () => {\r\n      if (currentMeeting)\r\n        setCurrentMeeting(meetings.find(m => m.id === currentMeeting.id))\r\n    },\r\n    [meetings]\r\n  )\r\n\r\n  return (\r\n    <BigPixels>\r\n      <GridContainer>\r\n        <GridItem fullWidth>\r\n          <TitleChooser\r\n            title={title}\r\n            choice={currentMeeting}\r\n            setChoice={setCurrentMeeting}\r\n            choices={meetings}\r\n            label=\"name\"\r\n            noChoicesLabel=\"Det finns inga möten just nu.\"\r\n          />\r\n        </GridItem>\r\n        {currentMeeting && (\r\n          <>\r\n            <GridItem>\r\n              <MeetingInfoPanel\r\n                currentMeeting={currentMeeting}\r\n                revalidate={revalidate}\r\n              />\r\n            </GridItem>\r\n            {/* {currentMeeting.enable_speaker_requests && ( */}\r\n            <GridItem>\r\n              <SpeakerPanel meeting={currentMeeting} />\r\n            </GridItem>\r\n            {/* )} */}\r\n            <GridItem>\r\n              <VotePanel meeting={currentMeeting} />\r\n            </GridItem>\r\n          </>\r\n        )}\r\n      </GridContainer>\r\n    </BigPixels>\r\n  )\r\n}\r\nexport default VotePage\r\n"],"names":["List","_ref","children","React","className","list","ListItem","_ref2","title","subtitle","buttons","color","listItemColor","style","borderColor","listText","listButtons","defaultProps","ListButton","_ref3","href","onClick","iconComponent","Icon","text","shown","listButton","type","TitleChooser","choices","categorizedChoices","choice","setChoice","label","action","actionLabel","noChoicesLabel","onChange","allChoices","concat","_toConsumableArray","Object","keys","reduce","accumulator","category","useEffect","savedChoice","sessionStorage","getItem","selectedItem","find","item","id","titleChooser","actions","length","selectContainer","e","selectedValue","target","value","filter","i","setItem","removeItem","hidden","sort","map","c","key","hint","Button","meeting","data","speakers","mutate","useSWR","user","useContext","UserContext","errorMessage","attending","enable_speaker_requests","ButtonGroup","async","newSpeaker","post","meeting_id","prioritized","s","pretty_name","prioQS","del","x","FiTrash2","currentMeeting","revalidate","name","description","whiteSpace","open_attendance","vote","setErrors","checkedId","setCheckedId","useState","successfullyVoted","setSuccessfullyVoted","votingDisabled","buttonText","alreadyVotedText","question","has_voted","alternatives","checked","disabled","voteData","vote_id","alternative_id","then","catch","err","voteError","response","error","votes","errors","setFormErrors","setTimeout","VoteForm","pageContext","setCurrentMeeting","meetings","m","BigPixels","GridContainer","GridItem","fullWidth","MeetingInfoPanel","SpeakerPanel","VotePanel"],"sourceRoot":""}