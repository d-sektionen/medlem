{"version":3,"sources":["webpack:///./src/scss/preferences.module.scss","webpack:///./src/components/preferences/preferences.js","webpack:///./src/components/preferences/page.js"],"names":["module","exports","Preferences","Component","constructor","props","super","user","profile","this","state","infomailSubscriber","infomail_subscriber","liuCardId","liu_card_id","firstName","first_name","lastName","last_name","errors","handleChange","bind","handleSubmit","field","event","checkbox","setState","target","checked","value","setLoading","setUser","error","undefined","success","patch","then","res","status","data","catch","err","console","log","response","preventDefault","render","title","onSubmit","membership","className","style","inputLabel","onChange","e","type","PreferencesPage","pageContext","useContext","LoadingContext","UserContext"],"mappings":"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","file":"component---src-components-preferences-page-js-8ea56b7560d913f1031e.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputLabel\":\"preferences-module--inputLabel--37O6A\",\"error\":\"preferences-module--error--2-qsf\",\"success\":\"preferences-module--success--1uRT2\"};","import React, { Component } from 'react'\n\nimport { put, patch } from '../request'\n\nimport style from '../../scss/preferences.module.scss'\nimport { Button } from '../ui/buttons'\n\nclass Preferences extends Component {\n  constructor(props) {\n    super(props)\n\n    if (!props.user.profile) props.user.profile = {}\n\n    this.state = {\n      infomailSubscriber: props.user.profile.infomail_subscriber,\n      liuCardId: props.user.profile.liu_card_id,\n      firstName: props.user.first_name,\n      lastName: props.user.last_name,\n      errors: {},\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(field, event, checkbox = false) {\n    if (checkbox) this.setState({ [field]: event.target.checked })\n    else this.setState({ [field]: event.target.value })\n  }\n\n  handleSubmit(event) {\n    const { setLoading, setUser } = this.props\n\n    // reset errors\n    this.setState({ error: undefined, success: undefined, errors: {} })\n\n    setLoading(true)\n    patch('/account/user/me/', {\n      first_name: this.state.firstName,\n      last_name: this.state.lastName,\n      profile: {\n        liu_card_id: this.state.liuCardId,\n        infomail_subscriber: this.state.infomailSubscriber,\n      },\n    })\n      .then(res => {\n        setLoading(false)\n        if (res.status < 300) {\n          this.setState({ success: 'Ändringarna har sparats.' })\n          setUser(res.data)\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        setLoading(false)\n        if (!err.response) this.setState({ error: 'Nätverksfel.' })\n        else if (err.response.status === 400)\n          this.setState({ errors: err.response.data })\n        else this.setState({ error: 'Något gick fel.' })\n      })\n    event.preventDefault()\n  }\n\n  render() {\n    const { user, title } = this.props\n    const {\n      firstName,\n      lastName,\n      liuCardId,\n      infomailSubscriber,\n      errors,\n      error,\n      success,\n    } = this.state\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>{title}</h1>\n        <p>\n          <strong>\n            {user.membership\n              ? `Du är sektionsmedlem.`\n              : 'Du saknar sektionsmedlemsskap.'}\n          </strong>\n        </p>\n        <div>\n          <label className={style.inputLabel}>\n            Förnamn:\n            <input\n              value={firstName}\n              onChange={e => this.handleChange('firstName', e)}\n            />\n          </label>\n          {errors.first_name && (\n            <div className={style.error}>{errors.first_name}</div>\n          )}\n        </div>\n        <div>\n          <label className={style.inputLabel}>\n            Efternamn:\n            <input\n              value={lastName}\n              onChange={e => this.handleChange('lastName', e)}\n            />\n          </label>\n          {errors.last_name && (\n            <div className={style.error}>{errors.last_name}</div>\n          )}\n        </div>\n        <div>\n          <label className={style.inputLabel}>\n            LiU-kortnummer:\n            <input\n              value={liuCardId}\n              onChange={e => this.handleChange('liuCardId', e)}\n            />\n          </label>\n          {errors.profile && errors.profile.liu_card_id && (\n            <div className={style.error}>{errors.profile.liu_card_id}</div>\n          )}\n        </div>\n        <div>\n          <label className={style.inputLabel}>\n            Prenumerera på veckomailet:\n            <input\n              type=\"checkbox\"\n              checked={infomailSubscriber}\n              onChange={e => this.handleChange('infomailSubscriber', e, true)}\n            />\n          </label>\n          {errors.profile && errors.profile.infomail_subscriber && (\n            <div className={style.error}>\n              {errors.profile.infomail_subscriber}\n            </div>\n          )}\n        </div>\n        <div>\n          <Button type=\"submit\">Spara</Button>\n        </div>\n        <div>\n          {error && <div className={style.error}>{error}</div>}\n          {success && <div className={style.success}>{success}</div>}\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default Preferences\n","import React, { useContext } from 'react'\nimport { UserContext, LoadingContext } from '../layout/layout'\nimport Preferences from './preferences'\nimport BigPixels from '../layout/bigPixels'\nimport { GridContainer, GridItem } from '../ui/grid'\n\nconst PreferencesPage = ({ pageContext: { title } }) => {\n  const setLoading = useContext(LoadingContext)[1]\n  const [user, setUser] = useContext(UserContext)\n  return (\n    <BigPixels>\n      <GridContainer>\n        <GridItem>\n          <Preferences\n            user={user}\n            setUser={setUser}\n            setLoading={setLoading}\n            title={title}\n          />\n        </GridItem>\n      </GridContainer>\n    </BigPixels>\n  )\n}\n\nexport default PreferencesPage\n"],"sourceRoot":""}